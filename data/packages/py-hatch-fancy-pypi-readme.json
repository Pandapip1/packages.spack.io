{
    "name": "py-hatch-fancy-pypi-readme",
    "aliases": [],
    "versions": [
        {
            "name": "23.1.0",
            "sha256": "b1df44063094af1e8248ceacd47a92c9cf313d6b9823bf66af8a927c3960287d"
        },
        {
            "name": "22.7.0",
            "sha256": "dedf2ba0b81a2975abb1deee9310b2eb85d22380fda0d52869e760b5435aa596"
        }
    ],
    "latest_version": "23.1.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/hynek/hatch-fancy-pypi-readme",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Fancy PyPI READMEs with Hatch.\n",
    "dependencies": [
        {
            "name": "py-hatchling",
            "description": "Modern, extensible Python build backend."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-tomli",
            "description": "Tomli is a Python library for parsing TOML. Tomli is fully compatible\nwith TOML v1.0.0."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-httpx",
            "description": "HTTPX is a fully featured HTTP client for Python 3, which provides sync\nand async APIs, and support for both HTTP/1.1 and HTTP/2."
        },
        {
            "name": "py-gradio",
            "description": "Python library for easily interacting with trained machine learning\nmodels"
        },
        {
            "name": "py-jsonschema",
            "description": "Jsonschema: An(other) implementation of JSON Schema for Python."
        },
        {
            "name": "py-black",
            "description": "Black is the uncompromising Python code formatter. By using it, you\nagree to cede control over minutiae of hand-formatting. In return, Black\ngives you speed, determinism, and freedom from pycodestyle nagging about\nformatting."
        },
        {
            "name": "py-attrs",
            "description": "Classes Without Boilerplate"
        },
        {
            "name": "py-awkward",
            "description": "Manipulate JSON-like data with NumPy-like idioms."
        },
        {
            "name": "py-scikit-build",
            "description": "scikit-build is an improved build system generator for CPython\nC/C++/Fortran/Cython extensions. It provides better support for\nadditional compilers, build systems, cross compilation, and locating\ndependencies and their associated build requirements. The scikit-build\npackage is fundamentally just glue between the setuptools Python module\nand CMake."
        },
        {
            "name": "py-gradio-client",
            "description": "Python library for easily interacting with trained machine learning\nmodels"
        }
    ]
}