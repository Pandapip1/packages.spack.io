{
    "name": "sio",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "0.1",
            "sha256": "0407c0daeae53660c0562f9302a220f72ab51547050cd9fe9113b995804ab4b4"
        },
        {
            "name": "0.0.4",
            "sha256": "72e96e6a1cc8dd3641d3e2bb9876e75bf6af8074e1617220da9e52df522ef5c0"
        },
        {
            "name": "0.0.3",
            "sha256": "4c8b9c08480fb53cd10abb0e1260071a8c3f68d06a8acfd373f6560a916155cc"
        },
        {
            "name": "0.0.2",
            "sha256": "e4cd2aeaeaa23c1da2c20c5c08a9b72a31b16b7a8f5aa6d480dcd561ef667657"
        }
    ],
    "latest_version": "0.1",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "builtin_zlib",
            "default": true,
            "description": "Use and statically link against a builtin version of zlib"
        },
        {
            "name": "cxxstd",
            "default": "17",
            "description": "Use the specified C++ standard when building."
        }
    ],
    "homepage": "https://github.com/iLCSoft/SIO",
    "maintainers": [
        "jmcarcell",
        "tmadlener",
        "vvolkl"
    ],
    "patches": [],
    "resources": [],
    "description": "SIO is a persistency solution for reading and writing binary data in SIO\nstructures called record and block. SIO has originally been implemented\nas persistency layer for LCIO.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "zlib-api",
            "description": "zlib replacement with optimizations for next generation systems."
        }
    ],
    "dependent_to": [
        {
            "name": "podio",
            "description": "PODIO, or plain-old-data I/O, is a C++ library to support the creation\nand handling of data models in particle physics."
        },
        {
            "name": "lcio",
            "description": "HEP Library for Linear Collider Input/Output"
        }
    ]
}