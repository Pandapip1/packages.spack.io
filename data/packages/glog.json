{
    "name": "glog",
    "aliases": [],
    "versions": [
        {
            "name": "0.6.0",
            "sha256": "8a83bf982f37bb70825df71a9709fa90ea9f4447fb3c099e1d720a439d88bad6"
        },
        {
            "name": "0.4.0",
            "sha256": "f28359aeba12f30d73d9e4711ef356dc842886968112162bc73002645139c39c"
        },
        {
            "name": "0.3.5",
            "sha256": "7580e408a2c0b5a89ca214739978ce6ff480b5e7d8d7698a2aa92fadc484d1e0"
        },
        {
            "name": "0.3.4",
            "sha256": "ce99d58dce74458f7656a68935d7a0c048fa7b4626566a71b7f4e545920ceb10"
        },
        {
            "name": "0.3.3",
            "sha256": "544e178644bd9b454768c2c91716c3b8365cc5d47adfbdbaecd8cf3fa17adfcb"
        }
    ],
    "latest_version": "0.6.0",
    "build_system": "Package",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "generic",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/google/glog",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "C++ implementation of the Google logging module.\n",
    "dependencies": [
        {
            "name": "gflags",
            "description": "The gflags package contains a C++ library that implements commandline\nflags processing. It includes built-in support for standard types such\nas string and the ability to define flags in the source file in which\nthey are used. Online documentation available at:\nhttps://gflags.github.io/gflags/"
        },
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        }
    ],
    "dependent_to": [
        {
            "name": "folly",
            "description": "Folly (acronymed loosely after Facebook Open Source Library) is a\nlibrary of C++11 components designed with practicality and efficiency in\nmind. Folly contains a variety of core library components used\nextensively at Facebook. In particular, it's often a dependency of\nFacebook's other open source C++ efforts and place where those projects\ncan share code."
        },
        {
            "name": "hermes",
            "description": "Hermes is a heterogeneous-aware, multi-tiered, dynamic, and distributed\nI/O buffering system that aims to significantly accelerate I/O\nperformance."
        },
        {
            "name": "caffe",
            "description": "Caffe is a deep learning framework made with expression, speed, and\nmodularity in mind. It is developed by the Berkeley Vision and Learning\nCenter (BVLC) and by community contributors."
        },
        {
            "name": "py-or-tools",
            "description": "This project hosts operations research tools developed at Google and\nmade available as open source under the Apache 2.0 License."
        },
        {
            "name": "or-tools",
            "description": "This project hosts operations research tools developed at Google and\nmade available as open source under the Apache 2.0 License."
        },
        {
            "name": "gnina",
            "description": "gnina (pronounced NEE-na) is a molecular docking program with integrated\nsupport for scoring and optimizing ligands using convolutional neural\nnetworks."
        },
        {
            "name": "ceres-solver",
            "description": "Ceres Solver is an open source C++ library for modeling and solving\nlarge, complicated optimization problems. It can be used to solve Non-\nlinear Least Squares problems with bounds constraints and general\nunconstrained optimization problems. It is a mature, feature rich, and\nperformant library that has been used in production at Google since\n2010."
        },
        {
            "name": "opencv",
            "description": "OpenCV (Open Source Computer Vision Library) is an open source computer\nvision and machine learning software library."
        }
    ]
}