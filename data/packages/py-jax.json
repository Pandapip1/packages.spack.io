{
    "name": "py-jax",
    "aliases": [],
    "versions": [
        {
            "name": "0.4.3",
            "sha256": "d43f08f940aa30eb339965cfb3d6bee2296537b0dc2f0c65ccae3009279529ae"
        },
        {
            "name": "0.3.23",
            "sha256": "bff436e15552a82c0ebdef32737043b799e1e10124423c57a6ae6118c3a7b6cd"
        },
        {
            "name": "0.2.25",
            "sha256": "822e8d1e06257eaa0fdc4c0a0686c4556e9f33647fa2a766755f984786ae7446"
        }
    ],
    "latest_version": "0.4.3",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/google/jax",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "JAX is Autograd and XLA, brought together for high-performance machine\nlearning research. With its updated version of Autograd, JAX can\nautomatically differentiate native Python and NumPy functions. It can\ndifferentiate through loops, branches, recursion, and closures, and it\ncan take derivatives of derivatives of derivatives. It supports reverse-\nmode differentiation (a.k.a. backpropagation) via grad as well as\nforward-mode differentiation, and the two can be composed arbitrarily to\nany order.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-opt-einsum",
            "description": "Optimized Einsum: A tensor contraction order optimizer."
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-jaxlib",
            "description": "XLA library for Jax"
        },
        {
            "name": "py-absl-py",
            "description": "This repository is a collection of Python library code for building\nPython applications. The code is collected from Google's own Python code\nbase, and has been extensively tested and used in production."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-etils",
            "description": "etils (eclectic utils) is an open-source collection of utils for python."
        }
    ],
    "dependent_to": [
        {
            "name": "py-jmp",
            "description": "JMP is a Mixed Precision library for JAX."
        },
        {
            "name": "py-alphafold",
            "description": "AlphaFold is an AI system developed by DeepMind that predicts a\nprotein's 3D structure from its amino acid sequence. It regularly\nachieves accuracy competitive with experiment."
        },
        {
            "name": "py-mpi4jax",
            "description": "Zero-copy MPI communication of JAX arrays, for turbo-charged HPC\napplications in Python."
        },
        {
            "name": "py-dm-haiku",
            "description": "JAX-based neural network library"
        },
        {
            "name": "py-chex",
            "description": "Chex is a library of utilities for helping to write reliable JAX code."
        }
    ]
}