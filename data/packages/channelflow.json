{
    "name": "channelflow",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        }
    ],
    "latest_version": "master",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "~mpi",
            "spec": "netcdf=parallel",
            "description": "channelflow: Parallel NetCDF requires MPI"
        },
        {
            "name": "~mpi",
            "spec": "^mpi",
            "description": "channelflow: There should be no MPI in the DAG when ~mpi is active"
        },
        {
            "name": "+mpi",
            "spec": "+python",
            "description": "channelflow: Building python bindings is possible only for the serial code"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "shared",
            "default": true,
            "description": "Build shared libs"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Enable MPI parallelism"
        },
        {
            "name": "hdf5",
            "default": true,
            "description": "Enable support for HDF5 I/O"
        },
        {
            "name": "netcdf",
            "default": "serial",
            "description": "Level of support for NetCDF I/O"
        },
        {
            "name": "python",
            "default": false,
            "description": "Build python bindings"
        }
    ],
    "homepage": "https://github.com/epfl-ecps/channelflow",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Channelflow is a software system for numerical analysis of the\nincompressible fluid flow in channel geometries, written in C++.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "eigen",
            "description": "Eigen is a C++ template library for linear algebra matrices, vectors,\nnumerical solvers, and related algorithms."
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "mpi",
            "description": "IBM MPI implementation from Spectrum MPI."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "netcdf-c",
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution."
        },
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        }
    ],
    "dependent_to": []
}