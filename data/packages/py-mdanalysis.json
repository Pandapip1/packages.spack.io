{
    "name": "py-mdanalysis",
    "aliases": [],
    "versions": [
        {
            "name": "2.5.0",
            "sha256": "06ce4efab6ca1dbd2ee2959fc668049e1d574a8fe94ab948a4608244da1d016b"
        },
        {
            "name": "2.4.3",
            "sha256": "c4fbdc414e4fdda69052fff2a6e412180fe6fa90a42c24793beee04123648c92"
        },
        {
            "name": "2.4.2",
            "sha256": "ae2ee5627391e73f74eaa3c547af3ec6ab8b040d27dedffe3a7ece8e0cd27636"
        }
    ],
    "latest_version": "2.5.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "analysis",
            "default": true,
            "description": "Enable analysis packages: matplotlib, scipy, seaborn"
        },
        {
            "name": "extra_formats",
            "default": false,
            "description": "Support extra formats"
        }
    ],
    "homepage": "https://www.mdanalysis.org",
    "maintainers": [
        "RMeli",
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-biopython",
            "description": "A distributed collaborative effort to develop Python libraries and\napplications which address the needs of current and future work in\nbioinformatics."
        },
        {
            "name": "py-networkx",
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks."
        },
        {
            "name": "py-griddataformats",
            "description": "The gridDataFormats package provides classes to unify reading and\nwriting n-dimensional datasets. One can read grid data from files, make\nthem available as a Grid object, and write out the data again."
        },
        {
            "name": "py-mmtf-python",
            "description": "The macromolecular transmission format (MMTF) is a binary encoding of\nbiological structures."
        },
        {
            "name": "py-joblib",
            "description": "Lightweight pipelining with Python functions."
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-matplotlib",
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python."
        },
        {
            "name": "py-tqdm",
            "description": "A Fast, Extensible Progress Meter"
        },
        {
            "name": "py-threadpoolctl",
            "description": "Python helpers to limit the number of threads used in the threadpool-\nbacked of common native libraries used for scientific computing and data\nscience (e.g. BLAS and OpenMP)."
        },
        {
            "name": "py-packaging",
            "description": "Core utilities for Python packages."
        },
        {
            "name": "py-fasteners",
            "description": "A python package that provides useful locks."
        },
        {
            "name": "py-gsd",
            "description": "The GSD file format is the native file format for HOOMD-blue. GSD files\nstore trajectories of the HOOMD-blue system state in a binary file with\nefficient random access to frames. GSD allows all particle and topology\nproperties to vary from one frame to the next. Use the GSD Python API to\nspecify the initial condition for a HOOMD-blue simulation or analyze\ntrajectory output with a script. Read a GSD trajectory with a\nvisualization tool to explore the behavior of the simulation."
        },
        {
            "name": "py-netcdf4",
            "description": "Python interface to the netCDF Library."
        },
        {
            "name": "py-h5py",
            "description": "The h5py package provides both a high- and low-level interface to the\nHDF5 library from Python."
        },
        {
            "name": "py-chemfiles",
            "description": "Python interface to chemfiles"
        },
        {
            "name": "py-pyedr",
            "description": "Pyedr provides a means of reading a Gromacs EDR binary XDR file and\nreturn its contents as a dictionary of NumPy arrays"
        },
        {
            "name": "py-pytng",
            "description": "Provides the TNGFileIterator object to allow simple Pythonic access to\ndata contained within TNG files."
        },
        {
            "name": "py-seaborn",
            "description": "Seaborn: statistical data visualization. Seaborn is a library for making\nattractive and informative statistical graphics in Python. It is built\non top of matplotlib and tightly integrated with the PyData stack,\nincluding support for numpy and pandas data structures and statistical\nroutines from scipy and statsmodels."
        },
        {
            "name": "py-scikit-learn",
            "description": "A set of python modules for machine learning and data mining."
        },
        {
            "name": "py-tidynamics",
            "description": "A tiny package to compute the dynamics of stochastic and molecular\nsimulations."
        }
    ],
    "dependent_to": [
        {
            "name": "py-mdanalysistests",
            "description": "Test suite for MDAnalysis"
        },
        {
            "name": "candle-benchmarks",
            "description": "ECP-CANDLE Benchmarks"
        }
    ]
}