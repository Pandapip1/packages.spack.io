{
    "name": "py-mdanalysis",
    "aliases": [],
    "versions": [
        {
            "name": "1.0.0",
            "sha256": "f45a024aca45e390ff1c45ca90beb2180b78881be377e2a1aa9cd6c109bcfa81"
        },
        {
            "name": "0.20.1",
            "sha256": "d04b71b193b9716d2597ffb9938b93f43487fa535da1bb5c1f2baccf356d7df9"
        },
        {
            "name": "0.19.2",
            "sha256": "c5395bbafa5efca2e1aee4715d26129844140c47cb8301da0293106cb969de7d"
        },
        {
            "name": "0.19.1",
            "sha256": "ff1d694f8598c0833ec340de6a6adb3b5e62b92d0fa94ee6401718ba972db3cc"
        },
        {
            "name": "0.19.0",
            "sha256": "248e3b37fc6150e31c609cc18a3927c32aee37b76d29cbfedf635e7e1aa982cf"
        },
        {
            "name": "0.18.0",
            "sha256": "a08acea1755112411e7db55e3f282e164b47a59e15794b38744cce6c596f252a"
        },
        {
            "name": "0.17.0",
            "sha256": "9bd61760334698cc7b8a57ad26456451e926e9c9e66722594ad8816561348cde"
        },
        {
            "name": "0.16.2",
            "sha256": "407d9a9ff1ab8a5e47973714d06fabff220f8d08a28792dee93e88e70e995b0a"
        },
        {
            "name": "0.16.1",
            "sha256": "3dc8f5d639ab3a0d152cbd7259ae9372ec8a9bac0f8cb7d3b80ce5adc1e3ee57"
        },
        {
            "name": "0.16.0",
            "sha256": "c4824fa1fddd336daa39371436187ebb023366885fb250c2827ed7fce2546bd4"
        },
        {
            "name": "0.15.0",
            "sha256": "9088786048b47339cba1f8a586977bbb3bb04ae1bcd0462b59e45bda37e25533"
        }
    ],
    "latest_version": "1.0.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "analysis",
            "default": true,
            "description": "Enable analysis packages: matplotlib, scipy, seaborn"
        },
        {
            "name": "amber",
            "default": false,
            "description": "Support AMBER netcdf format."
        }
    ],
    "homepage": "https://www.mdanalysis.org",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-networkx",
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks."
        },
        {
            "name": "py-gsd",
            "description": "The GSD file format is the native file format for HOOMD-blue. GSD files\nstore trajectories of the HOOMD-blue system state in a binary file with\nefficient random access to frames. GSD allows all particle and topology\nproperties to vary from one frame to the next. Use the GSD Python API to\nspecify the initial condition for a HOOMD-blue simulation or analyze\ntrajectory output with a script. Read a GSD trajectory with a\nvisualization tool to explore the behavior of the simulation."
        },
        {
            "name": "py-mmtf-python",
            "description": "The macromolecular transmission format (MMTF) is a binary encoding of\nbiological structures."
        },
        {
            "name": "py-mock",
            "description": "mock is a library for testing in Python. It allows you to replace parts\nof your system under test with mock objects and make assertions about\nhow they have been used."
        },
        {
            "name": "py-tqdm",
            "description": "A Fast, Extensible Progress Meter"
        },
        {
            "name": "py-joblib",
            "description": "Lightweight pipelining with Python functions."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-biopython",
            "description": "A distributed collaborative effort to develop Python libraries and\napplications which address the needs of current and future work in\nbioinformatics."
        },
        {
            "name": "py-griddataformats",
            "description": "The gridDataFormats package provides classes to unify reading and\nwriting n-dimensional datasets. One can read grid data from files, make\nthem available as a Grid object, and write out the data again."
        },
        {
            "name": "py-matplotlib",
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python."
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-scikit-learn",
            "description": "A set of python modules for machine learning and data mining."
        },
        {
            "name": "py-seaborn",
            "description": "Seaborn: statistical data visualization. Seaborn is a library for making\nattractive and informative statistical graphics in Python. It is built\non top of matplotlib and tightly integrated with the PyData stack,\nincluding support for numpy and pandas data structures and statistical\nroutines from scipy and statsmodels."
        },
        {
            "name": "py-netcdf4",
            "description": "Python interface to the netCDF Library."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        }
    ],
    "dependent_to": [
        {
            "name": "candle-benchmarks",
            "description": "ECP-CANDLE Benchmarks"
        }
    ]
}