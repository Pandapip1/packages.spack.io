{
    "name": "must",
    "aliases": [],
    "versions": [
        {
            "name": "1.9.0",
            "sha256": "24998f4ca6bce718d69347de90798600f2385c21266c2d1dd39a87dd8bd1fba4"
        },
        {
            "name": "1.8.0",
            "sha256": "9754fefd2e4c8cba812f8b56a5dd929bc84aa599b2509305e1eb8518be0a8a39"
        },
        {
            "name": "1.7.2",
            "sha256": "616c54b7487923959df126ac4b47ae8c611717d679fe7ec29f57a89bf0e2e0d0"
        }
    ],
    "latest_version": "1.9.0",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+backward+stackwalker",
            "spec": "",
            "description": null
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "test",
            "default": false,
            "description": "Enable must internal tests"
        },
        {
            "name": "tsan",
            "default": true,
            "description": "Enable thread sanitizer"
        },
        {
            "name": "graphviz",
            "default": false,
            "description": "Use to generate graphs"
        },
        {
            "name": "stackwalker",
            "default": false,
            "description": "Unwind with stackwalker"
        },
        {
            "name": "backward",
            "default": true,
            "description": "Unwind with backward-cpp"
        },
        {
            "name": "typeart",
            "default": false,
            "description": "Enable TypeArt build"
        }
    ],
    "homepage": "https://www.i12.rwth-aachen.de/go/id/nrbe",
    "maintainers": [
        "dmont",
        "jgalarowicz"
    ],
    "patches": [],
    "resources": [],
    "description": "MUST detects usage errors of the Message Passing Interface (MPI) and\nreports them to the user. As MPI calls are complex and usage errors\ncommon, this functionality is extremely helpful for application\ndevelopers that want to develop correct MPI applications. This includes\nerrors that already manifest: segmentation faults or incorrect results\nas well as many errors that are not visible to the application developer\nor do not manifest on a certain system or MPI implementation.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "dyninst",
            "description": "API for dynamic binary instrumentation. Modify programs while they are\nexecuting without recompiling, re-linking, or re-executing."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "graphviz",
            "description": "Graph Visualization Software"
        },
        {
            "name": "libxml2",
            "description": "Libxml2 is the XML C parser and toolkit developed for the Gnome project\n(but usable outside of the Gnome platform), it is free software\navailable under the MIT License."
        },
        {
            "name": "llvm",
            "description": "The LLVM Project is a collection of modular and reusable compiler and\ntoolchain technologies. Despite its name, LLVM has little to do with\ntraditional virtual machines, though it does provide helpful libraries\nthat can be used to build them. The name \"LLVM\" itself is not an\nacronym; it is the full name of the project."
        },
        {
            "name": "mpi",
            "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": []
}