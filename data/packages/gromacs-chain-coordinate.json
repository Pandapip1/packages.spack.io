{
    "name": "gromacs-chain-coordinate",
    "aliases": [],
    "versions": [
        {
            "name": "main",
            "branch": "main"
        },
        {
            "name": "2021.2-0.1",
            "sha256": "879fdd04662370a76408b72c9fbc4aff60a6387b459322ac2700d27359d0dd87",
            "url": "https://gitlab.com/cbjh/gromacs-chain-coordinate/-/archive/release-2021.chaincoord-0.1/gromacs-chain-coordinate-release-2021.chaincoord-0.1.tar.bz2",
            "preferred": true
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "The build type to build"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Activate MPI support (disable for Thread-MPI support)"
        },
        {
            "name": "shared",
            "default": true,
            "description": "Enables the build of shared libraries"
        },
        {
            "name": "double",
            "default": false,
            "description": "Produces a double precision version of the executables"
        },
        {
            "name": "cuda",
            "default": false,
            "description": "Enable CUDA support"
        },
        {
            "name": "opencl",
            "default": false,
            "description": "Enable OpenCL support"
        },
        {
            "name": "sycl",
            "default": false,
            "description": "Enable SYCL support"
        },
        {
            "name": "nosuffix",
            "default": false,
            "description": "Disable default suffixes"
        },
        {
            "name": "openmp",
            "default": true,
            "description": "Enables OpenMP at configure time"
        },
        {
            "name": "hwloc",
            "default": true,
            "description": "Use the hwloc portable hardware locality library"
        },
        {
            "name": "lapack",
            "default": false,
            "description": "Enables an external LAPACK library"
        },
        {
            "name": "blas",
            "default": false,
            "description": "Enables an external BLAS library"
        },
        {
            "name": "cycle_subcounters",
            "default": false,
            "description": "Enables cycle subcounters"
        }
    ],
    "homepage": "https://gitlab.com/cbjh/gromacs-chain-coordinate/-/blob/main/README.md",
    "maintainers": [
        "w8jcik"
    ],
    "patches": [],
    "resources": [],
    "description": " A modification of GROMACS that implements the \"chain coordinate\", a\nreaction coordinate for pore formation in membranes and stalk formation\nbetween membranes.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "fftw-api",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "sycl",
            "description": "hipSYCL is an implementation of the SYCL standard programming model over\nNVIDIA CUDA/AMD HIP"
        },
        {
            "name": "lapack",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "blas",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "hwloc",
            "description": "The Hardware Locality (hwloc) software project. The Portable Hardware\nLocality (hwloc) software package provides a portable abstraction\n(across OS, versions, architectures, ...) of the hierarchical topology\nof modern architectures, including NUMA memory nodes, sockets, shared\ncaches, cores and simultaneous multithreading. It also gathers various\nsystem attributes such as cache and memory information as well as the\nlocality of I/O devices such as network interfaces, InfiniBand HCAs or\nGPUs. It primarily aims at helping applications with gathering\ninformation about modern computing hardware so as to exploit it\naccordingly and efficiently."
        }
    ],
    "dependent_to": []
}