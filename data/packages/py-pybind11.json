{
    "name": "py-pybind11",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "2.10.4",
            "sha256": "832e2f309c57da9c1e6d4542dedd34b24e4192ecb4d62f6f4866a737454c9970"
        },
        {
            "name": "2.10.1",
            "sha256": "111014b516b625083bef701df7880f78c2243835abdb263065b6b59b960b6bad"
        },
        {
            "name": "2.10.0",
            "sha256": "eacf582fa8f696227988d08cfc46121770823839fe9e301a20fbce67e7cd70ec"
        },
        {
            "name": "2.9.2",
            "sha256": "6bd528c4dbe2276635dc787b6b1f2e5316cf6b49ee3e150264e455a0d68d19c1"
        },
        {
            "name": "2.9.1",
            "sha256": "c6160321dc98e6e1184cc791fbeadd2907bb4a0ce0e447f2ea4ff8ab56550913"
        },
        {
            "name": "2.9.0",
            "sha256": "057fb68dafd972bc13afb855f3b0d8cf0fa1a78ef053e815d9af79be7ff567cb"
        },
        {
            "name": "2.8.1",
            "sha256": "f1bcc07caa568eb312411dde5308b1e250bd0e1bc020fae855bf9f43209940cc"
        },
        {
            "name": "2.8.0",
            "sha256": "9ca7770fc5453b10b00a4a2f99754d7a29af8952330be5f5602e7c2635fa3e79"
        },
        {
            "name": "2.7.1",
            "sha256": "616d1c42e4cf14fa27b2a4ff759d7d7b33006fdc5ad8fd603bb2c22622f27020"
        },
        {
            "name": "2.7.0",
            "sha256": "6cd73b3d0bf3daf415b5f9b87ca8817cc2e2b64c275d65f9500250f9fee1677e"
        },
        {
            "name": "2.6.2",
            "sha256": "8ff2fff22df038f5cd02cea8af56622bc67f5b64534f1b83b9f133b8366acff2"
        },
        {
            "name": "2.6.1",
            "sha256": "cdbe326d357f18b83d10322ba202d69f11b2f49e2d87ade0dc2be0c5c34f8e2a"
        },
        {
            "name": "2.5.0",
            "sha256": "97504db65640570f32d3fdf701c25a340c8643037c3b69aec469c10c93dc8504"
        },
        {
            "name": "2.4.3",
            "sha256": "1eed57bc6863190e35637290f97a20c81cfe4d9090ac0a24f3bbf08f265eb71d"
        },
        {
            "name": "2.3.0",
            "sha256": "0f34838f2c8024a6765168227ba587b3687729ebf03dc912f88ff75c7aa9cfe8"
        },
        {
            "name": "2.2.4",
            "sha256": "b69e83658513215b8d1443544d0549b7d231b9f201f6fc787a2b2218b408181e"
        },
        {
            "name": "2.2.3",
            "sha256": "3a3b7b651afab1c5ba557f4c37d785a522b8030dfc765da26adc2ecd1de940ea"
        },
        {
            "name": "2.2.2",
            "sha256": "b639a2b2cbf1c467849660801c4665ffc1a4d0a9e153ae1996ed6f21c492064e"
        },
        {
            "name": "2.2.1",
            "sha256": "f8bd1509578b2a1e7407d52e6ee8afe64268909a1bbda620ca407318598927e7"
        },
        {
            "name": "2.2.0",
            "sha256": "1b0fda17c650c493f5862902e90f426df6751da8c0b58c05983ab009951ed769"
        },
        {
            "name": "2.1.1",
            "sha256": "f2c6874f1ea5b4ad4ffffe352413f7d2cd1a49f9050940805c2a082348621540"
        },
        {
            "name": "2.1.0",
            "sha256": "2860f2b8d0c9f65f0698289a161385f59d099b7ead1bf64e8993c486f2b93ee0"
        }
    ],
    "latest_version": "2.10.4",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "generator=make",
            "spec": "build_system=cmake",
            "description": "None"
        },
        {
            "name": "%gcc@:4.7",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%clang@:3.2",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%intel@:16",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "ninja",
            "description": "the build system generator to use"
        }
    ],
    "homepage": "https://pybind11.readthedocs.io",
    "maintainers": [
        "adamjstewart",
        "ax3l"
    ],
    "patches": [],
    "resources": [],
    "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        }
    ],
    "dependent_to": [
        {
            "name": "py-awkward",
            "description": "Manipulate JSON-like data with NumPy-like idioms."
        },
        {
            "name": "py-torchtext",
            "description": "Text utilities and datasets for PyTorch."
        },
        {
            "name": "scine-readuct",
            "description": "ReaDuct allows you to carry out structure optimizations, transition\nstate searches and intrinsic reaction coordinate (IRC) calculations\namong other things"
        },
        {
            "name": "sparrow",
            "description": "Sparrow: fast semiempirical quantum chemical calculations. When\npublishing results obtained with Sparrow, please cite the corresponding\nrelease as archived on Zenodo (DOI 10.5281/zenodo.3244105; please use\nthe DOI of the respective release). In addition, we kindly request you\nto cite the following article when using Sparrow: T. Husch, A. C.\nVaucher, M. Reiher, \"Semiempirical molecular orbital models based on the\nneglect of diatomic differential overlap approximation\", Int. J. Quantum\nChem., 2018, 118, e25799."
        },
        {
            "name": "autodiff",
            "description": "autodiff is automatic differentiation made easier for C++."
        },
        {
            "name": "py-pennylane-lightning",
            "description": "The PennyLane-Lightning plugin provides a fast state-vector simulator\nwritten in C++."
        },
        {
            "name": "reprimand",
            "description": "RePrimAnd: Recovery of Primitives And EOS framework RePrimAnd is a\nsupport library for numerical simulations of general relativistic\nmagnetohydrodynamics. It provides methods for recovering primitive\nvariables like pressure and velocity from the variables evolved in\nquasi-conservative formulations. Further, it provides a general\nframework for handling matter equations of state."
        },
        {
            "name": "py-contourpy",
            "description": "Python library for calculating contours of 2D quadrilateral grids."
        },
        {
            "name": "py-pyspoa",
            "description": "Python bindings to spoa"
        },
        {
            "name": "tiramisu",
            "description": "Tiramisu is a polyhedral compiler for dense and sparse deep learning and\ndata parallel algorithms.It provides a simple C++ API for expressing\nalgorithms and how these algorithms should be optimized by the compiler."
        },
        {
            "name": "acts",
            "description": "A Common Tracking Software (Acts) This project contains an experiment-\nindependent set of track reconstruction tools. The main philosophy is to\nprovide high-level track reconstruction modules that can be used for any\ntracking detector. The description of the tracking detector's geometry\nis optimized for efficient navigation and quick extrapolation of tracks.\nConverters for several common geometry description languages exist.\nHaving a highly performant, yet largely customizable implementation of\ntrack reconstruction algorithms was a primary objective for the design\nof this toolset. Additionally, the applicability to real-life HEP\nexperiments plays major role in the development process. Apart from\nalgorithmic code, this project also provides an event data model for the\ndescription of track parameters and measurements. Key features of this\nproject include: tracking geometry description which can be constructed\nfrom TGeo, DD4Hep, or GDML input, simple and efficient event data model,\nperformant and highly flexible algorithms for track propagation and\nfitting, basic seed finding algorithms."
        },
        {
            "name": "spectre",
            "description": "The SpECTRE numerical relativity code. SpECTRE is an open-source code\nfor multi-scale, multi-physics problems in astrophysics and\ngravitational physics. In the future, we hope that it can be applied to\nproblems across discipline boundaries in fluid dynamics, geoscience,\nplasma physics, nuclear physics, and engineering. It runs at petascale\nand is designed for future exascale computers. SpECTRE is being\ndeveloped in support of our collaborative Simulating eXtreme Spacetimes\n(SXS) research program into the multi-messenger astrophysics of neutron\nstar mergers, core-collapse supernovae, and gamma-ray bursts."
        },
        {
            "name": "py-awkward-cpp",
            "description": "py-awkward-cpp provides precompiled routines for the py-awkward package.\nIt is not useful on its own, only as a dependency for py-awkward."
        },
        {
            "name": "py-pysimdjson",
            "description": "Python bindings for the simdjson project, a SIMD-accelerated JSON\nparser. If SIMD instructions are unavailable a fallback parser is used,\nmaking pysimdjson safe to use anywhere."
        },
        {
            "name": "py-scikit-build-core",
            "description": "scikit-build-core is a doubly improved build system generator for\nCPython C/C++/Fortran/Cython extensions. It features several\nimprovements over the classic scikit-build build system generator."
        },
        {
            "name": "py-spdlog",
            "description": "The py-spdlog package provides a Python wrapper to the C++ spdlog\nlibrary."
        },
        {
            "name": "xtensor-python",
            "description": "Python bindings for the xtensor C++ multi-dimensional array library"
        },
        {
            "name": "akantu",
            "description": "Akantu means a little element in Kinyarwanda, a Bantu language. From\nnow on it is also an opensource object-oriented Finite Element library\nwhich has the ambition to be generic and efficient."
        },
        {
            "name": "scine-molassembler",
            "description": "Chemoinformatics toolkit with support for inorganic molecules."
        },
        {
            "name": "py-onnxruntime",
            "description": "ONNX Runtime is a performance-focused complete scoring engine for Open\nNeural Network Exchange (ONNX) models, with an open extensible\narchitecture to continually address the latest developments in AI and\nDeep Learning. ONNX Runtime stays up to date with the ONNX standard with\ncomplete implementation of all ONNX operators, and supports all ONNX\nreleases (1.2+) with both future and backwards compatibility."
        },
        {
            "name": "py-torchaudio",
            "description": "The aim of torchaudio is to apply PyTorch to the audio domain. By\nsupporting PyTorch, torchaudio follows the same philosophy of providing\nstrong GPU acceleration, having a focus on trainable features through\nthe autograd system, and having consistent style (tensor names and\ndimension names). Therefore, it is primarily a machine learning library\nand not a general signal processing library. The benefits of Pytorch is\nbe seen in torchaudio through having all the computations be through\nPytorch operations which makes it easy to use and feel like a natural\nextension."
        },
        {
            "name": "simsipm",
            "description": "SimSiPM is a simple and easy to use C++ library providing a set of\nobject-oriented tools with all the functionality needed to describe and\nsimulate Silicon PhotonMultipliers (SiPM) sensors."
        },
        {
            "name": "pygmo",
            "description": "Parallel Global Multiobjective Optimizer (and its Python alter ego\nPyGMO) is a C++ / Python platform to perform parallel computations of\noptimisation tasks (global and local) via the asynchronous generalized\nisland model."
        },
        {
            "name": "py-dlio-profiler-py",
            "description": "A low-level profiler for capture I/O calls from deep learning\napplications."
        },
        {
            "name": "py-matplotlib",
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python."
        },
        {
            "name": "py-correctionlib",
            "description": "A generic correction library"
        },
        {
            "name": "scine-utilities",
            "description": "Contains functionality which is used in most SCINE modules."
        },
        {
            "name": "qoz",
            "description": "Quality optimized version of SZ3 is the next generation of the SZ\ncompressor framework"
        },
        {
            "name": "open3d",
            "description": "Open3D: A Modern Library for 3D Data Processing."
        },
        {
            "name": "py-pennylane-lightning-kokkos",
            "description": "The PennyLane-Lightning-Kokkos plugin provides a fast state-vector\nsimulator with Kokkos kernels."
        },
        {
            "name": "openpmd-api",
            "description": "C++ & Python API for Scientific I/O"
        },
        {
            "name": "xyce",
            "description": "Xyce (rhymes with 'spice') is an open source, SPICE-compatible, high-\nperformance analog circuit simulator, capable of solving extremely large\ncircuit problems by supporting large-scale parallel computing platforms.\nXyce also supports serial execution on all common desktop platforms, and\nsmall-scale parallel runs on Unix-like systems. In addition to analog\nelectronic simulation, Xyce has also been used to investigate more\ngeneral network systems, such as neural networks and power grids."
        },
        {
            "name": "py-pyamg",
            "description": "PyAMG is a library of Algebraic Multigrid (AMG) solvers with a\nconvenient Python interface."
        },
        {
            "name": "py-amrex",
            "description": "AMReX Python Bindings with pybind11"
        },
        {
            "name": "py-pyopencl",
            "description": "Python wrapper for OpenCL."
        },
        {
            "name": "fenics",
            "description": "FEniCS is organized as a collection of interoperable components that\ntogether form the FEniCS Project. These components include the problem-\nsolving environment DOLFIN, the form compiler FFC, the finite element\ntabulator FIAT, the just-in-time compiler Instant / Dijitso, the code\ngeneration interface UFC, the form language UFL and a range of\nadditional components."
        },
        {
            "name": "py-torchdata",
            "description": "Composable data loading modules for PyTorch."
        },
        {
            "name": "sirius",
            "description": "Domain specific library for electronic structure calculations"
        },
        {
            "name": "freecad",
            "description": "FreeCAD is an open-source parametric 3D modeler made primarily to design\nreal-life objects of any size. Parametric modeling allows you to easily\nmodify your design by going back into your model history to change its\nparameters."
        },
        {
            "name": "migraphx",
            "description": "AMD's graph optimization engine."
        },
        {
            "name": "py-minkowskiengine",
            "description": "The MinkowskiEngine is an auto-differentiation library for sparse\ntensors."
        },
        {
            "name": "py-gmxapi",
            "description": "Python bindings and ensemble workflow management for GROMACS. The\nGROMACS C++ API is affected by its package variants. You can specify a\nparticular GROMACS API by making the dependency variant explicit. E.g.\n``spack install gmxapi ^gromacs+mpi~double``"
        },
        {
            "name": "py-fenics-basix",
            "description": "Python interface to Basix, a finite element definition and tabulation\nruntime library"
        },
        {
            "name": "py-qiskit-aer",
            "description": "Aer is a high performance simulator for quantum circuits that includes\nnoise models"
        },
        {
            "name": "py-pynvtx",
            "description": "A thin python wrapper for the nvToolsExt (NVTX) library, using pybind11.\nThis wrapper is meant to be as thin as possible -- so only provides\nminimal support. Currently supported features are: NVTX annotations:\nnvtxRangePushA and nvtxRangePop Function decorator: PyNVTX.annotate\nAutomatic decorator generation PyNVTX.annotate_all_methods()"
        },
        {
            "name": "py-meshpy",
            "description": "Simplicial Mesh Generation from Python"
        },
        {
            "name": "py-mapbox-earcut",
            "description": "Python bindings for the C++ implementation of the Mapbox Earcut library,\nwhich provides very fast and quite robust triangulation of 2D polygons."
        },
        {
            "name": "xcfun",
            "description": "Exchange-Correlation functionals with arbitrary order derivatives."
        },
        {
            "name": "tamaas",
            "description": "Tamaas is a C++ library with a Python interface that efficiently solves\ncontact mechanics problems with periodic rough surfaces, plasticity,\nadhesion and friction."
        },
        {
            "name": "py-torch",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration."
        },
        {
            "name": "arbor",
            "description": "Arbor is a high-performance library for computational neuroscience\nsimulations."
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-projectq",
            "description": "ProjectQ is an open-source software framework for quantum computing\nstarted at ETH Zurich. It allows users to implement their quantum\nprograms in Python using a powerful and intuitive syntax. ProjectQ can\nthen translate these programs to any type of back-end, be it a simulator\nrun on a classical computer of an actual quantum chip."
        },
        {
            "name": "openimageio",
            "description": "OpenImageIO is a library for reading and writing images, and a bunch of\nrelated classes, utilities, and applications."
        },
        {
            "name": "serenity",
            "description": "Subsystem focused quantum chemistry code Serenity"
        },
        {
            "name": "py-qdldl",
            "description": "Python interface to the QDLDL free LDL factorization routine for quasi-\ndefinite linear systems: Ax = b."
        },
        {
            "name": "py-pykokkos-base",
            "description": "Minimal set of bindings for Kokkos interoperability with Python\n(initialize, finalize, View, DynRankView, Kokkos-tools)"
        },
        {
            "name": "scine-database",
            "description": "The SCINE database module is a database wrapper for a MongoDB encoding\nreaction networks."
        },
        {
            "name": "singularity-eos",
            "description": "Singularity-EOS: A collection of closure models and tools useful for\nmultiphysics codes."
        },
        {
            "name": "halide",
            "description": "Halide is a programming language designed to make it easier to write\nhigh-performance image and array processing code on modern machines."
        },
        {
            "name": "py-fenics-dolfinx",
            "description": "Python interface to the next generation FEniCS problem solving\nenvironment"
        },
        {
            "name": "odgi",
            "description": "Optimized dynamic genome/graph implementation. Odgi provides an\nefficient and succinct dynamic DNA sequence graph model, as well as a\nhost of algorithms that allow the use of such graphs in bioinformatic\nanalyses."
        },
        {
            "name": "py-smartredis",
            "description": "A Python Interface for the SmartRedis Library Client"
        },
        {
            "name": "py-httpstan",
            "description": "HTTP-based REST interface to Stan, a package for Bayesian inference."
        },
        {
            "name": "py-torch-nvidia-apex",
            "description": "A PyTorch Extension: Tools for easy mixed precision and distributed\ntraining in Pytorch"
        }
    ]
}