{
    "name": "sombrero",
    "aliases": [],
    "versions": [
        {
            "name": "2021-08-16",
            "sha256": "f62aa1934fef6a025449a9e037345043072be6198f92087853c58c67f1342f73"
        },
        {
            "name": "2021-07-31",
            "sha256": "9c59693f330904b1f444187d1974a179c61d801f063581acb94a7a77955151e0"
        },
        {
            "name": "2021-07-14",
            "sha256": "d2801a4efea312a14fc34775b0dea862e958ccb9b7721a63b6c29e1224e12257"
        },
        {
            "name": "2021-07-08",
            "sha256": "816b0f0a684a421fa620f11c21649ac162e85d1febd6a7e10cfd07604760c0d6"
        },
        {
            "name": "1.0",
            "sha256": "423a631c86f0e5f14dea186228871099ca0374dc07bf1bb24b6be17f79784682"
        }
    ],
    "latest_version": "2021-08-16",
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "name": "arch=windows-None-None",
            "spec": "build_system=makefile",
            "description": null
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "makefile",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/sa2c/sombrero",
    "maintainers": [
        "edbennett",
        "mmesiti"
    ],
    "patches": [],
    "resources": [],
    "description": "A next-generation conjugate gradient benchmark from computational\nparticle physics\n",
    "dependencies": [
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        }
    ],
    "dependent_to": []
}