{
    "name": "py-scikit-build",
    "aliases": [],
    "versions": [
        {
            "name": "0.17.6",
            "sha256": "b51a51a36b37c42650994b5047912f59b22e3210b23e321f287611f9ef6e5c9d"
        },
        {
            "name": "0.15.0",
            "sha256": "e723cd0f3489a042370b9ea988bbb9cfd7725e8b25b20ca1c7981821fcf65fb9"
        },
        {
            "name": "0.12.0",
            "sha256": "f851382c469bcd9a8c98b1878bcfdd13b68556279d2fd9a329be41956ae5a7fe"
        },
        {
            "name": "0.11.1",
            "sha256": "da40dfd69b2456fad1349a894b90180b43712152b8a85d2a00f4ae2ce8ac9a5c"
        },
        {
            "name": "0.10.0",
            "sha256": "7342017cc82dd6178e3b19377389b8a8d1f8b429d9cdb315cfb1094e34a0f526"
        }
    ],
    "latest_version": "0.17.6",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://scikit-build.readthedocs.io/en/latest/",
    "maintainers": [
        "adamjstewart",
        "coreyjadams"
    ],
    "patches": [],
    "resources": [],
    "description": "scikit-build is an improved build system generator for CPython\nC/C++/Fortran/Cython extensions. It provides better support for\nadditional compilers, build systems, cross compilation, and locating\ndependencies and their associated build requirements. The scikit-build\npackage is fundamentally just glue between the setuptools Python module\nand CMake.\n",
    "dependencies": [
        {
            "name": "py-distro",
            "description": "Distro - an OS platform information API."
        },
        {
            "name": "py-hatch-fancy-pypi-readme",
            "description": "Fancy PyPI READMEs with Hatch."
        },
        {
            "name": "py-hatch-vcs",
            "description": "Hatch plugin for versioning with your preferred VCS"
        },
        {
            "name": "py-hatchling",
            "description": "Modern, extensible Python build backend."
        },
        {
            "name": "py-packaging",
            "description": "Core utilities for Python packages."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-setuptools-scm",
            "description": "The blessed package to manage your versions by scm tags."
        },
        {
            "name": "py-tomli",
            "description": "Tomli is a Python library for parsing TOML. Tomli is fully compatible\nwith TOML v1.0.0."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-ninja",
            "description": "Ninja is a small build system with a focus on speed."
        },
        {
            "name": "py-nanobind",
            "description": "nanobind -- Seamless operability between C++11 and Python. nanobind is a\nsmall binding library that exposes C++ types in Python and vice versa.\nIt is reminiscent of Boost.Python and pybind11 and uses near-identical\nsyntax. In contrast to these existing tools, nanobind is more efficient:\nbindings compile in a shorter amount of time, produce smaller binaries,\nand have better runtime performance."
        },
        {
            "name": "py-rapidfuzz",
            "description": "Rapid fuzzy string matching in Python and C++ using the Levenshtein\nDistance."
        },
        {
            "name": "py-correctionlib",
            "description": "A generic correction library"
        },
        {
            "name": "py-qiskit-aer",
            "description": "Aer is a high performance simulator for quantum circuits that includes\nnoise models"
        },
        {
            "name": "py-pylibmagic",
            "description": "scikit-build project with CMake for compiling libmagic"
        },
        {
            "name": "py-cmake",
            "description": "CMake is an open-source, cross-platform family of tools designed to\nbuild, test and package software"
        },
        {
            "name": "py-tweedledum",
            "description": "tweedledum is a library for synthesis, compilation, and optimization of\nquantum circuits. The library is written to be scalable up to problem\nsizes in which quantum circuits outperform classical ones. Also, it is\nmeant to be used both independently and alongside established tools."
        },
        {
            "name": "halide",
            "description": "Halide is a programming language designed to make it easier to write\nhigh-performance image and array processing code on modern machines."
        },
        {
            "name": "py-blosc",
            "description": "A Python wrapper for the extremely fast Blosc compression library"
        },
        {
            "name": "py-jarowinkler",
            "description": "library for fast approximate string matching using Jaro and Jaro-Winkler\nsimilarity."
        },
        {
            "name": "py-tomopy",
            "description": "TomoPy is an open-source Python package for tomographic data processing\nand image reconstruction."
        },
        {
            "name": "py-blosc2",
            "description": "Python wrapper for the C-Blosc2 library."
        }
    ]
}