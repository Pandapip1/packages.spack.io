{
    "name": "py-cvxopt",
    "aliases": [],
    "versions": [
        {
            "name": "1.2.5",
            "sha256": "94ec8c36bd6628a11de9014346692daeeef99b3b7bae28cef30c7490bbcb2d72"
        }
    ],
    "latest_version": "1.2.5",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "gsl",
            "default": false,
            "description": "Use GSL random number generators for constructing random matrices"
        },
        {
            "name": "fftw",
            "default": false,
            "description": "Install the cvxopt.fftw interface to FFTW"
        },
        {
            "name": "glpk",
            "default": false,
            "description": "Enable support for the linear programming solver GLPK"
        },
        {
            "name": "dsdp",
            "default": false,
            "description": "Enable support for the semidefinite programming solver DSDP"
        }
    ],
    "homepage": "https://cvxopt.org/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "CVXOPT is a free software package for convex optimization based on the\nPython programming language.\n",
    "dependencies": [
        {
            "name": "blas",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "dsdp",
            "description": "The DSDP software is a free open source implementation of an interior-\npoint method for semidefinite programming. It provides primal and dual\nsolutions, exploits low-rank structure and sparsity in the data, and has\nrelatively low memory requirements for an interior-point method. It\nallows feasible and infeasible starting points and provides approximate\ncertificates of infeasibility when no feasible solution exists."
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "glpk",
            "description": "The GLPK (GNU Linear Programming Kit) package is intended for solving\nlarge-scale linear programming (LP), mixed integer programming (MIP),\nand other related problems. It is a set of routines written in ANSI C\nand organized in the form of a callable library."
        },
        {
            "name": "gsl",
            "description": "The GNU Scientific Library (GSL) is a numerical library for C and C++\nprogrammers. It is free software under the GNU General Public License.\nThe library provides a wide range of mathematical routines such as\nrandom number generators, special functions and least-squares fitting.\nThere are over 1000 functions in total with an extensive test suite."
        },
        {
            "name": "lapack",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "suite-sparse",
            "description": "SuiteSparse is a suite of sparse matrix algorithms"
        }
    ],
    "dependent_to": []
}