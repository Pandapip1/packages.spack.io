{
    "name": "py-rasterstats",
    "aliases": [],
    "versions": [
        {
            "name": "0.17.0",
            "sha256": "27975ebc0a402865dd9e92ad4ecf0dd62678e320735cc81e104c730e6d001298"
        }
    ],
    "latest_version": "0.17.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/perrygeo/python-rasterstats",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "rasterstats is a Python module for summarizing geospatial raster\ndatasets based on vector geometries. It includes functions for zonal\nstatistics and interpolated point queries. The command-line interface\nallows for easy interperability with other GeoJSON tools.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-affine",
            "description": "Matrices describing affine transformation of the plane."
        },
        {
            "name": "py-shapely",
            "description": "Manipulation and analysis of geometric objects in the Cartesian plane."
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-rasterio",
            "description": "Rasterio reads and writes geospatial raster data. Geographic information\nsystems use GeoTIFF and other formats to organize and store gridded, or\nraster, datasets. Rasterio reads and writes these formats and provides a\nPython API based on N-D arrays."
        },
        {
            "name": "py-cligj",
            "description": "Common arguments and options for GeoJSON processing commands, using\nClick."
        },
        {
            "name": "py-fiona",
            "description": "Fiona reads and writes spatial data files."
        },
        {
            "name": "py-simplejson",
            "description": "Simplejson is a simple, fast, extensible JSON encoder/decoder for Python"
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        }
    ],
    "dependent_to": []
}