{
    "name": "r-ggrastr",
    "aliases": [],
    "versions": [
        {
            "name": "1.0.1",
            "sha256": "82d6e90fa38dec85e829f71018532ed5b709a50a585455fc07cb3bae282f5d1f"
        }
    ],
    "latest_version": "1.0.1",
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "generic",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://cloud.r-project.org/package=ggrastr",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Rasterize Layers for 'ggplot2'. Rasterize only specific layers of a\n'ggplot2' plot while simultaneously keeping all labels and text in\nvector format. This allows users to keep plots within the reasonable\nsize limit without loosing vector properties of the scale-sensitive\ninformation.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-ggplot2",
            "description": "Create Elegant Data Visualisations Using the Grammar of Graphics. A\nsystem for 'declaratively' creating graphics, based on \"The Grammar of\nGraphics\". You provide the data, tell 'ggplot2' how to map variables to\naesthetics, what graphical primitives to use, and it takes care of the\ndetails."
        },
        {
            "name": "r-cairo",
            "description": "R graphics device using cairo graphics library for creating high-quality\nbitmap (PNG, JPEG, TIFF), vector (PDF, SVG, PostScript) and display (X11\nand Win32) output. R graphics device using cairographics library that\ncan be used to create high-quality vector (PDF, PostScript and SVG) and\nbitmap output (PNG,JPEG,TIFF), and high-quality rendering in displays\n(X11 and Win32). Since it uses the same back-end for all output, copying\nacross formats is WYSIWYG. Files are created without the dependence on\nX11 or other external programs. This device supports alpha channel\n(semi-transparent drawing) and resulting images can contain transparent\nand semi-transparent regions. It is ideal for use in server environments\n(file output) and as a replacement for other devices that don't have\nCairo's capabilities such as alpha support or anti-aliasing. Backends\nare modular such that any subset of backends is supported."
        },
        {
            "name": "r-ggbeeswarm",
            "description": "Categorical Scatter (Violin Point) Plots. Provides two methods of\nplotting categorical scatter plots such that the arrangement of points\nwithin a category reflects the density of data at that region, and\navoids over-plotting."
        },
        {
            "name": "r-png",
            "description": "Read and write PNG images. This package provides an easy and simple way\nto read, write and display bitmap images stored in the PNG format. It\ncan read and write both files and in-memory raw vectors."
        },
        {
            "name": "r-ragg",
            "description": "Graphic Devices Based on AGG. Anti-Grain Geometry (AGG) is a high-\nquality and high-performance 2D drawing library. The 'ragg' package\nprovides a set of graphic devices based on AGG to use as alternative to\nthe raster devices provided through the 'grDevices' package."
        }
    ],
    "dependent_to": [
        {
            "name": "r-scater",
            "description": "Single-Cell Analysis Toolkit for Gene Expression Data in R. A collection\nof tools for doing various analyses of single-cell RNA-seq gene\nexpression data, with a focus on quality control and visualization."
        }
    ]
}