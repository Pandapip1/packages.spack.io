{
    "name": "libelf",
    "aliases": [
        {
            "name": "elf",
            "alias_for": "libelf"
        }
    ],
    "versions": [
        {
            "name": "0.8.13",
            "sha256": "591a9b4ec81c1f2042a97aa60564e0cb79d041c52faa7416acb38bc95bd2c76d"
        }
    ],
    "latest_version": "0.8.13",
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools",
            "description": null
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "autotools",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://directory.fsf.org/wiki/Libelf",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "libelf lets you read, modify or create ELF object files in an\narchitecture-independent way. The library takes care of size and endian\nissues, e.g. you can process a file for SPARC processors on an Intel-\nbased system. Note: libelf is no longer maintained and packages that\ndepend on libelf should migrate to elfutils.\n",
    "dependencies": [
        {
            "name": "autoconf",
            "description": "Autoconf -- system configuration part of autotools"
        },
        {
            "name": "automake",
            "description": "Automake -- make file builder part of autotools"
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "gnuconfig",
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files."
        },
        {
            "name": "libtool",
            "description": "libtool -- library building part of autotools."
        },
        {
            "name": "m4",
            "description": "GNU M4 is an implementation of the traditional Unix macro processor."
        }
    ],
    "dependent_to": [
        {
            "name": "libdwarf",
            "description": "The DWARF Debugging Information Format is of interest to programmers\nworking on compilers and debuggers (and any one interested in reading or\nwriting DWARF information). It was developed by a committee (known as\nthe PLSIG at the time) starting around 1991. Starting around 1991 SGI\ndeveloped the libdwarf and dwarfdump tools for internal use and as part\nof SGI IRIX developer tools. Since that time dwarfdump and libdwarf have\nbeen shipped (as an executable and archive respectively, not source)\nwith every release of the SGI MIPS/IRIX C compiler."
        },
        {
            "name": "llvm-openmp-ompt",
            "description": "The OpenMP subproject provides an OpenMP runtime for use with the OpenMP\nimplementation in Clang. This branch includes experimental changes for\nOMPT, the OpenMP Tools interface"
        },
        {
            "name": "callpath",
            "description": "Library for representing callpaths consistently in distributed-memory\nperformance tools."
        },
        {
            "name": "llvm",
            "description": "The LLVM Project is a collection of modular and reusable compiler and\ntoolchain technologies. Despite its name, LLVM has little to do with\ntraditional virtual machines, though it does provide helpful libraries\nthat can be used to build them. The name \"LLVM\" itself is not an\nacronym; it is the full name of the project."
        },
        {
            "name": "extrae",
            "description": "Extrae is the package devoted to generate tracefiles which can be\nanalyzed later by Paraver. Extrae is a tool that uses different\ninterposition mechanisms to inject probes into the target application so\nas to gather information regarding the application performance. The\nExtrae instrumentation package can instrument the MPI programin model,\nand the following parallel programming models either alone or in\nconjunction with MPI : OpenMP, CUDA, OpenCL, pthread, OmpSs"
        },
        {
            "name": "atmi",
            "description": "Asynchronous Task and Memory Interface, or ATMI, is a runtime framework\nand programming model for heterogeneous CPU-GPU systems. It provides a\nconsistent, declarative API to create task graphs on CPUs and GPUs\n(integrated and discrete)."
        },
        {
            "name": "fast-global-file-status",
            "description": "provides a scalable mechanism to retrieve such information of a file,\nincluding its degree of distribution or replication and consistency."
        },
        {
            "name": "launchmon",
            "description": "Software infrastructure that enables HPC run-time tools to co-locate\ntool daemons with a parallel job."
        },
        {
            "name": "tau",
            "description": "A portable profiling and tracing toolkit for performance analysis of\nparallel programs written in Fortran, C, C++, UPC, Java, Python."
        },
        {
            "name": "glib",
            "description": "GLib provides the core application building blocks for libraries and\napplications written in C. The GLib package contains a low-level\nlibraries useful for providing data structure handling for C,\nportability wrappers and interfaces for such runtime functionality as an\nevent loop, threads, dynamic loading and an object system."
        },
        {
            "name": "dwz",
            "description": "DWZ: A DWARF optimization and duplicate removal tool"
        },
        {
            "name": "hsa-rocr-dev",
            "description": "This repository includes the user mode API nterfaces and libraries\nnecessary for host applications to launch computer kernels to available\nHSA ROCm kernel agents.AMD Heterogeneous System Architecture HSA - Linux\nHSA Runtime for Boltzmann (ROCm) platforms."
        },
        {
            "name": "ltrace",
            "description": "Ltrace intercepts and records dynamic library calls which are called by\nan executed process and the signals received by that process. It can\nalso intercept and print the system calls executed by the program."
        }
    ]
}