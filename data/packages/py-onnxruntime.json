{
    "name": "py-onnxruntime",
    "aliases": [],
    "versions": [
        {
            "name": "1.10.0",
            "tag": "v1.10.0",
            "submodules": true
        },
        {
            "name": "1.7.2",
            "tag": "v1.7.2",
            "submodules": true
        }
    ],
    "latest_version": "1.10.0",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "generator=make",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "ninja",
            "description": "the build system generator to use"
        },
        {
            "name": "cuda",
            "default": false,
            "description": "Build with CUDA support"
        },
        {
            "name": "dynamic_cpu_arch",
            "default": "AVX512",
            "description": "AVX support level"
        }
    ],
    "homepage": "https://github.com/microsoft/onnxruntime",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [
        {
            "owner": "builtin.py-onnxruntime",
            "sha256": "3f2c8201e94775a39d367a40937517568b8d1a3c6c7d07238f1dd6c610c5749d",
            "level": 1,
            "working_dir": ".",
            "relative_path": "cms.patch",
            "version": "@1.7.2"
        },
        {
            "owner": "builtin.py-onnxruntime",
            "sha256": "ad26be0aa042cbc4d3033ee604e7bfdfd5e48a37a228e0e504b5b7c18b14d5b8",
            "level": 1,
            "working_dir": ".",
            "relative_path": "gcc11.patch",
            "version": "@1.7.2"
        },
        {
            "owner": "builtin.py-onnxruntime",
            "sha256": "bc7ca543436af2ea3dcc17ee2e5eea6495c5391da1c348167d5be560ee196bd8",
            "level": 1,
            "working_dir": ".",
            "relative_path": "cms_1_10.patch",
            "version": ""
        },
        {
            "owner": "builtin.py-onnxruntime",
            "sha256": "242cc317627a801e93635bcb0b8a07d8d6890742f76c295aabccebda56eaf488",
            "level": 0,
            "working_dir": ".",
            "relative_path": "libiconv.patch",
            "version": "@1.7.2 ^libiconv"
        },
        {
            "owner": "builtin.py-onnxruntime",
            "sha256": "1eaafe93b9091031afbca0b8f323c735865cc278503d3cd922ccaf8ac68c20e9",
            "level": 0,
            "working_dir": ".",
            "relative_path": "libiconv-1.10.patch",
            "version": "@1.10.0 ^libiconv"
        }
    ],
    "resources": [],
    "description": "ONNX Runtime is a performance-focused complete scoring engine for Open\nNeural Network Exchange (ONNX) models, with an open extensible\narchitecture to continually address the latest developments in AI and\nDeep Learning. ONNX Runtime stays up to date with the ONNX standard with\ncomplete implementation of all ONNX operators, and supports all ONNX\nreleases (1.2+) with both future and backwards compatibility.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "protobuf",
            "description": "Google's data interchange format."
        },
        {
            "name": "py-protobuf",
            "description": "Protocol buffers are Google's language-neutral, platform-neutral,\nextensible mechanism for serializing structured data - think XML, but\nsmaller, faster, and simpler. You define how you want your data to be\nstructured once, then you can use special generated source code to\neasily write and read your structured data to and from a variety of data\nstreams and using a variety of languages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-sympy",
            "description": "SymPy is a Python library for symbolic mathematics."
        },
        {
            "name": "py-packaging",
            "description": "Core utilities for Python packages."
        },
        {
            "name": "py-cerberus",
            "description": "Lightweight, extensible schema and data validation tool for Python\ndictionaries"
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-onnx",
            "description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers\nAI developers to choose the right tools as their project evolves. ONNX\nprovides an open source format for AI models, both deep learning and\ntraditional ML. It defines an extensible computation graph model, as\nwell as definitions of built-in operators and standard data types.\nCurrently we focus on the capabilities needed for inferencing (scoring)."
        },
        {
            "name": "py-flatbuffers",
            "description": "The FlatBuffers serialization format implemented in Python. For a\nfaster and feature-complete version check out the C++ implementation in\n`flatbuffers` package."
        },
        {
            "name": "zlib",
            "description": "A free, general-purpose, legally unencumbered lossless data-compression\nlibrary."
        },
        {
            "name": "libpng",
            "description": "libpng is the official PNG reference library."
        },
        {
            "name": "py-pybind11",
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection."
        },
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "cudnn",
            "description": "NVIDIA cuDNN is a GPU-accelerated library of primitives for deep neural\nnetworks"
        },
        {
            "name": "iconv",
            "description": "Dummy package to provide interfaces available in libc."
        },
        {
            "name": "re2",
            "description": "RE2 is a fast, safe, thread-friendly alternative to backtracking regular\nexpression engines like those used in PCRE, Perl, and Python."
        }
    ],
    "dependent_to": [
        {
            "name": "acts",
            "description": "A Common Tracking Software (Acts) This project contains an experiment-\nindependent set of track reconstruction tools. The main philosophy is to\nprovide high-level track reconstruction modules that can be used for any\ntracking detector. The description of the tracking detector's geometry\nis optimized for efficient navigation and quick extrapolation of tracks.\nConverters for several common geometry description languages exist.\nHaving a highly performant, yet largely customizable implementation of\ntrack reconstruction algorithms was a primary objective for the design\nof this toolset. Additionally, the applicability to real-life HEP\nexperiments plays major role in the development process. Apart from\nalgorithmic code, this project also provides an event data model for the\ndescription of track parameters and measurements. Key features of this\nproject include: tracking geometry description which can be constructed\nfrom TGeo, DD4Hep, or GDML input, simple and efficient event data model,\nperformant and highly flexible algorithms for track propagation and\nfitting, basic seed finding algorithms."
        },
        {
            "name": "py-pytorch-lightning",
            "description": "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers."
        },
        {
            "name": "py-onnxmltools",
            "description": "Converts Machine Learning models to ONNX"
        }
    ]
}