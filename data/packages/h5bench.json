{
    "name": "h5bench",
    "aliases": [],
    "versions": [
        {
            "name": "latest",
            "branch": "master"
        },
        {
            "name": "develop",
            "branch": "develop"
        },
        {
            "name": "1.4",
            "commit": "67a3e6d91508e5ab77db79c6187b2eb3c96119e0"
        },
        {
            "name": "1.3",
            "commit": "ec75a466a77c337b4252c0afe1055c7fbe841e16"
        },
        {
            "name": "1.2",
            "commit": "866af6777573d20740d02acc47a9080de093e4ad"
        },
        {
            "name": "1.1",
            "commit": "1276530a128025b83a4d9e3814a98f92876bb5c4"
        },
        {
            "name": "1.0",
            "commit": "9d3438c1bc66c5976279ef203bd11a8d48ade724"
        }
    ],
    "latest_version": "1.4",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "metadata",
            "default": false,
            "description": "Enables metadata benchmark"
        },
        {
            "name": "amrex",
            "default": false,
            "description": "Enables AMReX benchmark"
        },
        {
            "name": "exerciser",
            "default": false,
            "description": "Enables exerciser benchmark"
        },
        {
            "name": "openpmd",
            "default": false,
            "description": "Enables OpenPMD benchmark"
        },
        {
            "name": "e3sm",
            "default": false,
            "description": "Enables E3SM benchmark"
        },
        {
            "name": "async",
            "default": false,
            "description": "Enables ASYNC VOL Connector"
        },
        {
            "name": "all",
            "default": false,
            "description": "Enables all h5bench benchmarks"
        }
    ],
    "homepage": "https://github.com/hpc-io/h5bench",
    "maintainers": [
        "jeanbez",
        "sbyna"
    ],
    "patches": [],
    "resources": [],
    "description": "A benchmark suite for measuring HDF5 performance.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "hdf5-vol-async",
            "description": "This package enables asynchronous IO in HDF5. Usage: Set the\nHDF5_VOL_CONNECTOR environment variable to enable this adaptor, i.e.\n$export HDF5_VOL_CONNECTOR=\"async under_vol=0;under_info={}\" ref.\nhttps://hdf5-vol-async.readthedocs.io/en/latest/gettingstarted.html#set-\nenvironmental-variables"
        },
        {
            "name": "mpi",
            "description": "A single processor implementation of the mpi library."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "parallel-netcdf",
            "description": "PnetCDF (Parallel netCDF) is a high-performance parallel I/O library for\naccessing files in format compatibility with Unidata's NetCDF,\nspecifically the formats of CDF-1, 2, and 5."
        }
    ],
    "dependent_to": []
}