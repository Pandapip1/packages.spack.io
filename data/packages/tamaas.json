{
    "name": "tamaas",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "2.6.0",
            "sha256": "e3a262e5b893aa1e23554b6bd6b41af68c841ef4ffd862bb8e50a1a17ac15af6"
        },
        {
            "name": "2.5.0.post1",
            "sha256": "28e52dc5b8a5f77588c73a6ef396c44c6a8e9d77e3e4929a4ab07232dc9bc565"
        },
        {
            "name": "2.4.0",
            "sha256": "38edba588ff3a6643523c28fb391e001dbafa9d0e58053b9e080eda70f8c71c9"
        },
        {
            "name": "2.3.1",
            "sha256": "7d63e374cbc7b5b93578ece7be5c084d1c2f0dbe1d57c4f0c8abd5ff5fff9ab0"
        },
        {
            "name": "2.3.0",
            "sha256": "0529e015c6cb5bbabaea5dce6efc5ec0f2aa76c00541f0d90ad0e2e3060a4520"
        }
    ],
    "latest_version": "2.6.0",
    "build_system": "SConsPackage",
    "conflicts": [
        {
            "name": "%gcc@:5",
            "spec": "",
            "description": null
        },
        {
            "name": "%clang@:5",
            "spec": "",
            "description": null
        },
        {
            "name": "%intel",
            "spec": "",
            "description": null
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "scons",
            "description": "Build systems supported by the package"
        },
        {
            "name": "python",
            "default": true,
            "description": "Provide Python bindings for Tamaas"
        },
        {
            "name": "solvers",
            "default": true,
            "description": "Enables extra Scipy-based nonlinear solvers"
        }
    ],
    "homepage": "https://gitlab.com/tamaas/tamaas",
    "maintainers": [
        "prs513rosewood"
    ],
    "patches": [],
    "resources": [],
    "description": "Tamaas is a C++ library with a Python interface that efficiently solves\ncontact mechanics problems with periodic rough surfaces, plasticity,\nadhesion and friction.\n",
    "dependencies": [
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        },
        {
            "name": "fftw-api",
            "description": "FFTW (AMD Optimized version) is a comprehensive collection of fast C\nroutines for computing the Discrete Fourier Transform (DFT) and various\nspecial cases thereof. It is an open-source implementation of the Fast\nFourier transform algorithm. It can compute transforms of real and\ncomplex-values arrays of arbitrary size and dimension. AMD Optimized\nFFTW is the optimized FFTW implementation targeted for AMD CPUs. For\nsingle precision build, please use precision value as float. Example :\nspack install amdfftw precision=float LICENSING INFORMATION: By\ndownloading, installing and using this software, you agree to the terms\nand conditions of the AMD AOCL-FFTW license agreement. You may obtain a\ncopy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/fftw/eula/fftw-\nlibraries-4-2-eula.html\nhttps://www.amd.com/en/developer/aocl/fftw/eula/fftw-libraries-eula.html"
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-pybind11",
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "scons",
            "description": "SCons is a software construction tool"
        },
        {
            "name": "thrust",
            "description": "Thrust is a parallel algorithms library which resembles the C++ Standard\nTemplate Library (STL)."
        }
    ],
    "dependent_to": []
}