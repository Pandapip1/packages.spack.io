{
    "name": "py-niworkflows",
    "aliases": [],
    "versions": [
        {
            "name": "1.4.0",
            "sha256": "d4e59070fde0290e0bfeece120ff1d2ff1f9573e3f2e6a719fe463c913af25ec"
        },
        {
            "name": "1.3.5",
            "sha256": "92e24f3462fb3ad4d8ee724506fba05da2b3ca0626850dd2e637a553e17d69b8"
        },
        {
            "name": "1.0.4",
            "sha256": "34bfa5561e6f872dbd85bb30a1b44c5e1be525167abe3932aee8ac06d15f6ed9"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "fsl",
            "default": false,
            "description": "Enable fsl support."
        },
        {
            "name": "ants",
            "default": false,
            "description": "Enable ants support."
        }
    ],
    "homepage": "https://github.com/nipreps/niworkflows",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-attrs",
            "description": "Classes Without Boilerplate"
        },
        {
            "name": "py-jinja2",
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment."
        },
        {
            "name": "py-matplotlib",
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python."
        },
        {
            "name": "py-nibabel",
            "description": "Access a multitude of neuroimaging data formats"
        },
        {
            "name": "py-nilearn",
            "description": "Statistical learning for neuroimaging in Python."
        },
        {
            "name": "py-nipype",
            "description": "Neuroimaging in Python: Pipelines and Interfaces."
        },
        {
            "name": "py-nitransforms",
            "description": "NiTransforms -- Neuroimaging spatial transforms in Python."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-packaging",
            "description": "Core utilities for Python packages."
        },
        {
            "name": "py-pandas",
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage."
        },
        {
            "name": "py-pybids",
            "description": "bids: interface with datasets conforming to BIDS"
        },
        {
            "name": "py-pyyaml",
            "description": "PyYAML is a YAML parser and emitter for Python."
        },
        {
            "name": "py-scikit-image",
            "description": "Image processing algorithms for SciPy, including IO, morphology,\nfiltering, warping, color manipulation, object detection, etc."
        },
        {
            "name": "py-scikit-learn",
            "description": "A set of python modules for machine learning and data mining."
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-seaborn",
            "description": "Seaborn: statistical data visualization. Seaborn is a library for making\nattractive and informative statistical graphics in Python. It is built\non top of matplotlib and tightly integrated with the PyData stack,\nincluding support for numpy and pandas data structures and statistical\nroutines from scipy and statsmodels."
        },
        {
            "name": "py-svgutils",
            "description": "Python tools to create and manipulate SVG files."
        },
        {
            "name": "py-transforms3d",
            "description": "Functions for 3D coordinate transformations."
        },
        {
            "name": "py-templateflow",
            "description": "A python client to query TemplateFlow via pyBIDS."
        },
        {
            "name": "fsl",
            "description": "FSL is a comprehensive library of analysis tools for FMRI, MRI and DTI\nbrain imaging data."
        },
        {
            "name": "ants",
            "description": "ANTs extracts information from complex datasets that include imaging.\nPaired with ANTsR (answer), ANTs is useful for managing, interpreting\nand visualizing multidimensional data. ANTs is popularly considered a\nstate-of-the-art medical image registration and segmentation toolkit.\nANTs depends on the Insight ToolKit (ITK), a widely used medical image\nprocessing library to which ANTs developers contribute."
        }
    ],
    "dependent_to": []
}