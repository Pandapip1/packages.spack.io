{
    "name": "changa",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "3.4",
            "sha256": "c2bceb6ac00025dfd704bb6960bc17c6df7c746872185845d1e75f47e6ce2a94"
        }
    ],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "name": "platform=windows",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [],
    "homepage": "https://faculty.washington.edu/trq/hpcc/tools/changa.html",
    "maintainers": [],
    "patches": [
        {
            "owner": "builtin.changa",
            "sha256": "12d068ce70511ccb08e6e800d33bb0acc961401cf73e4fec59778efa6ac3acf4",
            "level": 1,
            "working_dir": ".",
            "relative_path": "fix_configure_path.patch",
            "version": ""
        }
    ],
    "resources": [
        {
            "version": "",
            "name": "utility",
            "destination": "",
            "placement": "utility"
        }
    ],
    "description": "ChaNGa (Charm N-body GrAvity solver) is a code to perform collisionless\nN-body simulations. It can perform cosmological simulations with\nperiodic boundary conditions in comoving coordinates or simulations of\nisolated stellar systems. It also can include hydrodynamics using the\nSmooth Particle Hydrodynamics (SPH) technique. It uses a Barnes-Hut tree\nto calculate gravity, with hexadecapole expansion of nodes and Ewald\nsummation for periodic forces. Timestepping is done with a leapfrog\nintegrator with individual timesteps for each particle.\n",
    "dependencies": [
        {
            "name": "gnuconfig",
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files."
        },
        {
            "name": "charmpp",
            "description": "Charm++ is a parallel programming framework in C++ supported by an\nadaptive runtime system, which enhances user productivity and allows\nprograms to run portably from small multicore computers (your laptop) to\nthe largest supercomputers."
        }
    ],
    "dependent_to": []
}