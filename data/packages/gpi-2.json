{
    "name": "gpi-2",
    "aliases": [],
    "versions": [
        {
            "name": "develop",
            "branch": "next"
        },
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "1.4.0",
            "sha256": "3b8ffb45346b2fe56aaa7ba15a515e62f9dff45a28e6a014248e20094bbe50a1"
        }
    ],
    "build_system": "AutotoolsPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "mpi",
            "default": false,
            "description": "Enable MPI support"
        },
        {
            "name": "fortran",
            "default": true,
            "description": "Enable Fortran modules"
        },
        {
            "name": "fabrics",
            "default": "none",
            "description": "List of fabrics that are enabled; 'auto' lets gpi-2 determine"
        },
        {
            "name": "schedulers",
            "default": "none",
            "description": "List of schedulers for which support is enabled; 'auto' lets gpi-2 determine"
        }
    ],
    "homepage": "http://www.gpi-site.com",
    "maintainers": [
        "robert-mijakovic"
    ],
    "patches": [],
    "resources": [],
    "description": "GPI-2 is an API for the development of scalable, asynchronous and fault\ntolerant parallel applications. It implements the GASPI specification\n(www.gaspi.de)\n",
    "dependencies": [
        {
            "name": "autoconf",
            "description": "Autoconf -- system configuration part of autotools"
        },
        {
            "name": "automake",
            "description": "Automake -- make file builder part of autotools"
        },
        {
            "name": "libtool",
            "description": "libtool -- library building part of autotools."
        },
        {
            "name": "m4",
            "description": "GNU M4 is an implementation of the traditional Unix macro processor."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "rdma-core",
            "description": "RDMA core userspace libraries and daemons"
        },
        {
            "name": "slurm",
            "description": "Slurm is an open source, fault-tolerant, and highly scalable cluster\nmanagement and job scheduling system for large and small Linux clusters.\nSlurm requires no kernel modifications for its operation and is\nrelatively self-contained. As a cluster workload manager, Slurm has\nthree key functions. First, it allocates exclusive and/or non-exclusive\naccess to resources (compute nodes) to users for some duration of time\nso they can perform work. Second, it provides a framework for starting,\nexecuting, and monitoring work (normally a parallel job) on the set of\nallocated nodes. Finally, it arbitrates contention for resources by\nmanaging a queue of pending work."
        }
    ],
    "dependent_to": []
}