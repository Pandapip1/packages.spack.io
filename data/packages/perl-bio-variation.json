{
    "name": "perl-bio-variation",
    "aliases": [],
    "versions": [
        {
            "name": "1.7.5",
            "sha256": "4bffdd060b5e793919f700e46056eb3f0195ed4df2e60ad68b383c31e51f824f"
        }
    ],
    "latest_version": "1.7.5",
    "build_system": "PerlPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "perl",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://metacpan.org/pod/Bio::Variation",
    "maintainers": [
        "EbiArnie"
    ],
    "patches": [],
    "resources": [],
    "description": "BioPerl variation-related functionality\n",
    "dependencies": [
        {
            "name": "perl",
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development."
        },
        {
            "name": "perl-bioperl",
            "description": "BioPerl is the product of a community effort to produce Perl code which\nis useful in biology. Examples include Sequence objects, Alignment\nobjects and database searching objects. These objects not only do what\nthey are advertised to do in the documentation, but they also interact -\nAlignment objects are made from the Sequence objects, Sequence objects\nhave access to Annotation and SeqFeature objects and databases, Blast\nobjects can be converted to Alignment objects, and so on. This means\nthat the objects provide a coordinated and extensible framework to do\ncomputational biology. BioPerl development focuses on Perl classes, or\ncode that is used to create objects representing biological entities.\nThere are scripts provided in the scripts/ and examples/ directories but\nscripts are not the main focus of the BioPerl developers. Of course, as\nthe objects do most of the hard work for you, all you have to do is\ncombine a number of objects together sensibly to make useful scripts.\nThe intent of the BioPerl development effort is to make reusable tools\nthat aid people in creating their own sites or job-specific\napplications. The BioPerl website at https://bioperl.org/ also attempts\nto maintain links and archives of standalone bio-related Perl tools that\nare not affiliated or related to the core BioPerl effort. Check the site\nfor useful code ideas and contribute your own if possible."
        },
        {
            "name": "perl-io-string",
            "description": "Emulate file interface for in-core strings"
        },
        {
            "name": "perl-xml-twig",
            "description": "This module provides a way to process XML documents. It is build on top\nof XML::Parser. The module offers a tree interface to the document,\nwhile allowing you to output the parts of it that have been completely\nprocessed. It allows minimal resource (CPU and memory) usage by building\nthe tree only for the parts of the documents that need actual\nprocessing, through the use of the twig_roots and\ntwig_print_outside_roots options. The finish and finish_print methods\nalso help to increase performances. XML::Twig tries to make simple\nthings easy so it tries its best to takes care of a lot of the (usually)\nannoying (but sometimes necessary) features that come with XML and\nXML::Parser."
        },
        {
            "name": "perl-xml-writer",
            "description": "XML::Writer is a helper module for Perl programs that write an XML\ndocument. The module handles all escaping for attribute values and\ncharacter data and constructs different types of markup, such as tags,\ncomments, and processing instructions. By default, the module performs\nseveral well-formedness checks to catch errors during output. This\nbehaviour can be extremely useful during development and debugging, but\nit can be turned off for production-grade code. The module can operate\neither in regular mode in or Namespace processing mode. In Namespace\nmode, the module will generate Namespace Declarations itself, and will\nperform additional checks on the output."
        }
    ],
    "dependent_to": [
        {
            "name": "perl-bio-cluster",
            "description": "BioPerl cluster modules"
        }
    ]
}