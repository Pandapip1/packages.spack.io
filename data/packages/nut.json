{
    "name": "nut",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "0.1.1",
            "sha256": "9f1dca4a9d7003b170fd57d6720228ff25471616cf884e033652e90c49c089bb"
        }
    ],
    "latest_version": "0.1.1",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        },
        {
            "name": "%nvhpc",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%intel",
            "spec": "@serial",
            "description": "None"
        },
        {
            "name": "%pgi",
            "spec": "@serial",
            "description": "None"
        },
        {
            "name": "%xl",
            "spec": "@serial",
            "description": "None"
        },
        {
            "name": "%nag",
            "spec": "@serial",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        }
    ],
    "homepage": "https://github.com/lanl/NuT",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "NuT is Monte Carlo code for neutrino transport and is a C++ analog to\nthe Haskell McPhD code. NuT is principally aimed at exploring on-node\nparallelism and performance issues.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "random123",
            "description": "Random123 is a library of 'counter-based' random number generators\n(CBRNGs), in which the Nth random number can be obtained by applying a\nstateless mixing function to N instead of the conventional approach of\nusing N iterations of a stateful transformation."
        }
    ],
    "dependent_to": []
}