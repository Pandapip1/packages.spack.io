{
    "name": "py-traitsui",
    "aliases": [],
    "versions": [
        {
            "name": "7.2.1",
            "sha256": "dfc39015faf0591f9927e3d4d22bd95a16d49c85db30e60acd4ba7b85c7c5d5b"
        },
        {
            "name": "6.1.3",
            "sha256": "48381763b181efc58eaf288431d1d92d028d0d97dfdd33eba7809aae8aef814f"
        }
    ],
    "latest_version": "7.2.1",
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "name": "backend=pyside",
            "spec": "@7.1:",
            "description": "None"
        },
        {
            "name": "backend=pyside2",
            "spec": "@:7.0",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "backend",
            "default": "pyqt5",
            "description": "Default backend"
        }
    ],
    "homepage": "https://docs.enthought.com/traitsui",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "The TraitsUI project contains a toolkit-independent GUI abstraction\nlayer, which is used to support the \"visualization\" features of the\nTraits package. Thus, you can write model in terms of the Traits API and\nspecify a GUI in terms of the primitives supplied by TraitsUI (views,\nitems, editors, etc.), and let TraitsUI and your selected toolkit and\nback-end take care of the details of displaying them.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-traits",
            "description": "Explicitly typed attributes for Python."
        },
        {
            "name": "py-pyface",
            "description": "The pyface project contains a toolkit-independent GUI abstraction layer,\nwhich is used to support the \"visualization\" features of the Traits\npackage. Thus, you can write code in terms of the Traits API (views,\nitems, editors, etc.), and let pyface and your selected toolkit and\nback-end take care of the details of displaying them."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-wxpython",
            "description": "Cross platform GUI toolkit for Python."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-pyqt4",
            "description": "PyQt is a set of Python v2 and v3 bindings for The Qt Company's Qt\napplication framework and runs on all platforms supported by Qt\nincluding Windows, OS X, Linux, iOS and Android. PyQt4 supports Qt v4\nand will build against Qt v5."
        },
        {
            "name": "py-pygments",
            "description": "Pygments is a syntax highlighting package written in Python."
        },
        {
            "name": "py-pyqt5",
            "description": "PyQt is a set of Python v2 and v3 bindings for The Qt Company's Qt\napplication framework and runs on all platforms supported by Qt\nincluding Windows, OS X, Linux, iOS and Android. PyQt5 supports Qt v5."
        },
        {
            "name": "py-pyside",
            "description": "Python bindings for Qt."
        },
        {
            "name": "py-pyside2",
            "description": "Python bindings for Qt."
        },
        {
            "name": "py-shiboken2",
            "description": "Python / C++ bindings helper module."
        }
    ],
    "dependent_to": [
        {
            "name": "py-apptools",
            "description": "The apptools project includes a set of packages that Enthought has found\nuseful in creating a number of applications. They implement\nfunctionality that is commonly needed by many applications."
        },
        {
            "name": "py-mayavi",
            "description": "Mayavi: 3D visualization of scientific data in Python."
        }
    ]
}