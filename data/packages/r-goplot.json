{
    "name": "r-goplot",
    "aliases": [],
    "versions": [
        {
            "name": "1.0.2",
            "sha256": "3ddaa2b6d1297ad6daad30d18af708adf43d86e8804b1b92fa29dfbf26d80df9"
        }
    ],
    "latest_version": "1.0.2",
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "generic",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://cloud.r-project.org/package=GOplot",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Visualization of Functional Analysis Data. Implementation of\nmultilayered visualizations for enhanced graphical representation of\nfunctional analysis data. It combines and integrates omics data derived\nfrom expression and functional annotation enrichment analyses. Its\nplotting functions have been developed with an hierarchical structure in\nmind: starting from a general overview to identify the most enriched\ncategories (modified bar plot, bubble plot) to a more detailed one\ndisplaying different types of relevant information for the molecules in\na given set of categories (circle plot, chord plot, cluster plot, Venn\ndiagram, heatmap).\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-ggplot2",
            "description": "Create Elegant Data Visualisations Using the Grammar of Graphics. A\nsystem for 'declaratively' creating graphics, based on \"The Grammar of\nGraphics\". You provide the data, tell 'ggplot2' how to map variables to\naesthetics, what graphical primitives to use, and it takes care of the\ndetails."
        },
        {
            "name": "r-ggdendro",
            "description": "Create Dendrograms and Tree Diagrams Using 'ggplot2'. This is a set of\ntools for dendrograms and tree plots using 'ggplot2'. The 'ggplot2'\nphilosophy is to clearly separate data from the presentation.\nUnfortunately the plot method for dendrograms plots directly to a plot\ndevice without exposing the data. The 'ggdendro' package resolves this\nby making available functions that extract the dendrogram plot data. The\npackage provides implementations for tree, rpart, as well as diana and\nagnes cluster diagrams."
        },
        {
            "name": "r-gridextra",
            "description": "Miscellaneous Functions for \"Grid\" Graphics. Provides a number of user-\nlevel functions to work with \"grid\" graphics, notably to arrange\nmultiple grid-based plots on a page, and draw tables."
        },
        {
            "name": "r-rcolorbrewer",
            "description": "ColorBrewer Palettes. Provides color schemes for maps (and other\ngraphics) designed by Cynthia Brewer as described at\nhttps://colorbrewer2.org/"
        }
    ],
    "dependent_to": [
        {
            "name": "trinity",
            "description": "Trinity, developed at the Broad Institute and the Hebrew University of\nJerusalem, represents a novel method for the efficient and robust de\nnovo reconstruction of transcriptomes from RNA-seq data. Trinity\ncombines three independent software modules: Inchworm, Chrysalis, and\nButterfly, applied sequentially to process large volumes of RNA-seq\nreads. Trinity partitions the sequence data into many individual de\nBruijn graphs, each representing the transcriptional complexity at a\ngiven gene or locus, and then processes each graph independently to\nextract full-length splicing isoforms and to tease apart transcripts\nderived from paralogous genes."
        }
    ]
}