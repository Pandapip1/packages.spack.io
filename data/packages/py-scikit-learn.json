{
    "name": "py-scikit-learn",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "1.3.2",
            "sha256": "a2f54c76accc15a34bfb9066e6c7a56c1e7235dda5762b990792330b52ccfb05"
        },
        {
            "name": "1.3.1",
            "sha256": "1a231cced3ee3fa04756b4a7ab532dc9417acd581a330adff5f2c01ac2831fcf"
        },
        {
            "name": "1.3.0",
            "sha256": "8be549886f5eda46436b6e555b0e4873b4f10aa21c07df45c4bc1735afbccd7a"
        },
        {
            "name": "1.2.2",
            "sha256": "8429aea30ec24e7a8c7ed8a3fa6213adf3814a6efbea09e16e0a0c71e1a1a3d7"
        },
        {
            "name": "1.2.1",
            "sha256": "fbf8a5c893c9b4b99bcc7ed8fb3e8500957a113f4101860386d06635520f7cfb"
        },
        {
            "name": "1.2.0",
            "sha256": "680b65b3caee469541385d2ca5b03ff70408f6c618c583948312f0d2125df680"
        },
        {
            "name": "1.1.3",
            "sha256": "bef51978a51ec19977700fe7b86aecea49c825884f3811756b74a3b152bb4e35"
        },
        {
            "name": "1.1.2",
            "sha256": "7c22d1305b16f08d57751a4ea36071e2215efb4c09cb79183faa4e8e82a3dbf8"
        },
        {
            "name": "1.1.1",
            "sha256": "3e77b71e8e644f86c8b5be7f1c285ef597de4c384961389ee3e9ca36c445b256"
        },
        {
            "name": "1.1.0",
            "sha256": "80f9904f5b1356adfc32406725dd94c8cc9c8d265047d98390033a6c238cbb29"
        },
        {
            "name": "1.0.2",
            "sha256": "b5870959a5484b614f26d31ca4c17524b1b0317522199dc985c3b4256e030767"
        },
        {
            "name": "1.0.1",
            "sha256": "ac2ca9dbb754d61cfe1c83ba8483498ef951d29b93ec09d6f002847f210a99da"
        },
        {
            "name": "1.0",
            "sha256": "776800194e757cd212b47cd05907e0eb67a554ad333fe76776060dbb729e3427"
        },
        {
            "name": "0.24.2",
            "sha256": "d14701a12417930392cd3898e9646cf5670c190b933625ebe7511b1f7d7b8736"
        },
        {
            "name": "0.24.1",
            "sha256": "a0334a1802e64d656022c3bfab56a73fbd6bf4b1298343f3688af2151810bbdf"
        },
        {
            "name": "0.24.0",
            "sha256": "076369634ee72b5a5941440661e2f306ff4ac30903802dc52031c7e9199ac640"
        },
        {
            "name": "0.23.2",
            "sha256": "20766f515e6cd6f954554387dfae705d93c7b544ec0e6c6a5d8e006f6f7ef480"
        },
        {
            "name": "0.23.1",
            "sha256": "e3fec1c8831f8f93ad85581ca29ca1bb88e2da377fb097cf8322aa89c21bc9b8"
        },
        {
            "name": "0.23.0",
            "sha256": "639a53df6273acc6a7510fb0c658b94e0c70bb13dafff9d14932c981ff9baff4"
        },
        {
            "name": "0.22.2.post1",
            "sha256": "57538d138ba54407d21e27c306735cbd42a6aae0df6a5a30c7a6edde46b0017d"
        },
        {
            "name": "0.22.1",
            "sha256": "51ee25330fc244107588545c70e2f3570cfc4017cff09eed69d6e1d82a212b7d"
        },
        {
            "name": "0.22",
            "sha256": "314abf60c073c48a1e95feaae9f3ca47a2139bd77cebb5b877c23a45c9e03012"
        }
    ],
    "latest_version": "1.3.2",
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "name": "~openmp",
            "spec": "@:999",
            "description": "py-scikit-learn: Only master supports ~openmp"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "openmp",
            "default": true,
            "description": "Build with OpenMP support"
        }
    ],
    "homepage": "https://scikit-learn.org/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "A set of python modules for machine learning and data mining.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "py-joblib",
            "description": "Lightweight pipelining with Python functions."
        },
        {
            "name": "py-threadpoolctl",
            "description": "Python helpers to limit the number of threads used in the threadpool-\nbacked of common native libraries used for scientific computing and data\nscience (e.g. BLAS and OpenMP)."
        },
        {
            "name": "llvm-openmp",
            "description": "The OpenMP subproject of LLVM contains the components required to build\nan executable OpenMP program that are outside the compiler itself."
        },
        {
            "name": "py-matplotlib",
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python."
        },
        {
            "name": "py-scikit-image",
            "description": "Image processing algorithms for SciPy, including IO, morphology,\nfiltering, warping, color manipulation, object detection, etc."
        },
        {
            "name": "py-pandas",
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "py-pyamg",
            "description": "PyAMG is a library of Algebraic Multigrid (AMG) solvers with a\nconvenient Python interface."
        },
        {
            "name": "py-pooch",
            "description": "Pooch manages your Python library's sample data files: it automatically\ndownloads and stores them in a local directory, with support for\nversioning and corruption checks."
        }
    ],
    "dependent_to": [
        {
            "name": "py-glmsingle",
            "description": "A toolbox for accurate single-trial estimates in fMRI time-series data."
        },
        {
            "name": "py-alpaca-farm",
            "description": "AlpacaFarm is a simulator that enables research and development on\nlearning from feedback at a fraction of the usual cost, promoting\naccessible research on instruction following and alignment."
        },
        {
            "name": "py-kb-python",
            "description": "Python wrapper around kallisto | bustools for scRNA-seq analysis."
        },
        {
            "name": "py-pynndescent",
            "description": "PyNNDescent is a Python nearest neighbor descent for approximate nearest\nneighbors."
        },
        {
            "name": "py-mne",
            "description": "MNE python project for MEG and EEG data analysis."
        },
        {
            "name": "py-kmodes",
            "description": "Python implementations of the k-modes and k-prototypes clustering\nalgorithms for clustering categorical data."
        },
        {
            "name": "py-mapclassify",
            "description": "Classification Schemes for Choropleth Maps."
        },
        {
            "name": "py-hdbscan",
            "description": "HDBSCAN - Hierarchical Density-Based Spatial Clustering of Applications\nwith Noise. Performs DBSCAN over varying epsilon values and integrates\nthe result to find a clustering that gives the best stability over\nepsilon. This allows HDBSCAN to find clusters of varying densities\n(unlike DBSCAN), and be more robust to parameter selection. In practice\nthis means that HDBSCAN returns a good clustering straight away with\nlittle or no parameter tuning -- and the primary parameter, minimum\ncluster size, is intuitive and easy to select. HDBSCAN is ideal for\nexploratory data analysis; it's a fast and robust algorithm that you can\ntrust to return meaningful clusters (if there are any)."
        },
        {
            "name": "py-hep-ml",
            "description": "Machine Learning for High Energy Physics"
        },
        {
            "name": "py-hyperopt",
            "description": "Hyperopt is a Python library for serial and parallel optimization over\nawkward search spaces, which may include real-valued, discrete, and\nconditional dimensions."
        },
        {
            "name": "py-openai",
            "description": "The OpenAI Python library provides convenient access to the OpenAI API\nfrom applications written in the Python language. It includes a pre-\ndefined set of classes for API resources that initialize themselves\ndynamically from API responses which makes it compatible with a wide\nrange of versions of the OpenAI API."
        },
        {
            "name": "py-seqeval",
            "description": "seqeval is a Python framework for sequence labeling evaluation. seqeval\ncan evaluate the performance of chunking tasks such as named-entity\nrecognition, part-of-speech tagging, semantic role labeling and so on."
        },
        {
            "name": "py-pathml",
            "description": "An open-source toolkit for computational pathology and machine learning."
        },
        {
            "name": "py-soyclustering",
            "description": "This package is implementation of Improving spherical k-means for\ndocument clustering. Fast initialization, sparse centroid projection,\nand efficient cluster labeling (Kim et al., 2020)."
        },
        {
            "name": "py-smac",
            "description": "SMAC is a tool for algorithm configuration to optimize the parameters of\narbitrary algorithms, including hyperparameter optimization of Machine\nLearning algorithms."
        },
        {
            "name": "gptune",
            "description": "GPTune is an autotuning framework that relies on multitask and transfer\nlearnings to help solve the underlying black-box optimization problem\nusing Bayesian optimization methodologies."
        },
        {
            "name": "py-shap",
            "description": "SHAP (SHapley Additive exPlanations): a unified approach to explain the\noutput of any machine learning model."
        },
        {
            "name": "py-mikado",
            "description": "Mikado is a lightweight Python3 pipeline whose purpose is to facilitate\nthe identification of expressed loci from RNA-Seq data * and to select\nthe best models in each locus."
        },
        {
            "name": "py-sdmetrics",
            "description": "The SDMetrics library provides a set of dataset-agnostic tools for\nevaluating the quality of a synthetic database by comparing it to the\nreal database that it is modeled after."
        },
        {
            "name": "py-nistats",
            "description": "Modeling and Statistical analysis of fMRI data in Python."
        },
        {
            "name": "py-bayesian-optimization",
            "description": "Pure Python implementation of bayesian global optimization with gaussian\nprocesses."
        },
        {
            "name": "py-dask-ml",
            "description": "Scalable Machine Learning with Dask."
        },
        {
            "name": "py-cuml",
            "description": "cuML is a suite of libraries that implement machine learning algorithms\nand mathematical primitives functions that share compatible APIs with\nother RAPIDS projects."
        },
        {
            "name": "py-dh-scikit-optimize",
            "description": "A Modified version of scikit-optimize a Sequential model-based\noptimization toolbox for DeepHyper. Scikit-Optimize, or skopt, is a\nsimple and efficient library to minimize (very) expensive and noisy\nblack-box functions. It implements several methods for sequential model-\nbased optimization. skopt aims to be accessible and easy to use in many\ncontexts. The library is built on top of NumPy, SciPy and Scikit-Learn."
        },
        {
            "name": "py-torchgeo",
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data."
        },
        {
            "name": "py-mdanalysis",
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)"
        },
        {
            "name": "py-nibetaseries",
            "description": "BetaSeries Correlations implemented in Nipype."
        },
        {
            "name": "py-abcpy",
            "description": "ABCpy is a highly modular, scientific library for approximate Bayesian\ncomputation (ABC) written in Python. It is designed to run all included\nABC algorithms in parallel, either using multiple cores of a single\ncomputer or using an Apache Spark or MPI enabled cluster."
        },
        {
            "name": "py-matminer",
            "description": "Matminer is a library for performing data mining in the field of\nmaterials science."
        },
        {
            "name": "py-heat",
            "description": "Heat is a flexible and seamless open-source software for high\nperformance data analytics and machine learning. It provides highly\noptimized algorithms and data structures for tensor computations using\nCPUs, GPUs and distributed cluster systems on top of MPI."
        },
        {
            "name": "py-tpot",
            "description": "A Python Automated Machine Learning tool that optimizes machine\nlearning pipelines using genetic programming."
        },
        {
            "name": "topaz",
            "description": "topaz: Pipeline for particle picking in cryo-electron microscopy images\nusing convolutional neural networks trained from positive and unlabeled\nexamples. Also featuring micrograph and tomogram denoising with DNNs."
        },
        {
            "name": "py-xgboost",
            "description": "XGBoost is an optimized distributed gradient boosting library designed\nto be highly efficient, flexible and portable."
        },
        {
            "name": "py-mlflow",
            "description": "MLflow: A Platform for ML Development and Productionization."
        },
        {
            "name": "py-convokit",
            "description": "This toolkit contains tools to extract conversational features and\nanalyze social phenomena in conversations, using a single unified\ninterface inspired by (and compatible with) scikit-learn."
        },
        {
            "name": "py-mlxtend",
            "description": "Mlxtend (machine learning extensions) is a Python library of useful\ntools for the day-to-day data science tasks."
        },
        {
            "name": "py-meldmd",
            "description": "MELD is a tool for inferring the structure of biomolecules from sparse,\nambiguous, or noisy data."
        },
        {
            "name": "py-drep",
            "description": "dRep is a python program for rapidly comparing large numbers of genomes.\ndRep can also \"de-replicate\" a genome set by identifying groups of\nhighly similar genomes and choosing the best representative genome for\neach genome set."
        },
        {
            "name": "py-ytopt",
            "description": "Ytopt package implements search using Random Forest (SuRF), an\nautotuning search method developed within Y-Tune ECP project."
        },
        {
            "name": "py-imbalanced-learn",
            "description": "imbalanced-learn is a python package offering a number of re-sampling\ntechniques commonly used in datasets showing strong between-class\nimbalance. It is compatible with scikit-learn and is part of scikit-\nlearn-contrib projects."
        },
        {
            "name": "shapemapper",
            "description": "ShapeMapper automates the calculation of RNA structure probing\nreactivities from mutational profiling (MaP) experiments, in which\nchemical adducts on RNA are detected as internal mutations in cDNA\nthrough reverse transcription and read out by massively parallel\nsequencing."
        },
        {
            "name": "py-pyts",
            "description": "pyts is a Python package for time series classification. It aims to make\ntime series classification easily accessible by providing preprocessing\nand utility tools, and implementations of state-of-the-art algorithms.\nMost of these algorithms transform time series, thus pyts provides\nseveral tools to perform these transformations."
        },
        {
            "name": "py-niworkflows",
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)"
        },
        {
            "name": "py-rsatoolbox",
            "description": "Representational Similarity Analysis (RSA) in Python."
        },
        {
            "name": "py-glmnet",
            "description": "This is a Python wrapper for the fortran library used in the R package\nglmnet."
        },
        {
            "name": "py-intensity-normalization",
            "description": "Normalize intensities of images from various MRI modalities"
        },
        {
            "name": "py-elephant",
            "description": "Elephant is a package for analysis of electrophysiology data in Python"
        },
        {
            "name": "py-kosh",
            "description": "Kosh allows codes to store, query, share data via an easy-to-use Python\nAPI. Kosh lies on top of Sina and can use any database backend supported\nby Sina. In adition Kosh aims to make data access and sharing as simple\nas possible."
        },
        {
            "name": "py-librosa",
            "description": "A python package for music and audio analysis."
        },
        {
            "name": "py-umap-learn",
            "description": "Uniform Manifold Approximation and Projection (UMAP) is a dimension\nreduction technique that can be used for visualisation similarly to\nt-SNE, but also for general non-linear dimension reduction."
        },
        {
            "name": "py-scanpy",
            "description": "Scanpy is a scalable toolkit for analyzing single-cell gene expression\ndata built jointly with anndata."
        },
        {
            "name": "py-coclust",
            "description": "Coclust provides both a Python package which implements several diagonal\nand non-diagonal co-clustering algorithms, and a ready to use script to\nperform co- clustering"
        },
        {
            "name": "py-ogb",
            "description": "The Open Graph Benchmark (OGB) is a collection of benchmark datasets,\ndata loaders, and evaluators for graph machine learning. Datasets cover\na variety of graph machine learning tasks and real-world applications.\nThe OGB data loaders are fully compatible with popular graph deep\nlearning frameworks, including PyTorch Geometric and Deep Graph Library\n(DGL). They provide automatic dataset downloading, standardized dataset\nsplits, and unified performance evaluation."
        },
        {
            "name": "py-torch-geometric",
            "description": "PyTorch Geometric (PyG) is a geometric deep learning extension library\nfor PyTorch. It consists of various methods for deep learning on graphs\nand other irregular structures, also known as geometric deep learning,\nfrom a variety of published papers. In addition, it consists of an easy-\nto-use mini-batch loader for many small and single giant graphs, multi\ngpu-support, a large number of common benchmark datasets (based on\nsimple interfaces to create your own), and helpful transforms, both for\nlearning on arbitrary graphs as well as on 3D meshes or point clouds."
        },
        {
            "name": "py-ctgan",
            "description": "CTGAN is a collection of Deep Learning based Synthetic Data Generators\nfor single table data, which are able to learn from real data and\ngenerate synthetic clones with high fidelity."
        },
        {
            "name": "py-lightgbm",
            "description": "LightGBM is a gradient boosting framework that uses tree based learning\nalgorithms."
        },
        {
            "name": "candle-benchmarks",
            "description": "ECP-CANDLE Benchmarks"
        },
        {
            "name": "py-continuum",
            "description": "A clean and simple data loading library for Continual Learning"
        },
        {
            "name": "py-deephyper",
            "description": "Scalable asynchronous neural architecture and hyperparameter search for\ndeep neural networks."
        },
        {
            "name": "py-fastai",
            "description": "You can use fastai without any installation by using Google Colab. In\nfact, every page of this documentation is also available as an\ninteractive notebook - click \"Open in colab\" at the top of any page to\nopen it (be sure to change the Colab runtime to \"GPU\" to have it run\nfast!) See the fast.ai documentation on Using Colab for more\ninformation."
        },
        {
            "name": "py-skl2onnx",
            "description": "Convert scikit-learn models to ONNX"
        },
        {
            "name": "py-qiskit-nature",
            "description": "Qiskit Nature is an open-source framework which supports solving quantum\nmechanical natural science problems using quantum computing algorithms"
        },
        {
            "name": "py-neurora",
            "description": "A Python Toolbox for Multimodal Neural Data Representation Analysis."
        },
        {
            "name": "py-dask-glm",
            "description": "Dask-glm is a library for fitting Generalized Linear Models on large\ndatasets."
        },
        {
            "name": "py-fracridge",
            "description": "Fractional Ridge Regression."
        },
        {
            "name": "py-exarl",
            "description": "A scalable software framework for reinforcement learning environments\nand agents/policies used for the Design and Control applications"
        },
        {
            "name": "py-scikit-optimize",
            "description": "Scikit-Optimize, or skopt, is a simple and efficient library to minimize\n(very) expensive and noisy black-box functions. It implements several\nmethods for sequential model-based optimization. skopt aims to be\naccessible and easy to use in many contexts. The library is built on top\nof NumPy, SciPy and Scikit-Learn."
        },
        {
            "name": "callflow",
            "description": "CallFlow is an interactive visual analysis tool that provides a high-\nlevel overview of CCTs together with semantic refinement operations to\nprogressively explore the CCTs."
        },
        {
            "name": "py-ax-platform",
            "description": "Adaptive experimentation is the machine-learning guided process of\niteratively exploring a (possibly infinite) parameter space in order to\nidentify optimal configurations in a resource-efficient manner. Ax\ncurrently supports Bayesian optimization and bandit optimization as\nexploration strategies. Bayesian optimization in Ax is powered by\nBoTorch, a modern library for Bayesian optimization research built on\nPyTorch."
        },
        {
            "name": "py-python-picard",
            "description": "Preconditoned ICA for Real Data."
        },
        {
            "name": "py-neurokit2",
            "description": "The Python Toolbox for Neurophysiological Signal Processing. This\npackage is the continuation of NeuroKit 1. It's a user-friendly package\nproviding easy access to advanced biosignal processing routines.\nResearchers and clinicians without extensive knowledge of programming or\nbiomedical signal processing can analyze physiological data with only\ntwo lines of code."
        },
        {
            "name": "py-nexusforge",
            "description": "Blue Brain Nexus Forge is a domain-agnostic, generic and extensible\nPython framework enabling non-expert users to create and manage\nknowledge graphs."
        },
        {
            "name": "py-qudida",
            "description": "QuDiDA is a micro library for very naive though quick pixel level image\ndomain adaptation via scikit-learn transformers."
        },
        {
            "name": "py-fairscale",
            "description": "FairScale is a PyTorch extension library for high performance and large\nscale training. This library extends basic PyTorch capabilities while\nadding new SOTA scaling techniques."
        },
        {
            "name": "py-nilearn",
            "description": "Statistical learning for neuroimaging in Python."
        },
        {
            "name": "py-antspyx",
            "description": "Advanced Normalization Tools in Python."
        },
        {
            "name": "py-panaroo",
            "description": "A Bacterial Pangenome Analysis Pipeline"
        },
        {
            "name": "py-scikit-learn-extra",
            "description": "A set of useful tools compatible with scikit-learn scikit-learn-extra is\na Python module for machine learning that extends scikit-learn. It\nincludes algorithms that are useful but do not satisfy the scikit-learn\ninclusion criteria, for instance due to their novelty or lower citation\nnumber."
        },
        {
            "name": "py-psana",
            "description": "LCLS II Developement: PSAna Python."
        },
        {
            "name": "py-gpytorch",
            "description": "GPyTorch is a Gaussian process library implemented using PyTorch.\nGPyTorch is designed for creating scalable, flexible, and modular\nGaussian process models with ease."
        },
        {
            "name": "py-instrain",
            "description": "inStrain is python program for analysis of co-occurring genome\npopulations from metagenomes that allows highly accurate genome\ncomparisons, analysis of coverage, microdiversity, and linkage, and\nsensitive SNP detection with gene localization and synonymous non-\nsynonymous identification."
        },
        {
            "name": "py-angel",
            "description": "ANGEL: Robust Open Reading Frame prediction"
        },
        {
            "name": "py-hmmlearn",
            "description": "hmmlearn is a set of algorithms for unsupervised learning and inference\nof Hidden Markov Models."
        }
    ]
}