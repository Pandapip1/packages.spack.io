{
    "name": "py-pytest-cov",
    "aliases": [],
    "versions": [
        {
            "name": "4.0.0",
            "sha256": "996b79efde6433cdbd0088872dbc5fb3ed7fe1578b68cdbba634f14bb8dd0470"
        },
        {
            "name": "3.0.0",
            "sha256": "e7f0f5b1617d2210a2cabc266dfe2f4c75a8d32fb89eafb7ad9d06f6d076d470"
        },
        {
            "name": "2.8.1",
            "sha256": "cc6742d8bac45070217169f5f72ceee1e0e55b0221f54bcf24845972d3a47f2b"
        },
        {
            "name": "2.3.1",
            "sha256": "fa0a212283cdf52e2eecc24dd6459bb7687cc29adb60cb84258fab73be8dda0f"
        }
    ],
    "latest_version": "4.0.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/pytest-dev/pytest-cov",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Pytest plugin for measuring coverage.\n",
    "dependencies": [
        {
            "name": "py-coverage",
            "description": "Testing coverage checker for python"
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-datalad-webapp",
            "description": "DataLad extension for exposing commands via a web request API"
        },
        {
            "name": "n2p2",
            "description": "N2p2 (The neural network potential package) provides ready-to-use\nsoftware for high-dimensional neural network potentials in computational\nphysics and chemistry."
        },
        {
            "name": "py-devito",
            "description": "Devito is a Python package to implement optimized stencil computation.\n(e.g., finite differences, image processing, machine learning) from\nhigh-level symbolic problem definitions. Devito builds on SymPy and\nemploys automated code generation and just-in-time compilation to\nexecute optimized computational kernels on several computer platforms,\nincluding CPUs, GPUs, and clusters thereof."
        },
        {
            "name": "py-pytest-astropy",
            "description": "Meta-package containing dependencies for testing."
        },
        {
            "name": "py-psyclone",
            "description": "Code generation system developed to support domain-specific languages\n(DSLs) for finite element, finite volume and finite difference codes.\nNotably, it is used in the LFRic Project from the UK Met Office, and it\nalso supports the GOcean (2D, finite difference) DSL."
        },
        {
            "name": "py-blight",
            "description": "A catch-all compile-tool wrapper."
        },
        {
            "name": "py-datalad",
            "description": "data distribution geared toward scientific datasets. DataLad makes data\nmanagement and data distribution more accessible. To do that, it stands\non the shoulders of Git and Git-annex to deliver a decentralized system\nfor data exchange. This includes automated ingestion of data from online\nportals and exposing it in readily usable form as Git(-annex)\nrepositories, so-called datasets. The actual data storage and permission\nmanagement, however, remains with the original data providers."
        },
        {
            "name": "py-torchgeo",
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data."
        },
        {
            "name": "neuron",
            "description": "NEURON is a simulation environment for single and networks of neurons.\nNEURON is a simulation environment for modeling individual and networks\nof neurons. NEURON models individual neurons via the use of sections\nthat are automatically subdivided into individual compartments, instead\nof requiring the user to manually create compartments."
        },
        {
            "name": "py-multi-imbalance",
            "description": "Multi-class imbalance is a common problem occurring in real-world\nsupervised classifications tasks. While there has already been some\nresearch on the specialized methods aiming to tackle that challenging\nproblem, most of them still lack coherent Python implementation that is\nsimple, intuitive and easy to use. multi-imbalance is a python package\ntackling the problem of multi-class imbalanced datasets in machine\nlearnin"
        },
        {
            "name": "py-hepdata-lib",
            "description": "Library for getting your data into HEPData"
        },
        {
            "name": "py-shapely",
            "description": "Manipulation and analysis of geometric objects in the Cartesian plane."
        }
    ]
}