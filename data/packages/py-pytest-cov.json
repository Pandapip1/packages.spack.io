{
    "name": "py-pytest-cov",
    "aliases": [],
    "versions": [
        {
            "name": "2.8.1",
            "sha256": "cc6742d8bac45070217169f5f72ceee1e0e55b0221f54bcf24845972d3a47f2b"
        },
        {
            "name": "2.3.1",
            "sha256": "fa0a212283cdf52e2eecc24dd6459bb7687cc29adb60cb84258fab73be8dda0f"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/pytest-dev/pytest-cov",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Pytest plugin for measuring coverage.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "py-coverage",
            "description": "Testing coverage checker for python"
        }
    ],
    "dependent_to": [
        {
            "name": "py-shapely",
            "description": "Manipulation and analysis of geometric objects in the Cartesian plane."
        },
        {
            "name": "py-parsl",
            "description": "Simple data dependent workflows in Python"
        },
        {
            "name": "n2p2",
            "description": "N2p2 (The neural network potential package) provides ready-to-use\nsoftware for high-dimensional neural network potentials in computational\nphysics and chemistry."
        },
        {
            "name": "py-torchgeo",
            "description": "TorchGeo: datasets, transforms, and models for geospatial data. TorchGeo\nis a PyTorch domain library, similar to torchvision, that provides\ndatasets, transforms, samplers, and pre-trained models specific to\ngeospatial data."
        },
        {
            "name": "py-datalad-webapp",
            "description": "DataLad extension for exposing commands via a web request API"
        }
    ]
}