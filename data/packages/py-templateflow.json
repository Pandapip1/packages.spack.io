{
    "name": "py-templateflow",
    "aliases": [],
    "versions": [
        {
            "name": "0.7.1",
            "sha256": "c6e8282d1ffbb5dca7bd704a12e02bd00021860b71a043c35716861910c7187f"
        },
        {
            "name": "0.4.2",
            "sha256": "5585f3e7ccaa756f811aafb526ed6b2c79aabfd012477129af9c6038d7686f84"
        }
    ],
    "latest_version": "0.7.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/templateflow/python-client",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "A python client to query TemplateFlow via pyBIDS.\n",
    "dependencies": [
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-pybids",
            "description": "bids: interface with datasets conforming to BIDS"
        },
        {
            "name": "py-requests",
            "description": "Python HTTP for Humans."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-setuptools-scm",
            "description": "The blessed package to manage your versions by scm tags."
        },
        {
            "name": "py-tqdm",
            "description": "A Fast, Extensible Progress Meter"
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": [
        {
            "name": "py-niworkflows",
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)"
        }
    ]
}