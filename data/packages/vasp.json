{
    "name": "vasp",
    "aliases": [],
    "versions": [
        {
            "name": "6.2.0",
            "sha256": "49e7ba351bd634bc5f5f67a8ef1e38e64e772857a1c02f602828898a84197e25"
        },
        {
            "name": "6.1.1",
            "sha256": "e37a4dfad09d3ad0410833bcd55af6b599179a085299026992c2d8e319bf6927"
        },
        {
            "name": "5.4.4.pl2",
            "sha256": "98f75fd75399a23d76d060a6155f4416b340a1704f256a00146f89024035bc8e"
        },
        {
            "name": "5.4.4",
            "sha256": "5bd2449462386f01e575f9adf629c08cb03a13142806ffb6a71309ca4431cfb3"
        }
    ],
    "latest_version": "6.2.0",
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "name": "platform=windows",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%gcc@:8",
            "spec": "",
            "description": "GFortran before 9.x does not support all features needed to build VASP"
        },
        {
            "name": "+vaspsol",
            "spec": "+cuda",
            "description": "+vaspsol only available for CPU"
        },
        {
            "name": "+openmp",
            "spec": "@:6.1.1",
            "description": "openmp support started from 6.2"
        }
    ],
    "variants": [
        {
            "name": "openmp",
            "default": false,
            "description": "Enable openmp build"
        },
        {
            "name": "scalapack",
            "default": false,
            "description": "Enables build with SCALAPACK"
        },
        {
            "name": "cuda",
            "default": false,
            "description": "Enables running on Nvidia GPUs"
        },
        {
            "name": "vaspsol",
            "default": false,
            "description": "Enable VASPsol implicit solvation model\nhttps://github.com/henniggroup/VASPsol"
        }
    ],
    "homepage": "https://vasp.at",
    "maintainers": [],
    "patches": [],
    "resources": [
        {
            "version": "+vaspsol",
            "name": "vaspsol",
            "destination": "",
            "placement": null
        }
    ],
    "description": " The Vienna Ab initio Simulation Package (VASP) is a computer program\nfor atomic scale materials modelling, e.g. electronic structure\ncalculations and quantum-mechanical molecular dynamics, from first\nprinciples.\n",
    "dependencies": [
        {
            "name": "rsync",
            "description": "An open source utility that provides fast incremental file transfer."
        },
        {
            "name": "blas",
            "description": "BLIS is a portable software framework for instantiating high-performance\nBLAS-like dense linear algebra libraries. The framework was designed to\nisolate essential kernels of computation that, when optimized,\nimmediately enable optimized implementations of most of its commonly\nused and computationally intensive operations. BLIS is written in ISO\nC99 and available under a new/modified/3-clause BSD license. While BLIS\nexports a new BLAS-like API, it also includes a BLAS compatibility layer\nwhich gives application developers access to BLIS implementations via\ntraditional BLAS routine calls. An object-based API unique to BLIS is\nalso available."
        },
        {
            "name": "lapack",
            "description": "Automatically Tuned Linear Algebra Software, generic shared ATLAS is an\napproach for the automatic generation and optimization of numerical\nsoftware. Currently ATLAS supplies optimized versions for the complete\nset of linear algebra kernels known as the Basic Linear Algebra\nSubroutines (BLAS), and a subset of the linear algebra routines in the\nLAPACK library."
        },
        {
            "name": "fftw-api",
            "description": "FFTW (AMD Optimized version) is a comprehensive collection of fast C\nroutines for computing the Discrete Fourier Transform (DFT) and various\nspecial cases thereof. It is an open-source implementation of the Fast\nFourier transform algorithm. It can compute transforms of real and\ncomplex-values arrays of arbitrary size and dimension. AMD Optimized\nFFTW is the optimized FFTW implementation targeted for AMD CPUs. For\nsingle precision build, please use precision value as float. Example :\nspack install amdfftw precision=float"
        },
        {
            "name": "mpi",
            "description": "Cray/HPE packaging of MVAPICH2 for HPE Apollo systems"
        },
        {
            "name": "scalapack",
            "description": "Intel Math Kernel Library."
        },
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "qd",
            "description": "C++/Fortran-90 double-double and quad-double package. With modifications\nfor easier integration with NJet. see http://crd-\nlegacy.lbl.gov/~dhbailey/mpdist/ for authors page"
        }
    ],
    "dependent_to": []
}