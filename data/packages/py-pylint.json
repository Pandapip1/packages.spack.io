{
    "name": "py-pylint",
    "aliases": [],
    "versions": [
        {
            "name": "2.16.2",
            "sha256": "13b2c805a404a9bf57d002cd5f054ca4d40b0b87542bdaba5e05321ae8262c84"
        },
        {
            "name": "2.15.0",
            "sha256": "4f3f7e869646b0bd63b3dfb79f3c0f28fc3d2d923ea220d52620fd625aed92b0"
        },
        {
            "name": "2.14.4",
            "sha256": "47705453aa9dce520e123a7d51843d5f0032cbfa06870f89f00927aa1f735a4a"
        },
        {
            "name": "2.13.5",
            "sha256": "dab221658368c7a05242e673c275c488670144123f4bd262b2777249c1c0de9b"
        },
        {
            "name": "2.11.1",
            "sha256": "2c9843fff1a88ca0ad98a256806c82c5a8f86086e7ccbdb93297d86c3f90c436"
        },
        {
            "name": "2.8.2",
            "sha256": "586d8fa9b1891f4b725f587ef267abe2a1bad89d6b184520c7f07a253dd6e217"
        }
    ],
    "latest_version": "2.16.2",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://pypi.org/project/pylint/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "python code static checker\n",
    "dependencies": [
        {
            "name": "py-astroid",
            "description": "A common base representation of python source code for pylint and other\nprojects."
        },
        {
            "name": "py-colorama",
            "description": "Cross-platform colored terminal text."
        },
        {
            "name": "py-dill",
            "description": "Serialize all of python"
        },
        {
            "name": "py-isort",
            "description": "A Python utility / library to sort Python imports."
        },
        {
            "name": "py-mccabe",
            "description": "Ned's script to check McCabe complexity."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-platformdirs",
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\""
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-setuptools-scm",
            "description": "The blessed package to manage your versions by scm tags."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-toml",
            "description": "A Python library for parsing and creating TOML configuration files. For\nmore information on the TOML standard, see https://github.com/toml-\nlang/toml.git"
        },
        {
            "name": "py-tomli",
            "description": "Tomli is a Python library for parsing TOML. Tomli is fully compatible\nwith TOML v1.0.0."
        },
        {
            "name": "py-tomlkit",
            "description": "Style preserving TOML library"
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-psyclone",
            "description": "Code generation system developed to support domain-specific languages\n(DSLs) for finite element, finite volume and finite difference codes.\nNotably, it is used in the LFRic Project from the UK Met Office, and it\nalso supports the GOcean (2D, finite difference) DSL."
        },
        {
            "name": "py-pytest-pylint",
            "description": "Run pylint with pytest and have configurable rule types (i.e.\nConvention, Warn, and Error) fail the build. You can also specify a\npylintrc file."
        },
        {
            "name": "geopm",
            "description": "GEOPM is an extensible power management framework targeting HPC. The\nGEOPM package provides libgeopm, libgeopmpolicy and applications\ngeopmctl and geopmpolicy, as well as tools for postprocessing. GEOPM is\ndesigned to be extended for new control algorithms and new hardware\npower management features via its plugin infrastructure. Note: GEOPM\ninterfaces with hardware using Model Specific Registers (MSRs). For\npropper usage make sure MSRs are made available directly or via the msr-\nsafe kernel module by your administrator."
        }
    ]
}