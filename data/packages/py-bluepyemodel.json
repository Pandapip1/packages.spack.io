{
    "name": "py-bluepyemodel",
    "aliases": [],
    "versions": [
        {
            "name": "0.0.46",
            "sha256": "ad4c125e491f3337fcc341a4f389b8a616d883ce50fd77d9fb0ea6e13be5da61"
        }
    ],
    "latest_version": "0.0.46",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/BlueBrain/BluePyEModel",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Python library to optimize and evaluate electrical models.\n",
    "dependencies": [
        {
            "name": "neuron",
            "description": "NEURON is a simulation environment for single and networks of neurons.\nNEURON is a simulation environment for modeling individual and networks\nof neurons. NEURON models individual neurons via the use of sections\nthat are automatically subdivided into individual compartments, instead\nof requiring the user to manually create compartments."
        },
        {
            "name": "py-bluepyefe",
            "description": "Blue Brain Python E-feature extraction"
        },
        {
            "name": "py-bluepyopt",
            "description": "Bluebrain Python Optimisation Library"
        },
        {
            "name": "py-configparser",
            "description": "This library brings the updated configparser from Python 3.5 to Python\n2.6-3.5."
        },
        {
            "name": "py-currentscape",
            "description": "Module to easily plot the currents in electrical neuron models."
        },
        {
            "name": "py-efel",
            "description": "The Electrophys Feature Extract Library (eFEL) allows neuroscientists to\nautomatically extract features from time series data recorded from\nneurons (both in vitro and in silico). Examples are the action potential\nwidth and amplitude in voltage traces recorded during whole-cell patch\nclamp experiments. The user of the library provides a set of traces and\nselects the features to be calculated. The library will then extract the\nrequested features and return the values to the user."
        },
        {
            "name": "py-fasteners",
            "description": "A python package that provides useful locks."
        },
        {
            "name": "py-gitpython",
            "description": "GitPython is a python library used to interact with Git repositories."
        },
        {
            "name": "py-ipyparallel",
            "description": "IPython's architecture for parallel and distributed computing."
        },
        {
            "name": "py-jinja2",
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment."
        },
        {
            "name": "py-morph-tool",
            "description": "Python morphology manipulation toolkit"
        },
        {
            "name": "py-neurom",
            "description": "Python library neuron morphology analysis"
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-pandas",
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-pyyaml",
            "description": "PyYAML is a YAML parser and emitter for Python."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-setuptools-scm",
            "description": "The blessed package to manage your versions by scm tags."
        },
        {
            "name": "py-tqdm",
            "description": "A Fast, Extensible Progress Meter"
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": []
}