{
    "name": "berkeleygw",
    "aliases": [],
    "versions": [
        {
            "name": "3.0.1",
            "url": "https://berkeley.box.com/shared/static/m1dgnhiemo47lhxczrn6si71bwxoxor8.gz",
            "expand": false,
            "checksum": "7d8c2cc1ee679afb48efbdd676689d4d537226b50e13a049dbcb052aaaf3654f"
        },
        {
            "name": "3.0",
            "url": "https://berkeley.box.com/shared/static/lp6hj4kxr459l5a6t05qfuzl2ucyo03q.gz",
            "expand": false,
            "checksum": "ab411acead5e979fd42b8d298dbb0a12ce152e7be9eee0bb87e9e5a06a638e2a"
        },
        {
            "name": "2.1",
            "url": "https://berkeley.box.com/shared/static/ze3azi5vlyw7hpwvl9i5f82kaiid6g0x.gz",
            "expand": false,
            "checksum": "31f3b643dd937350c3866338321d675d4a1b1f54c730b43ad74ae67e75a9e6f2"
        }
    ],
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "name": "+scalapack",
            "spec": "~mpi",
            "description": "scalapack is a parallel library and needs MPI support"
        },
        {
            "name": "+elpa",
            "spec": "~mpi",
            "description": "elpa is a parallel library and needs MPI support"
        }
    ],
    "variants": [
        {
            "name": "mpi",
            "default": true,
            "description": "Builds with MPI support"
        },
        {
            "name": "elpa",
            "default": true,
            "description": "Build with ELPA support"
        },
        {
            "name": "python",
            "default": false,
            "description": "Build with Python support"
        },
        {
            "name": "openmp",
            "default": true,
            "description": "Build with OpenMP support"
        },
        {
            "name": "scalapack",
            "default": true,
            "description": "Build with ScaLAPACK support"
        },
        {
            "name": "hdf5",
            "default": true,
            "description": "Builds with HDF5 support"
        },
        {
            "name": "debug",
            "default": false,
            "description": "Builds with DEBUG flag"
        },
        {
            "name": "verbose",
            "default": false,
            "description": "Builds with VERBOSE flag"
        }
    ],
    "homepage": "https://berkeleygw.org",
    "maintainers": [
        "migueldiascosta"
    ],
    "patches": [],
    "resources": [],
    "description": "BerkeleyGW is a many-body perturbation theory code for excited states,\nusing the GW method and the GW plus Bethe-Salpeter equation (GW-BSE)\nmethod to solve respectively for quasiparticle excitations and optical\nproperties of materials.\n",
    "dependencies": [
        {
            "name": "blas",
            "description": "XBLAS is a reference implementation for extra precision BLAS. XBLAS is a\nreference implementation for the dense and banded BLAS routines, along\nwith extended and mixed precision version. Extended precision is only\nused internally; input and output arguments remain the same as in the\nexisting BLAS. Extra precisions is implemented as double-double (i.e.,\n128-bit total, 106-bit significand). Mixed precision permits some\ninput/output arguments of different types (mixing real and complex) or\nprecisions (mixing single and double). This implementation is proof of\nconcept, and no attempt was made to optimize performance; performance\nshould be as good as straightforward but careful code written by hand."
        },
        {
            "name": "lapack",
            "description": "libflame is a portable library for dense matrix computations, providing\nmuch of the functionality present in LAPACK, developed by current and\nformer members of the Science of High-Performance Computing (SHPC) group\nin the Institute for Computational Engineering and Sciences at The\nUniversity of Texas at Austin. libflame includes a compatibility layer,\nlapack2flame, which includes a complete LAPACK implementation."
        },
        {
            "name": "scalapack",
            "description": "Fujitsu SSL2 (Scientific Subroutine Library II) is Math library for\nFujitsu compiler. Fujitsu SSL2 implementation only for Fujitsu compiler.\nFujitsu SSL2 provides the function of blas, lapack and scalapack."
        },
        {
            "name": "mpi",
            "description": "HPE MPI is HPE's implementation of the Message Passing Interface (MPI)\nstandard. Note: HPE MPI is proprietry software. Spack will search your\ncurrent directory for the download file. Alternatively, add this file to\na mirror so that Spack can find it. For instructions on how to set up a\nmirror, see https://spack.readthedocs.io/en/latest/mirrors.html"
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "elpa",
            "description": "Eigenvalue solvers for Petaflop-Applications (ELPA)"
        },
        {
            "name": "fftw-api",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). This package is a wrapper\nfor Cray's version of FFTW. To install this package, list it as an\nexternal package in packages.yaml, and make sure to load the correct\ncray-fftw module. In some cases you need to load cray-mpich before cray-\nfftw."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-h5py",
            "description": "The h5py package provides both a high- and low-level interface to the\nHDF5 library from Python."
        },
        {
            "name": "perl",
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development."
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "amdfftw",
            "description": "FFTW (AMD Optimized version) is a comprehensive collection of fast C\nroutines for computing the Discrete Fourier Transform (DFT) and various\nspecial cases thereof. It is an open-source implementation of the Fast\nFourier transform algorithm. It can compute transforms of real and\ncomplex-values arrays of arbitrary size and dimension. AMD Optimized\nFFTW is the optimized FFTW implementation targeted for AMD CPUs. For\nsingle precision build, please use precision value as float. Example :\nspack install amdfftw precision=float"
        },
        {
            "name": "openblas",
            "description": "OpenBLAS: An optimized BLAS library"
        },
        {
            "name": "amdblis",
            "description": "AMD Optimized BLIS. BLIS is a portable software framework for\ninstantiating high-performance BLAS-like dense linear algebra libraries.\nThe framework was designed to isolate essential kernels of computation\nthat, when optimized, immediately enable optimized implementations of\nmost of its commonly used and computationally intensive operations."
        }
    ],
    "dependent_to": []
}