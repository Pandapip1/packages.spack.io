{
    "name": "py-numpydoc",
    "aliases": [],
    "versions": [
        {
            "name": "1.5.0",
            "sha256": "b0db7b75a32367a0e25c23b397842c65e344a1206524d16c8069f0a1c91b5f4c"
        },
        {
            "name": "1.1.0",
            "sha256": "c36fd6cb7ffdc9b4e165a43f67bf6271a7b024d0bb6b00ac468c9e2bfc76448e"
        },
        {
            "name": "0.6.0",
            "sha256": "1ec573e91f6d868a9940d90a6599f3e834a2d6c064030fbe078d922ee21dcfa1"
        }
    ],
    "latest_version": "1.5.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/numpy/numpydoc",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "numpydoc - Numpy's Sphinx extensions\n",
    "dependencies": [
        {
            "name": "py-jinja2",
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-sphinx",
            "description": "Sphinx Documentation Generator."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-scikit-image",
            "description": "Image processing algorithms for SciPy, including IO, morphology,\nfiltering, warping, color manipulation, object detection, etc."
        },
        {
            "name": "py-dask-ml",
            "description": "Scalable Machine Learning with Dask."
        },
        {
            "name": "py-deeptools",
            "description": "deepTools addresses the challenge of handling the large amounts of data\nthat are now routinely generated from DNA sequencing centers."
        },
        {
            "name": "py-elephant",
            "description": "Elephant is a package for analysis of electrophysiology data in Python"
        }
    ]
}