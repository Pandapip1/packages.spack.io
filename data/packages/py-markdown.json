{
    "name": "py-markdown",
    "aliases": [],
    "versions": [
        {
            "name": "3.4.1",
            "sha256": "3b809086bb6efad416156e00a0da66fe47618a5d6918dd688f53f40c8e4cfeff"
        },
        {
            "name": "3.3.4",
            "sha256": "31b5b491868dcc87d6c24b7e3d19a0d730d59d3e46f4eea6430a321bed387a49"
        },
        {
            "name": "3.1.1",
            "sha256": "2e50876bcdd74517e7b71f3e7a76102050edec255b3983403f1a63e7c8a41e7a"
        }
    ],
    "latest_version": "3.4.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://python-markdown.github.io/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "This is a Python implementation of John Gruber's Markdown. It is almost\ncompletely compliant with the reference implementation, though there are\na few very minor differences. See John's Syntax Documentation for the\nsyntax rules.\n",
    "dependencies": [
        {
            "name": "py-importlib-metadata",
            "description": "Read metadata from Python packages."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": [
        {
            "name": "py-model-index",
            "description": "Create a source of truth for ML model results and browse it on Papers\nwith Code"
        },
        {
            "name": "py-pymdown-extensions",
            "description": "Extensions for Python Markdown."
        },
        {
            "name": "py-cheetah3",
            "description": "Cheetah3 is a template engine and code generation tool."
        },
        {
            "name": "py-md-environ",
            "description": "This is an extension to Python-Markdown which allows environment\nvariables to be used in the text."
        },
        {
            "name": "py-mlflow",
            "description": "MLflow: A Platform for ML Development and Productionization."
        },
        {
            "name": "py-mkdocs-autorefs",
            "description": "Automatically link across pages in MkDocs."
        },
        {
            "name": "py-alpaca-farm",
            "description": "AlpacaFarm is a simulator that enables research and development on\nlearning from feedback at a fraction of the usual cost, promoting\naccessible research on instruction following and alignment."
        },
        {
            "name": "py-panel",
            "description": "A high level app and dashboarding solution for Python."
        },
        {
            "name": "py-tensorboard",
            "description": "TensorBoard is a suite of web applications for inspecting and\nunderstanding your TensorFlow runs and graphs."
        },
        {
            "name": "py-multiqc",
            "description": "MultiQC is a tool to aggregate bioinformatics results across many\nsamples into a single report. It is written in Python and contains\nmodules for a large number of common bioinformatics tools."
        },
        {
            "name": "py-mkdocs-material",
            "description": "Write your documentation in Markdown and create a professional static\nsite for your Open Source or commercial project in minutes."
        },
        {
            "name": "py-markdown-include",
            "description": "This is an extension to Python-Markdown which provides an \"include\"\nfunction, similar to that found in LaTeX (and also the C pre-processor\nand Fortran)."
        },
        {
            "name": "py-mkdocstrings",
            "description": "Automatic documentation from sources, for MkDocs."
        },
        {
            "name": "py-setuptools-cpp",
            "description": "Simplified packaging for pybind11-based C++ extensions"
        },
        {
            "name": "py-mkdocs",
            "description": "MkDocs is a fast, simple and downright gorgeous static site generator\nthat's geared towards building project documentation."
        },
        {
            "name": "py-pdoc3",
            "description": "Auto-generate API documentation for Python projects."
        },
        {
            "name": "freecad",
            "description": "FreeCAD is an open-source parametric 3D modeler made primarily to design\nreal-life objects of any size. Parametric modeling allows you to easily\nmodify your design by going back into your model history to change its\nparameters."
        },
        {
            "name": "py-python-markdown-math",
            "description": "Math extension for Python-Markdown"
        },
        {
            "name": "nf-core-tools",
            "description": "A python package with helper tools for the nf-core community."
        },
        {
            "name": "py-ford",
            "description": "FORD, standing for FORtran Documenter, is an automatic documentation\ngenerator for modern Fortran programs."
        }
    ]
}