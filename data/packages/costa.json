{
    "name": "costa",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master",
            "submodules": true
        },
        {
            "name": "2.0",
            "sha256": "de250197f31f7d23226c6956a687c3ff46fb0ff6c621a932428236c3f7925fe4"
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "scalapack",
            "default": false,
            "description": "Build with ScaLAPACK API"
        },
        {
            "name": "shared",
            "default": false,
            "description": "Build shared libraries"
        }
    ],
    "homepage": "https://github.com/eth-cscs/COSTA",
    "maintainers": [
        "haampie",
        "kabicm"
    ],
    "patches": [],
    "resources": [],
    "description": " Distributed Communication-Optimal Matrix Transpose and Reshuffle\nLibrary Based on the paper: https://arxiv.org/abs/2106.06601\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "scalapack",
            "description": "Intel Math Kernel Library."
        }
    ],
    "dependent_to": [
        {
            "name": "sirius",
            "description": "Domain specific library for electronic structure calculations"
        }
    ]
}