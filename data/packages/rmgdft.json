{
    "name": "rmgdft",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "4.3.1",
            "tag": "v4.3.1"
        },
        {
            "name": "4.3.0",
            "tag": "v4.3.0"
        },
        {
            "name": "4.2.2",
            "tag": "v4.2.2"
        },
        {
            "name": "4.2.1",
            "tag": "v4.2.1"
        }
    ],
    "latest_version": "4.3.1",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "%gcc@:4",
            "spec": "@3.6.0:",
            "description": "RMGDFT 4.0.0 or later requires a compiler with support for C++14"
        },
        {
            "name": "%intel@:17",
            "spec": "@3.6.0:",
            "description": "RMGDFT 4.0.0 or later requires a compiler with support for C++14"
        },
        {
            "name": "%pgi@:17",
            "spec": "@3.6.0:",
            "description": "RMGDFT 4.0.0 or later requires a compiler with support for C++14"
        },
        {
            "name": "%llvm@:3.4",
            "spec": "@3.6.0:",
            "description": "RMGDFT 4.0.0 or later requires a compiler with support for C++14"
        },
        {
            "name": "^atlas",
            "spec": "",
            "description": "The atlas threading model is incompatible with RMG"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "The build type to build"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "qmcpack",
            "default": true,
            "description": "Build with qmcpack interface."
        },
        {
            "name": "local_orbitals",
            "default": true,
            "description": "Build O(N) variant."
        },
        {
            "name": "internal_pp",
            "default": true,
            "description": "Include built-in pseudopotentials. Normally enabled but some compilers are slow when this is on so provide a disable option."
        }
    ],
    "homepage": "http://www.rmgdft.org/",
    "maintainers": [
        "elbriggs"
    ],
    "patches": [],
    "resources": [],
    "description": "RMGDFT is a high performance real-space density functional code designed\nfor large scale electronic structure calculations.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        },
        {
            "name": "fftw-api",
            "description": "FFTW (Fujitsu Optimized version) is a comprehensive collection of fast C\nroutines for computing the Discrete Fourier Transform (DFT) and various\nspecial cases thereof. It is an open-source implementation of the Fast\nFourier transform algorithm. It can compute transforms of real and\ncomplex-values arrays of arbitrary size and dimension. Fujitsu Optimized\nFFTW is the optimized FFTW implementation targeted for A64FX CPUs. For\nsingle precision build, please use precision value as float. Example :\nspack install fujitsufftw precision=float"
        },
        {
            "name": "mpi",
            "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "blas",
            "description": "Intel oneAPI Math Kernel Library (Intel oneMKL; formerly Intel Math\nKernel Library or Intel MKL), is a library of optimized math routines\nfor science, engineering, and financial applications. Core math\nfunctions include BLAS, LAPACK, ScaLAPACK, sparse solvers, fast Fourier\ntransforms, and vector math. LICENSE INFORMATION: By downloading and\nusing this software, you agree to the terms and conditions of the\nsoftware license agreements at https://intel.ly/393CijO."
        }
    ],
    "dependent_to": []
}