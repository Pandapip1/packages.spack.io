{
    "name": "rmgdft",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "5.2.0",
            "tag": "v5.2.0"
        },
        {
            "name": "5.0.5",
            "tag": "v5.0.5"
        },
        {
            "name": "5.0.4",
            "tag": "v5.0.4"
        },
        {
            "name": "5.0.1",
            "tag": "v5.0.1"
        },
        {
            "name": "4.3.1",
            "tag": "v4.3.1"
        },
        {
            "name": "4.3.0",
            "tag": "v4.3.0"
        },
        {
            "name": "4.2.2",
            "tag": "v4.2.2"
        },
        {
            "name": "4.2.1",
            "tag": "v4.2.1"
        }
    ],
    "latest_version": "5.2.0",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "%gcc@:4",
            "spec": "@3.6.0:",
            "description": "RMGDFT 4.0.0 or later requires a compiler with support for C++14"
        },
        {
            "name": "%intel@:17",
            "spec": "@3.6.0:",
            "description": "RMGDFT 4.0.0 or later requires a compiler with support for C++14"
        },
        {
            "name": "%pgi@:17",
            "spec": "@3.6.0:",
            "description": "RMGDFT 4.0.0 or later requires a compiler with support for C++14"
        },
        {
            "name": "%llvm@:3.4",
            "spec": "@3.6.0:",
            "description": "RMGDFT 4.0.0 or later requires a compiler with support for C++14"
        },
        {
            "name": "%gcc@:7",
            "spec": "@5.0.0:",
            "description": "RMGDFT 5.0.0 or later requires a compiler with support for C++17"
        },
        {
            "name": "^atlas",
            "spec": "",
            "description": "The atlas threading model is incompatible with RMG"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "The build type to build"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "qmcpack",
            "default": true,
            "description": "Build with qmcpack interface."
        },
        {
            "name": "local_orbitals",
            "default": true,
            "description": "Build O(N) variant."
        },
        {
            "name": "internal_pp",
            "default": true,
            "description": "Include built-in pseudopotentials. Normally enabled but some compilers are slow when this is on so provide a disable option."
        }
    ],
    "homepage": "http://www.rmgdft.org/",
    "maintainers": [
        "elbriggs"
    ],
    "patches": [],
    "resources": [],
    "description": "RMGDFT is a high performance real-space density functional code designed\nfor large scale electronic structure calculations.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        },
        {
            "name": "fftw-api",
            "description": "Intel oneAPI Math Kernel Library (Intel oneMKL; formerly Intel Math\nKernel Library or Intel MKL), is a library of optimized math routines\nfor science, engineering, and financial applications. Core math\nfunctions include BLAS, LAPACK, ScaLAPACK, sparse solvers, fast Fourier\ntransforms, and vector math. LICENSE INFORMATION: By downloading and\nusing this software, you agree to the terms and conditions of the\nsoftware license agreements at https://intel.ly/393CijO."
        },
        {
            "name": "mpi",
            "description": "An open source Message Passing Interface implementation. The Open MPI\nProject is an open source Message Passing Interface implementation that\nis developed and maintained by a consortium of academic, research, and\nindustry partners. Open MPI is therefore able to combine the expertise,\ntechnologies, and resources from all across the High Performance\nComputing community in order to build the best MPI library available.\nOpen MPI offers advantages for system and software vendors, application\ndevelopers and computer science researchers."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "blas",
            "description": "AMD Optimized BLIS. BLIS is a portable software framework for\ninstantiating high-performance BLAS-like dense linear algebra libraries.\nThe framework was designed to isolate essential kernels of computation\nthat, when optimized, immediately enable optimized implementations of\nmost of its commonly used and computationally intensive operations.\nLICENSING INFORMATION: By downloading, installing and using this\nsoftware, you agree to the terms and conditions of the AMD AOCL-BLIS\nlicense agreement. You may obtain a copy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/blis/blis-4-0-eula.html\nhttps://www.amd.com/en/developer/aocl/blis/blis-eula.html"
        }
    ],
    "dependent_to": []
}