{
    "name": "med",
    "aliases": [],
    "versions": [
        {
            "name": "5.0.0",
            "sha256": "267e76d0c67ec51c10e3199484ec1508baa8d5ed845c628adf660529dce7a3d4",
            "url": "https://files.salome-platform.org/Salome/medfile/med-5.0.0.tar.bz2"
        },
        {
            "name": "4.1.1",
            "sha256": "a082b705d1aafe95d3a231d12c57f0b71df554c253e190acca8d26fc775fb1e6",
            "url": "https://files.salome-platform.org/Salome/medfile/med-4.1.1.tar.gz"
        },
        {
            "name": "4.1.0",
            "sha256": "847db5d6fbc9ce6924cb4aea86362812c9a5ef6b9684377e4dd6879627651fce"
        },
        {
            "name": "4.0.0",
            "sha256": "a474e90b5882ce69c5e9f66f6359c53b8b73eb448c5f631fa96e8cd2c14df004"
        },
        {
            "name": "3.2.0",
            "sha256": "d52e9a1bdd10f31aa154c34a5799b48d4266dc6b4a5ee05a9ceda525f2c6c138"
        }
    ],
    "latest_version": "5.0.0",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "~shared",
            "spec": "+python",
            "description": "med: Python bindings require shared libraries"
        },
        {
            "name": "@4.1.0",
            "spec": "~shared",
            "description": "med: Link error when static"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "api23",
            "default": true,
            "description": "Enable API2.3"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Enable MPI"
        },
        {
            "name": "shared",
            "default": false,
            "description": "Builds a shared version of the library"
        },
        {
            "name": "fortran",
            "default": false,
            "description": "Enable Fortran support"
        },
        {
            "name": "doc",
            "default": false,
            "description": "Install documentation"
        },
        {
            "name": "python",
            "default": false,
            "description": "Build Python bindings"
        }
    ],
    "homepage": "https://docs.salome-platform.org/latest/dev/MEDCoupling/med-file.html",
    "maintainers": [
        "likask"
    ],
    "patches": [
        {
            "owner": "builtin.med",
            "sha256": "c931478570a452294d3ebad08501b5758f36f4a5be401f63340f97498b6266fa",
            "level": 1,
            "working_dir": ".",
            "reverse": false,
            "relative_path": "add_space.patch",
            "version": "@3.2.0"
        },
        {
            "owner": "builtin.med",
            "sha256": "ba351973779de38d658c62db0f97180449b40540c7e5be28dccf6098966cbf2a",
            "level": 1,
            "working_dir": ".",
            "reverse": false,
            "relative_path": "med-4.1.0-hdf5-target.patch",
            "version": "@4.0.0:4.1.0"
        }
    ],
    "resources": [],
    "description": "The MED file format is a specialization of the HDF5 standard.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "doxygen",
            "description": "Doxygen is the de facto standard tool for generating documentation from\nannotated C++ sources, but it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba,\nMicrosoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some\nextent D.."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "mpi",
            "description": "This is an earlier version of Intel parallel software development tools\nand has now been replaced by the Intel oneAPI Toolkits. LICENSE\nINFORMATION: By downloading and using this software, you agree to the\nterms and conditions of the software license agreements at\nhttps://intel.ly/393CijO."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "swig",
            "description": "SWIG is an interface compiler that connects programs written in C and\nC++ with scripting languages such as Perl, Python, Ruby, and Tcl. It\nworks by taking the declarations found in C/C++ header files and using\nthem to generate the wrapper code that scripting languages need to\naccess the underlying C/C++ code. In addition, SWIG provides a variety\nof customization features that let you tailor the wrapping process to\nsuit your application."
        }
    ],
    "dependent_to": [
        {
            "name": "gmsh",
            "description": "Gmsh is a free 3D finite element grid generator with a built-in CAD\nengine and post-processor. Its design goal is to provide a fast, light\nand user-friendly meshing tool with parametric input and advanced\nvisualization capabilities. Gmsh is built around four modules: geometry,\nmesh, solver and post-processing. The specification of any input to\nthese modules is done either interactively using the graphical user\ninterface or in ASCII text files using Gmsh's own scripting language."
        }
    ]
}