{
    "name": "py-pdbfixer",
    "aliases": [],
    "versions": [
        {
            "name": "1.8.1",
            "sha256": "d50551abfe9dbaefc066f4d9d400cdebe57f1fefd9de9d01e12beb87efd99595"
        },
        {
            "name": "1.7",
            "sha256": "a0bef3c52a7bbe69a6aea5333f51f3e7d158339be5829aed19b0344bd66d4eea"
        }
    ],
    "latest_version": "1.8.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/openmm/pdbfixer",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "PDBFixer is an easy to use application for fixing problems in Protein\nData Bank files in preparation for simulating them.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "openmm",
            "description": "A high performance toolkit for molecular simulation. Use it as a\nlibrary, or as an application. We include extensive language bindings\nfor Python, C, C++, and even Fortran. The code is open source and\nactively maintained on Github, licensed under MIT and LGPL. Part of the\nOmnia suite of tools for predictive biomolecular simulation."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        }
    ],
    "dependent_to": [
        {
            "name": "py-alphafold",
            "description": "AlphaFold is an AI system developed by DeepMind that predicts a\nprotein's 3D structure from its amino acid sequence. It regularly\nachieves accuracy competitive with experiment."
        },
        {
            "name": "py-fastfold",
            "description": "Optimizing Protein Structure Prediction Model Training and Inference on\nGPU Clusters."
        }
    ]
}