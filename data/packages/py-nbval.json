{
    "name": "py-nbval",
    "aliases": [],
    "versions": [
        {
            "name": "0.9.6",
            "sha256": "cfefcd2ef66ee2d337d0b252c6bcec4023384eb32e8b9e5fcc3ac80ab8cd7d40"
        }
    ],
    "latest_version": "0.9.6",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/computationalmodelling/nbval",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Py.test plugin for validating Jupyter notebooks. The plugin adds\nfunctionality to py.test to recognise and collect Jupyter notebooks. The\nintended purpose of the tests is to determine whether execution of the\nstored inputs match the stored outputs of the .ipynb file. Whilst also\nensuring that the notebooks are running without errors.\n",
    "dependencies": [
        {
            "name": "py-coverage",
            "description": "Testing coverage checker for python"
        },
        {
            "name": "py-ipykernel",
            "description": "IPython Kernel for Jupyter"
        },
        {
            "name": "py-jupyter-client",
            "description": "Jupyter protocol client APIs"
        },
        {
            "name": "py-nbformat",
            "description": "The Jupyter Notebook format"
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": [
        {
            "name": "py-devito",
            "description": "Devito is a Python package to implement optimized stencil computation.\n(e.g., finite differences, image processing, machine learning) from\nhigh-level symbolic problem definitions. Devito builds on SymPy and\nemploys automated code generation and just-in-time compilation to\nexecute optimized computational kernels on several computer platforms,\nincluding CPUs, GPUs, and clusters thereof."
        }
    ]
}