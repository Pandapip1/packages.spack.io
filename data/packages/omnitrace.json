{
    "name": "omnitrace",
    "aliases": [],
    "versions": [
        {
            "name": "main",
            "branch": "main",
            "submodules": true
        },
        {
            "name": "1.4.0",
            "commit": "23fb3946c7f4c0702b1b168e1d78b8b62597e3f1",
            "submodules": true
        },
        {
            "name": "1.3.1",
            "commit": "641225f88304909fd2ca5407aec062d0fdf0ed8b",
            "submodules": true
        },
        {
            "name": "1.3.0",
            "commit": "4dd144a32c8b83c44e132ef53f2b44fe4b4d5569",
            "submodules": true
        },
        {
            "name": "1.2.0",
            "commit": "f82845388aab108ed1d1fc404f433a0def391bb3",
            "submodules": true
        }
    ],
    "latest_version": "1.4.0",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "rocm",
            "default": true,
            "description": "Enable ROCm API, kernel tracing, and GPU HW counters support"
        },
        {
            "name": "strip",
            "default": false,
            "description": "Faster binary instrumentation, worse debugging"
        },
        {
            "name": "python",
            "default": false,
            "description": "Enable support for Python function profiling and API"
        },
        {
            "name": "papi",
            "default": true,
            "description": "Enable HW counters support via PAPI"
        },
        {
            "name": "ompt",
            "default": true,
            "description": "Enable OpenMP Tools support"
        },
        {
            "name": "tau",
            "default": false,
            "description": "Enable support for using TAU markers in omnitrace instrumentation"
        },
        {
            "name": "caliper",
            "default": false,
            "description": "Enable support for using Caliper markers in omnitrace instrumentation"
        },
        {
            "name": "perfetto_tools",
            "default": false,
            "description": "Install perfetto tools (e.g. traced, perfetto)"
        },
        {
            "name": "mpi",
            "default": false,
            "description": "Enable intercepting MPI functions and aggregating output during finalization (requires target application to use same MPI installation)"
        },
        {
            "name": "mpi_headers",
            "default": true,
            "description": "Enable intercepting MPI functions but w/o support for aggregating output (target application can use any MPI installation)"
        }
    ],
    "homepage": "https://amdresearch.github.io/omnitrace",
    "maintainers": [
        "jrmadsen"
    ],
    "patches": [],
    "resources": [],
    "description": "Application Profiling, Tracing, and Analysis\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "dyninst",
            "description": "API for dynamic binary instrumentation. Modify programs while they are\nexecuting without recompiling, re-linking, or re-executing."
        },
        {
            "name": "libunwind",
            "description": "A portable and efficient C programming interface (API) to determine the\ncall-chain of a program."
        },
        {
            "name": "hip",
            "description": "HIP is a C++ Runtime API and Kernel Language that allows developers to\ncreate portable applications for AMD and NVIDIA GPUs from single source\ncode."
        },
        {
            "name": "rocm-smi-lib",
            "description": "It is a C library for Linux that provides a user space interface for\napplications to monitor and control GPU applications."
        },
        {
            "name": "roctracer-dev",
            "description": "ROC-tracer library: Runtimes Generic Callback/Activity APIs. The goal of\nthe implementation is to provide a generic independent from specific\nruntime profiler to trace API and asyncronous activity."
        },
        {
            "name": "rocprofiler-dev",
            "description": "ROCPROFILER library for AMD HSA runtime API extension support"
        },
        {
            "name": "papi",
            "description": "PAPI provides the tool designer and application engineer with a\nconsistent interface and methodology for use of the performance counter\nhardware found in most major microprocessors. PAPI enables software\nengineers to see, in near real time, the relation between software\nperformance and processor events. In addition Component PAPI provides\naccess to a collection of components that expose performance measurement\nopportunities across the hardware and software stack."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-X is the advanced version of the MVAPICH2 MPI library with\nenhanced features (UMR, ODP, DC, Core-Direct, SHARP, XPMEM), OSU INAM\n(InifniBand Network Monitoring and Analysis),PGAS (OpenSHMEM, UPC,\nUPC++, and CAF), and MPI+PGAS programming models with unified\ncommunication runtime. MVAPICH2-X is not installable from source and is\nonly available through a binary mirror. If you do not find the binary\nyou're looking for, send us an email at mvapich@cse.ohio-state.edu. The\nbinary mirror url is: http://mvapich.cse.ohio-\nstate.edu/download/mvapich/spack-mirror/mvapich2x/"
        },
        {
            "name": "tau",
            "description": "A portable profiling and tracing toolkit for performance analysis of\nparallel programs written in Fortran, C, C++, UPC, Java, Python."
        },
        {
            "name": "caliper",
            "description": "Caliper is a program instrumentation and performance measurement\nframework. It is designed as a performance analysis toolbox in a\nlibrary, allowing one to bake performance analysis capabilities directly\ninto applications and activate them at runtime."
        }
    ],
    "dependent_to": []
}