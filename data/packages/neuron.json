{
    "name": "neuron",
    "aliases": [],
    "versions": [
        {
            "name": "develop",
            "branch": "master",
            "submodules": "True"
        },
        {
            "name": "8.0.0",
            "submodules": "True",
            "commit": "429d11ef34b1d860b3ddbfffc9f7960acb399b0c",
            "tag": "8.0.0"
        },
        {
            "name": "7.8.2",
            "submodules": "True",
            "commit": "09b151ecb2b3984335c265932dc6ba3e4fcb318e",
            "tag": "7.8.2"
        },
        {
            "name": "7.8.1",
            "submodules": "True",
            "commit": "47cd8c85aa3fde5dbb7319facd6f475438235d7d",
            "tag": "7.8.1"
        }
    ],
    "latest_version": "8.0.0",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+rx3d",
            "spec": "~python",
            "description": null
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "coreneuron",
            "default": false,
            "description": "Enable CoreNEURON as submodule"
        },
        {
            "name": "cross-compile",
            "default": false,
            "description": "Build for cross-compile environment"
        },
        {
            "name": "interviews",
            "default": false,
            "description": "Enable GUI with INTERVIEWS"
        },
        {
            "name": "legacy-unit",
            "default": false,
            "description": "Enable legacy units"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Enable MPI parallelism"
        },
        {
            "name": "python",
            "default": true,
            "description": "Enable python"
        },
        {
            "name": "rx3d",
            "default": false,
            "description": "Enable cython translated 3-d rxd"
        },
        {
            "name": "tests",
            "default": false,
            "description": "Enable unit tests"
        },
        {
            "name": "caliper",
            "default": false,
            "description": "Add LLNL/Caliper support"
        }
    ],
    "homepage": "https://www.neuron.yale.edu/",
    "maintainers": [
        "alexsavulescu",
        "iomaganaris",
        "nrnhines",
        "pramodk"
    ],
    "patches": [
        {
            "owner": "builtin.neuron",
            "sha256": "abe94ea2845bc006b0fe2112e5bfe588f9b5b6fef95ec1f29528f42a73d5144d",
            "level": 1,
            "working_dir": ".",
            "relative_path": "patch-v782-git-cmake-avx512.patch",
            "version": "@7.8.2"
        }
    ],
    "resources": [],
    "description": "NEURON is a simulation environment for single and networks of neurons.\nNEURON is a simulation environment for modeling individual and networks\nof neurons. NEURON models individual neurons via the use of sections\nthat are automatically subdivided into individual compartments, instead\nof requiring the user to manually create compartments.\n",
    "dependencies": [
        {
            "name": "bison",
            "description": "Bison is a general-purpose parser generator that converts an annotated\ncontext-free grammar into a deterministic LR or generalized LR (GLR)\nparser employing LALR(1) parser tables."
        },
        {
            "name": "caliper",
            "description": "Caliper is a program instrumentation and performance measurement\nframework. It is designed as a performance analysis toolbox in a\nlibrary, allowing one to bake performance analysis capabilities directly\ninto applications and activate them at runtime."
        },
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "flex",
            "description": "Flex is a tool for generating scanners."
        },
        {
            "name": "gettext",
            "description": "GNU internationalization (i18n) and localization (l10n) library."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "mpi",
            "description": "Cray's MPICH is a high performance and widely portable implementation of\nthe Message Passing Interface (MPI) standard."
        },
        {
            "name": "ncurses",
            "description": "The ncurses (new curses) library is a free software emulation of curses\nin System V Release 4.0, and more. It uses terminfo format, supports\npads and color and multiple highlights and forms characters and\nfunction-key mapping, and has all the other SYSV-curses enhancements\nover BSD curses."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-mpi4py",
            "description": "This package provides Python bindings for the Message Passing Interface\n(MPI) standard. It is implemented on top of the MPI-1/MPI-2\nspecification and exposes an API which grounds on the standard MPI-2 C++\nbindings."
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-pytest",
            "description": "pytest: simple powerful testing with Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "readline",
            "description": "The GNU Readline library provides a set of functions for use by\napplications that allow users to edit command lines as they are typed\nin. Both Emacs and vi editing modes are available. The Readline library\nincludes additional functions to maintain a list of previously-entered\ncommand lines, to recall and perhaps reedit those lines, and perform\ncsh-like history expansion on previous commands."
        }
    ],
    "dependent_to": [
        {
            "name": "py-bluepyopt",
            "description": "Bluebrain Python Optimisation Library"
        },
        {
            "name": "py-morph-tool",
            "description": "Python morphology manipulation toolkit"
        },
        {
            "name": "py-bluepyemodel",
            "description": "Python library to optimize and evaluate electrical models."
        }
    ]
}