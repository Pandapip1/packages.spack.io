{
    "name": "cray-fftw",
    "aliases": [
        {
            "name": "fftw-api@3",
            "alias_for": "{cray-fftw}"
        }
    ],
    "versions": [
        {
            "name": "3.3.8.12"
        },
        {
            "name": "3.3.8.8"
        },
        {
            "name": "3.3.8.7"
        }
    ],
    "latest_version": "3.3.8.12",
    "build_system": "Package",
    "conflicts": [],
    "variants": [
        {
            "name": "precision",
            "default": "float,double",
            "description": "Build the selected floating-point precision libraries"
        },
        {
            "name": "openmp",
            "default": false,
            "description": "Enable OpenMP support."
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Activate MPI support"
        }
    ],
    "homepage": "https://support.hpe.com/",
    "maintainers": [
        "haampie",
        "lukebroskop"
    ],
    "patches": [],
    "resources": [],
    "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). This package is a wrapper\nfor Cray's version of FFTW. To install this package, list it as an\nexternal package in packages.yaml, and make sure to load the correct\ncray-fftw module. In some cases you need to load cray-mpich before cray-\nfftw.\n",
    "dependencies": [
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        }
    ],
    "dependent_to": [
        {
            "name": "cp2k",
            "description": "CP2K is a quantum chemistry and solid state physics software package\nthat can perform atomistic simulations of solid state, liquid,\nmolecular, periodic, material, crystal, and biological systems"
        }
    ]
}