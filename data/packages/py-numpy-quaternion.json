{
    "name": "py-numpy-quaternion",
    "aliases": [],
    "versions": [
        {
            "name": "2021.11.4.15.26.3",
            "sha256": "b0dc670b2adc8ff2fb8d6105a48769873f68d6ccbe20af6a19e899b1e8d48aaf"
        }
    ],
    "latest_version": "2021.11.4.15.26.3",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "scipy",
            "default": true,
            "description": "Build with scipy support"
        },
        {
            "name": "numba",
            "default": true,
            "description": "Build with numba support"
        }
    ],
    "homepage": "https://github.com/moble/quaternion",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "This package creates a quaternion type in python, and further enables\nnumpy to create and manipulate arrays of quaternions. The usual\nalgebraic operations (addition and multiplication) are available, along\nwith numerous properties like norm and various types of distance\nmeasures between two quaternions. There are also additional functions\nlike \"squad\" and \"slerp\" interpolation, and conversions to and from\naxis-angle, matrix, and Euler-angle representations of rotations. The\ncore of the code is written in C for speed.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-numba",
            "description": "NumPy aware dynamic Python compiler using LLVM"
        },
        {
            "name": "py-llvmlite",
            "description": "A lightweight LLVM python binding for writing JIT compilers"
        }
    ],
    "dependent_to": []
}