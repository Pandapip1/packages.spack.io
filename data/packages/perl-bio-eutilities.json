{
    "name": "perl-bio-eutilities",
    "aliases": [],
    "versions": [
        {
            "name": "1.77",
            "sha256": "4d018c8cbda73c3d71487165261a3dfc4e823f8e22747497f6a586d5ad6f737f"
        }
    ],
    "latest_version": "1.77",
    "build_system": "PerlPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "perl",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://metacpan.org/pod/Bio::DB::EUtilities",
    "maintainers": [
        "EbiArnie"
    ],
    "patches": [],
    "resources": [],
    "description": "BioPerl low-level API for retrieving and storing data from NCBI eUtils\n",
    "dependencies": [
        {
            "name": "perl",
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development."
        },
        {
            "name": "perl-bio-asn1-entrezgene",
            "description": "Regular expression-based Perl Parser for NCBI Entrez Gene."
        },
        {
            "name": "perl-bioperl",
            "description": "BioPerl is the product of a community effort to produce Perl code which\nis useful in biology. Examples include Sequence objects, Alignment\nobjects and database searching objects. These objects not only do what\nthey are advertised to do in the documentation, but they also interact -\nAlignment objects are made from the Sequence objects, Sequence objects\nhave access to Annotation and SeqFeature objects and databases, Blast\nobjects can be converted to Alignment objects, and so on. This means\nthat the objects provide a coordinated and extensible framework to do\ncomputational biology. BioPerl development focuses on Perl classes, or\ncode that is used to create objects representing biological entities.\nThere are scripts provided in the scripts/ and examples/ directories but\nscripts are not the main focus of the BioPerl developers. Of course, as\nthe objects do most of the hard work for you, all you have to do is\ncombine a number of objects together sensibly to make useful scripts.\nThe intent of the BioPerl development effort is to make reusable tools\nthat aid people in creating their own sites or job-specific\napplications. The BioPerl website at https://bioperl.org/ also attempts\nto maintain links and archives of standalone bio-related Perl tools that\nare not affiliated or related to the core BioPerl effort. Check the site\nfor useful code ideas and contribute your own if possible."
        },
        {
            "name": "perl-http-message",
            "description": "HTTP style message (base class)"
        },
        {
            "name": "perl-libwww-perl",
            "description": "The libwww-perl collection is a set of Perl modules which provides a\nsimple and consistent application programming interface to the World-\nWide Web. The main focus of the library is to provide classes and\nfunctions that allow you to write WWW clients."
        },
        {
            "name": "perl-text-csv",
            "description": "Comma-separated values manipulator (using XS or PurePerl)"
        },
        {
            "name": "perl-uri",
            "description": "Uniform Resource Identifiers (absolute and relative)"
        },
        {
            "name": "perl-xml-simple",
            "description": "An API for simple XML files"
        }
    ],
    "dependent_to": []
}