{
    "name": "py-quaternionic",
    "aliases": [],
    "versions": [
        {
            "name": "1.0.1",
            "sha256": "ea69733d7311784963922bf08cc0c9c938b62fee2f91219f56544ff30658c10e"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/moble/quaternionic",
    "maintainers": [
        "nilsleiffischer",
        "moble"
    ],
    "patches": [],
    "resources": [],
    "description": "Interpret numpy arrays as quaternionic arrays with numba acceleration\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-poetry-core",
            "description": "Poetry PEP 517 Build Backend."
        },
        {
            "name": "py-importlib-metadata",
            "description": "Read metadata from Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-numba",
            "description": "NumPy aware dynamic Python compiler using LLVM"
        }
    ],
    "dependent_to": [
        {
            "name": "py-spherical",
            "description": "Evaluate and transform D matrices, 3-j symbols, and (scalar or spin-\nweighted) spherical harmonics"
        }
    ]
}