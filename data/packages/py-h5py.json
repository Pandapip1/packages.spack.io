{
    "name": "py-h5py",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "3.10.0",
            "sha256": "d93adc48ceeb33347eb24a634fb787efc7ae4644e6ea4ba733d099605045c049"
        },
        {
            "name": "3.9.0",
            "sha256": "e604db6521c1e367c6bd7fad239c847f53cc46646f2d2651372d05ae5e95f817"
        },
        {
            "name": "3.8.0",
            "sha256": "6fead82f0c4000cf38d53f9c030780d81bfa0220218aee13b90b7701c937d95f"
        },
        {
            "name": "3.7.0",
            "sha256": "3fcf37884383c5da64846ab510190720027dca0768def34dd8dcb659dbe5cbf3"
        },
        {
            "name": "3.6.0",
            "sha256": "8752d2814a92aba4e2b2a5922d2782d0029102d99caaf3c201a566bc0b40db29"
        },
        {
            "name": "3.5.0",
            "sha256": "77c7be4001ac7d3ed80477de5b6942501d782de1bbe4886597bdfec2a7ab821f"
        },
        {
            "name": "3.4.0",
            "sha256": "ee1c683d91ab010d5e85cb61e8f9e7ee0d8eab545bf3dd50a9618f1d0e8f615e"
        },
        {
            "name": "3.3.0",
            "sha256": "e0dac887d779929778b3cfd13309a939359cc9e74756fc09af7c527a82797186"
        },
        {
            "name": "3.2.1",
            "sha256": "89474be911bfcdb34cbf0d98b8ec48b578c27a89fdb1ae4ee7513f1ef8d9249e"
        },
        {
            "name": "3.2.0",
            "sha256": "4271c1a4b7d87aa76fe96d016368beb05a6c389d64882d58036964ce7d2d03c1"
        },
        {
            "name": "3.1.0",
            "sha256": "1e2516f190652beedcb8c7acfa1c6fa92d99b42331cbef5e5c7ec2d65b0fc3c2"
        },
        {
            "name": "3.0.0",
            "sha256": "7d3803be1b530c68c2955faba726dc0f591079b68941a0c0269b5384a42ab519"
        },
        {
            "name": "2.10.0",
            "sha256": "84412798925dc870ffd7107f045d7659e60f5d46d1c70c700375248bf6bf512d"
        },
        {
            "name": "2.9.0",
            "sha256": "9d41ca62daf36d6b6515ab8765e4c8c4388ee18e2a665701fef2b41563821002"
        },
        {
            "name": "2.8.0",
            "sha256": "e626c65a8587921ebc7fb8d31a49addfdd0b9a9aa96315ea484c09803337b955"
        },
        {
            "name": "2.7.1",
            "sha256": "180a688311e826ff6ae6d3bda9b5c292b90b28787525ddfcb10a29d5ddcae2cc"
        },
        {
            "name": "2.7.0",
            "sha256": "79254312df2e6154c4928f5e3b22f7a2847b6e5ffb05ddc33e37b16e76d36310"
        },
        {
            "name": "2.6.0",
            "sha256": "b2afc35430d5e4c3435c996e4f4ea2aba1ea5610e2d2f46c9cae9f785e33c435"
        },
        {
            "name": "2.5.0",
            "sha256": "9833df8a679e108b561670b245bcf9f3a827b10ccb3a5fa1341523852cfac2f6"
        },
        {
            "name": "2.4.0",
            "sha256": "faaeadf4b8ca14c054b7568842e0d12690de7d5d68af4ecce5d7b8fc104d8e60"
        }
    ],
    "latest_version": "3.10.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Build with MPI support"
        }
    ],
    "homepage": "https://www.h5py.org/",
    "maintainers": [
        "bryanherman",
        "takluyver"
    ],
    "patches": [],
    "resources": [],
    "description": "The h5py package provides both a high- and low-level interface to the\nHDF5 library from Python.\n",
    "dependencies": [
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "mpi",
            "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard."
        },
        {
            "name": "py-cached-property",
            "description": "A decorator for caching properties in classes."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-mpi4py",
            "description": "This package provides Python bindings for the Message Passing Interface\n(MPI) standard. It is implemented on top of the MPI-1/MPI-2\nspecification and exposes an API which grounds on the standard MPI-2 C++\nbindings."
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-pkgconfig",
            "description": "Interface Python with pkg-config."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-h5io",
            "description": "Python Objects Onto HDF5."
        },
        {
            "name": "py-instrain",
            "description": "inStrain is python program for analysis of co-occurring genome\npopulations from metagenomes that allows highly accurate genome\ncomparisons, analysis of coverage, microdiversity, and linkage, and\nsensitive SNP detection with gene localization and synonymous non-\nsynonymous identification."
        },
        {
            "name": "py-tomopy",
            "description": "TomoPy is an open-source Python package for tomographic data processing\nand image reconstruction."
        },
        {
            "name": "sw4",
            "description": "This package builds SW4 with MPI, OpenMP, HDF5, FFTW, PROJ, and ZFP."
        },
        {
            "name": "votca",
            "description": "VOTCA is a software package which focuses on the analysis of molecular\ndynamics data, the development of systematic coarse-graining techniques\nas well as methods used for simulating microscopic charge (and exciton)\ntransport in disordered semiconductors."
        },
        {
            "name": "py-bitshuffle",
            "description": "Filter for improving compression of typed binary data."
        },
        {
            "name": "py-anndata",
            "description": "anndata is a Python package for handling annotated data matrices in\nmemory and on disk, positioned between pandas and xarray."
        },
        {
            "name": "py-wradlib",
            "description": "wradlib is designed to assist you in the most important steps of\nprocessing weather radar data. These may include: reading common data\nformats, georeferencing, converting reflectivity to rainfall intensity,\nidentifying and correcting typical error sources (such as clutter or\nattenuation) and visualising the data."
        },
        {
            "name": "py-pymc3",
            "description": "PyMC3 is a Python package for Bayesian statistical modeling and\nProbabilistic Machine Learning focusing on advanced Markov chain Monte\nCarlo (MCMC) and variational inference (VI) algorithms. Its flexibility\nand extensibility make it applicable to a large suite of problems."
        },
        {
            "name": "mlperf-deepcam",
            "description": "PyTorch implementation for the climate segmentation benchmark, based on\nthe Exascale Deep Learning for Climate Analytics"
        },
        {
            "name": "py-loompy",
            "description": "Work with Loom files for single-cell RNA-seq data."
        },
        {
            "name": "py-vascpy",
            "description": "Python library for reading, writing, and manipulating large-scale\nvasculature datasets"
        },
        {
            "name": "py-qiskit-nature",
            "description": "Qiskit Nature is an open-source framework which supports solving quantum\nmechanical natural science problems using quantum computing algorithms"
        },
        {
            "name": "py-pycbc",
            "description": "PyCBC is a software package used to explore astrophysical sources of\ngravitational waves. It contains algorithms to analyze gravitational-\nwave data from the LIGO and Virgo detectors, detect coalescing compact\nbinaries, and measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational waves and\nis used in the flagship analysis of LIGO and Virgo data."
        },
        {
            "name": "py-amici",
            "description": "Advanced Multilanguage Interface for CVODES and IDAS"
        },
        {
            "name": "py-rsatoolbox",
            "description": "Representational Similarity Analysis (RSA) in Python."
        },
        {
            "name": "simulationio",
            "description": "SimulationIO: Efficient and convenient I/O for large PDE simulations"
        },
        {
            "name": "berkeleygw",
            "description": "BerkeleyGW is a many-body perturbation theory code for excited states,\nusing the GW method and the GW plus Bethe-Salpeter equation (GW-BSE)\nmethod to solve respectively for quasiparticle excitations and optical\nproperties of materials."
        },
        {
            "name": "py-mdanalysis",
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)"
        },
        {
            "name": "py-kosh",
            "description": "Kosh allows codes to store, query, share data via an easy-to-use Python\nAPI. Kosh lies on top of Sina and can use any database backend supported\nby Sina. In adition Kosh aims to make data access and sharing as simple\nas possible."
        },
        {
            "name": "py-cinemasci",
            "description": "A set of python tools for reading, writing and viewing Cinema databases"
        },
        {
            "name": "py-openpmd-viewer",
            "description": "Python visualization tools for openPMD files"
        },
        {
            "name": "py-torchgeo",
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data."
        },
        {
            "name": "py-scanpy",
            "description": "Scanpy is a scalable toolkit for analyzing single-cell gene expression\ndata built jointly with anndata."
        },
        {
            "name": "py-pyh5md",
            "description": "Read and write H5MD files."
        },
        {
            "name": "py-h5glance",
            "description": "H5Glance lets you explore HDF5 files in the terminal or an HTML\ninterface."
        },
        {
            "name": "py-pymatreader",
            "description": "Convenient reader for Matlab mat files."
        },
        {
            "name": "truchas",
            "description": "Physics-based modeling and simulation of manufacturing processes.\nTruchas includes coupled physics models for incompressible multi-\nmaterial flow with interface tracking, heat transfer, phase change, view\nfactor thermal radiation, species advection-diffusion, elastic/plastic\nmechanics with contact, and electromagnetics. It employs finite volume,\nfinite element, and mimetic finite difference discretizations on 3-D\nunstructured meshes composed of mixed cell types."
        },
        {
            "name": "py-openpmd-validator",
            "description": "Validator and Example Scripts for the openPMD markup. openPMD is an open\nstandard for particle-mesh data files."
        },
        {
            "name": "py-astropy",
            "description": "The Astropy Project is a community effort to develop a single core\npackage for Astronomy in Python and foster interoperability between\nPython astronomy packages."
        },
        {
            "name": "spectre",
            "description": "The SpECTRE numerical relativity code. SpECTRE is an open-source code\nfor multi-scale, multi-physics problems in astrophysics and\ngravitational physics. In the future, we hope that it can be applied to\nproblems across discipline boundaries in fluid dynamics, geoscience,\nplasma physics, nuclear physics, and engineering. It runs at petascale\nand is designed for future exascale computers. SpECTRE is being\ndeveloped in support of our collaborative Simulating eXtreme Spacetimes\n(SXS) research program into the multi-messenger astrophysics of neutron\nstar mergers, core-collapse supernovae, and gamma-ray bursts."
        },
        {
            "name": "py-yt",
            "description": "Volumetric Data Analysis yt is a python package for analyzing and\nvisualizing volumetric, multi-resolution data from astrophysical\nsimulations, radio telescopes, and a burgeoning interdisciplinary\ncommunity."
        },
        {
            "name": "py-glmsingle",
            "description": "A toolbox for accurate single-trial estimates in fMRI time-series data."
        },
        {
            "name": "py-openmc",
            "description": "OpenMC is a community-developed Monte Carlo neutron and photon transport\nsimulation code. It is capable of performing fixed source, k-eigenvalue,\nand subcritical multiplication calculations on models built using either\na constructive solid geometry or CAD representation. OpenMC supports\nboth continuous-energy and multigroup transport. The continuous-energy\nparticle interaction data is based on a native HDF5 format that can be\ngenerated from ACE files produced by NJOY. Parallelism is enabled via a\nhybrid MPI and OpenMP programming model."
        },
        {
            "name": "py-bluepyefe",
            "description": "Blue Brain Python E-feature extraction"
        },
        {
            "name": "py-ont-fast5-api",
            "description": "This project provides classes and utility functions for working with\nread fast5 files. It provides an abstraction layer between the\nunderlying h5py library and the various concepts central to read fast5\nfiles, such as \"reads\", \"analyses\", \"analysis summaries\", and \"analysis\ndatasets\". Ideally all interaction with a read fast5 file should be\npossible via this API, without having to directly invoke the h5py\nlibrary."
        },
        {
            "name": "py-morphio",
            "description": "Python library for reading / writing morphology files"
        },
        {
            "name": "py-dxfile",
            "description": "Scientific Data Exchange [A1] is a set of guidelines for storing\nscientific data and metadata in a Hierarchical Data Format 5 [B6] file."
        },
        {
            "name": "py-heat",
            "description": "Heat is a flexible and seamless open-source software for high\nperformance data analytics and machine learning. It provides highly\noptimized algorithms and data structures for tensor computations using\nCPUs, GPUs and distributed cluster systems on top of MPI."
        },
        {
            "name": "py-tensorflow",
            "description": "TensorFlow is an open source machine learning framework for everyone."
        },
        {
            "name": "repeatmasker",
            "description": "RepeatMasker is a program that screens DNA sequences for interspersed\nrepeats and low complexity DNA sequences."
        },
        {
            "name": "py-kb-python",
            "description": "Python wrapper around kallisto | bustools for scRNA-seq analysis."
        },
        {
            "name": "py-pyheadtail",
            "description": "CERN PyHEADTAIL numerical n-body simulation code for simulating macro-\nparticle beam dynamics with collective effects."
        },
        {
            "name": "py-pynucleus",
            "description": "PyNucleus is a finite element code that specifically targets nonlocal\noperators."
        },
        {
            "name": "py-keras",
            "description": "Multi-backend Keras. Keras 3 is a new multi-backend implementation of\nthe Keras API, with support for TensorFlow, JAX, and PyTorch."
        },
        {
            "name": "py-dxchange",
            "description": "DXchange provides an interface with tomoPy and raw tomographic data\ncollected at different synchrotron facilities."
        },
        {
            "name": "py-biom-format",
            "description": "The BIOM file format (canonically pronounced biome) is designed to be a\ngeneral-use format for representing biological sample by observation\ncontingency tables."
        },
        {
            "name": "py-metaphlan",
            "description": "MetaPhlAn is a computational tool for profiling the composition of\nmicrobial communities (Bacteria, Archaea and Eukaryotes) from\nmetagenomic shotgun sequencing data (i.e. not 16S) with species-level."
        },
        {
            "name": "py-h5sh",
            "description": "Shell-like environment for HDF5."
        },
        {
            "name": "py-horovod",
            "description": "Horovod is a distributed deep learning training framework for\nTensorFlow, Keras, PyTorch, and Apache MXNet."
        },
        {
            "name": "py-dipy",
            "description": "Diffusion MRI utilities in python. DIPY is the paragon 3D/4D+ imaging\nlibrary in Python. Contains generic methods for spatial normalization,\nsignal processing, machine learning, statistical analysis and\nvisualization of medical images. Additionally, it contains specialized\nmethods for computational anatomy including diffusion, perfusion and\nstructural imaging."
        },
        {
            "name": "py-medaka",
            "description": "medaka is a tool to create consensus sequences and variant calls from\nnanopore sequencing data. This task is performed using neural networks\napplied a pileup of individual sequencing reads against a draft\nassembly. It provides state-of-the-art results outperforming sequence-\ngraph based methods and signal-based methods, whilst also being faster."
        },
        {
            "name": "py-pycortex",
            "description": "Python Cortical mapping software for fMRI data."
        },
        {
            "name": "py-nitransforms",
            "description": "NiTransforms -- Neuroimaging spatial transforms in Python."
        },
        {
            "name": "py-bmtk",
            "description": "The Brain Modeling Toolkit"
        },
        {
            "name": "py-ipyrad",
            "description": "An interactive toolkit for assembly and analysis of restriction-site\nassociated genomic data sets (e.g., RAD, ddRAD, GBS) for population\ngenetic and phylogenetic studies."
        },
        {
            "name": "py-damask",
            "description": "Pre- and post-processing tools for DAMASK"
        },
        {
            "name": "steps",
            "description": "STochastic Engine for Pathway Simulation"
        },
        {
            "name": "py-pyfr",
            "description": "PyFR is an open-source Python based framework for solving advection-\ndiffusion type problems on streaming architectures using the Flux\nReconstruction approach of Huynh."
        },
        {
            "name": "py-picrust2",
            "description": "PICRUSt2 is a software for predicting functional abundances based only\non marker gene sequences."
        },
        {
            "name": "py-h5netcdf",
            "description": "A Python interface for the netCDF4 file-format that reads and writes\nlocal or remote HDF5 files directly via h5py or h5pyd, without relying\non the Unidata netCDF library."
        },
        {
            "name": "sirius",
            "description": "Domain specific library for electronic structure calculations"
        },
        {
            "name": "py-postcactus",
            "description": "This repository contains a Python package named PostCactus for\npostprocessing data from numerical simulations performed with the\nEinstein Toolkit."
        },
        {
            "name": "singularity-eos",
            "description": "Singularity-EOS: A collection of closure models and tools useful for\nmultiphysics codes."
        },
        {
            "name": "py-continuum",
            "description": "A clean and simple data loading library for Continual Learning"
        },
        {
            "name": "py-psana",
            "description": "LCLS II Developement: PSAna Python."
        },
        {
            "name": "py-earth2mip",
            "description": "Earth-2 Model Intercomparison Project (MIP). A python framework that\nenables climate researchers and scientists to explore and experiment\nwith AI models for weather and climate."
        },
        {
            "name": "cosmoflow-benchmark",
            "description": "This is a an implementation of the CosmoFlow 3D convolutional neural\nnetwork for benchmarking. It is written in TensorFlow with the Keras API\nand uses Horovod for distributed training."
        },
        {
            "name": "tskit",
            "description": "The tskit library provides the underlying functionality used to load,\nexamine, and manipulate tree sequences"
        },
        {
            "name": "py-torchmeta",
            "description": "A collection of extensions and data-loaders for few-shot learning &\nmeta-learning in PyTorch. Torchmeta contains popular meta-learning\nbenchmarks, fully compatible with both torchvision and PyTorch's\nDataLoader."
        },
        {
            "name": "py-torch-geometric",
            "description": "PyTorch Geometric (PyG) is a geometric deep learning extension library\nfor PyTorch. It consists of various methods for deep learning on graphs\nand other irregular structures, also known as geometric deep learning,\nfrom a variety of published papers. In addition, it consists of an easy-\nto-use mini-batch loader for many small and single giant graphs, multi\ngpu-support, a large number of common benchmark datasets (based on\nsimple interfaces to create your own), and helpful transforms, both for\nlearning on arbitrary graphs as well as on 3D meshes or point clouds."
        },
        {
            "name": "py-arm-pyart",
            "description": "Python ARM Radar Toolkit. A growing collection of weather radar\nalgorithms and utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, processes, and analyse data from\nmany types of weather radars."
        },
        {
            "name": "py-mne",
            "description": "MNE python project for MEG and EEG data analysis."
        },
        {
            "name": "candle-benchmarks",
            "description": "ECP-CANDLE Benchmarks"
        },
        {
            "name": "py-pyscf",
            "description": "PySCF is a collection of electronic structure programs powered by\nPython."
        },
        {
            "name": "py-pathml",
            "description": "An open-source toolkit for computational pathology and machine learning."
        }
    ]
}