{
    "name": "google-crc32c",
    "aliases": [],
    "versions": [
        {
            "name": "1.1.2",
            "sha256": "ac07840513072b7fcebda6e821068aa04889018f24e10e46181068fb214d7e56"
        }
    ],
    "latest_version": "1.1.2",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        }
    ],
    "homepage": "https://github.com/google/crc32c",
    "maintainers": [
        "marcusboden"
    ],
    "patches": [],
    "resources": [],
    "description": "CRC32C implementation with support for CPU-specific acceleration\ninstructions.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        }
    ],
    "dependent_to": [
        {
            "name": "py-google-crc32c",
            "description": "This package wraps the google/crc32c hardware-based implementation of\nthe CRC32C hashing algorithm."
        }
    ]
}