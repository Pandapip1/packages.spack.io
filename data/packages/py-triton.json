{
    "name": "py-triton",
    "aliases": [],
    "versions": [
        {
            "name": "2.1.0",
            "sha256": "4338ca0e80a059aec2671f02bfc9320119b051f378449cf5f56a1273597a3d99"
        }
    ],
    "latest_version": "2.1.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/openai/triton",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "A language and compiler for custom Deep Learning operations.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "py-filelock",
            "description": "A platform-independent file lock for Python. This package contains a\nsingle module, which implements a platform independent file lock in\nPython, which provides a simple way of inter-process communication"
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "zlib-api",
            "description": "zlib replacement with optimizations for next generation systems."
        }
    ],
    "dependent_to": [
        {
            "name": "py-torch-harmonics",
            "description": "A differentiable spherical harmonic transform for PyTorch."
        }
    ]
}