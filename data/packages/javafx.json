{
    "name": "javafx",
    "aliases": [],
    "versions": [
        {
            "name": "20.0.1",
            "sha256": "882082b01a7f46792074cbe58e90136b81413438de184a941e051b836cbe90a2",
            "url": "https://download2.gluonhq.com/openjfx/20.0.1/openjfx-20.0.1_linux-x64_bin-sdk.zip"
        }
    ],
    "latest_version": "20.0.1",
    "build_system": "Package",
    "conflicts": [
        {
            "name": "target=ppc64le:",
            "spec": "",
            "description": "JavaFX is not available for ppc64le"
        },
        {
            "name": "target=ppc64:",
            "spec": "",
            "description": "JavaFX is not available for ppc64"
        },
        {
            "name": "target=riscv64:",
            "spec": "",
            "description": "JavaFX is not available for riscv64"
        },
        {
            "name": "target=x86",
            "spec": "",
            "description": "JavaFX is not available for x86"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "generic",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://openjfx.io/",
    "maintainers": [
        "snehring"
    ],
    "patches": [],
    "resources": [],
    "description": "JavaFX allows you to create Java applications with a modern, hardware-\naccelerated user interface that is highly portable.\n",
    "dependencies": [
        {
            "name": "openjdk",
            "description": "The free and opensource java implementation"
        }
    ],
    "dependent_to": [
        {
            "name": "beast2",
            "description": "BEAST is a cross-platform program for Bayesian inference using MCMC of\nmolecular sequences. It is entirely orientated towards rooted, time-\nmeasured phylogenies inferred using strict or relaxed molecular clock\nmodels. It can be used as a method of reconstructing phylogenies but is\nalso a framework for testing evolutionary hypotheses without\nconditioning on a single tree topology."
        }
    ]
}