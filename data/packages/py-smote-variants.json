{
    "name": "py-smote-variants",
    "aliases": [],
    "versions": [
        {
            "name": "0.7.3",
            "sha256": "69497c764f101a76e8a3d4a9c80176704375c7aa5e26914f19222b59fb03b890"
        }
    ],
    "latest_version": "0.7.3",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/analyticalmindsltd/smote_variants",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "Variants of the synthetic minority oversampling technique (SMOTE) for\nimbalanced learning\n",
    "dependencies": [
        {
            "name": "mkl",
            "description": "This is an earlier version of Intel parallel software development tools\nand has now been replaced by the Intel oneAPI Toolkits. LICENSE\nINFORMATION: By downloading and using this software, you agree to the\nterms and conditions of the software license agreements at\nhttps://intel.ly/393CijO."
        },
        {
            "name": "py-joblib",
            "description": "Lightweight pipelining with Python functions."
        },
        {
            "name": "py-keras",
            "description": "Multi-backend Keras. Keras 3 is a new multi-backend implementation of\nthe Keras API, with support for TensorFlow, JAX, and PyTorch."
        },
        {
            "name": "py-metric-learn",
            "description": "metric-learn contains efficient Python implementations of several\npopular supervised and weakly-supervised metric learning algorithms. As\npart of scikit-learn-contrib, the API of metric-learn is compatible with\nscikit-learn, the leading library for machine learning in Python. This\nallows to use all the scikit-learn routines (for pipelining, model\nselection, etc) with metric learning algorithms through a unified\ninterface."
        },
        {
            "name": "py-minisom",
            "description": "MiniSom is a minimalistic and Numpy based implementation of the Self\nOrganizing Maps (SOM). SOM is a type of Artificial Neural Network able\nto convert complex, nonlinear statistical relationships between high-\ndimensional data items into simple geometric relationships on a low-\ndimensional display. Minisom is designed to allow researchers to easily\nbuild on top of it and to give students the ability to quickly grasp its\ndetails. The project initially aimed for a minimalistic implementation\nof the Self-Organizing Map (SOM) algorithm, focusing on simplicity in\nfeatures, dependencies, and code style. Although it has expanded in\nterms of features, it remains minimalistic by relying only on the numpy\nlibrary and emphasizing vectorization in coding style."
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-pandas",
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-pytest-runner",
            "description": "Invoke py.test as distutils command with dependency resolution."
        },
        {
            "name": "py-scikit-learn",
            "description": "A set of python modules for machine learning and data mining."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "py-seaborn",
            "description": "Seaborn: statistical data visualization. Seaborn is a library for making\nattractive and informative statistical graphics in Python. It is built\non top of matplotlib and tightly integrated with the PyData stack,\nincluding support for numpy and pandas data structures and statistical\nroutines from scipy and statsmodels."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-tensorflow",
            "description": "TensorFlow is an open source machine learning framework for everyone."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": []
}