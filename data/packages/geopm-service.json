{
    "name": "geopm-service",
    "aliases": [],
    "versions": [
        {
            "name": "develop",
            "branch": "dev"
        },
        {
            "name": "3.0.1",
            "sha256": "32ba1948de58815ee055470dcdea64593d1113a6cad70ce00ab0286c127f8234"
        }
    ],
    "latest_version": "3.0.1",
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools",
            "description": null
        },
        {
            "name": "+nvml",
            "spec": "+levelzero",
            "description": "geopm-service: LevelZero and NVML support are mutually exclusive"
        },
        {
            "name": "%gcc@:7.2",
            "spec": "",
            "description": "geopm-service: Requires C++17 support"
        },
        {
            "name": "%clang@:4",
            "spec": "",
            "description": "geopm-service: Requires C++17 support"
        },
        {
            "name": "arch=darwin-None-None",
            "spec": "",
            "description": "geopm-service: Darwin is not supported"
        },
        {
            "name": "arch=windows-None-None",
            "spec": "",
            "description": "geopm-service: Windows is not supported"
        },
        {
            "name": "arch=None-None-aarch64:",
            "spec": "",
            "description": "geopm-service: Only available on x86_64"
        },
        {
            "name": "arch=None-None-ppc64:",
            "spec": "",
            "description": "geopm-service: Only available on x86_64"
        },
        {
            "name": "arch=None-None-ppc64le:",
            "spec": "",
            "description": "geopm-service: Only available on x86_64"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "autotools",
            "description": "Build systems supported by the package"
        },
        {
            "name": "debug",
            "default": false,
            "description": "Enable debug"
        },
        {
            "name": "docs",
            "default": true,
            "description": "Create man pages with Sphinx"
        },
        {
            "name": "systemd",
            "default": false,
            "description": "Enable use of systemd (systemd development libraries required)"
        },
        {
            "name": "liburing",
            "default": true,
            "description": "Enables the use of liburing for batch I/O"
        },
        {
            "name": "libcap",
            "default": true,
            "description": "Enables the use of libcap to do capabilities checks"
        },
        {
            "name": "gnu-ld",
            "default": false,
            "description": "Assume C compiler uses gnu-ld"
        },
        {
            "name": "levelzero",
            "default": false,
            "description": "Enables the use of oneAPI Level Zero loader"
        },
        {
            "name": "nvml",
            "default": false,
            "description": "Enable NVML support"
        },
        {
            "name": "rawmsr",
            "default": true,
            "description": "Enable direct use of standard msr device driver"
        }
    ],
    "homepage": "https://geopm.github.io",
    "maintainers": [
        "bgeltz",
        "cmcantalupo"
    ],
    "patches": [
        {
            "owner": "builtin.geopm-service",
            "sha256": "fdc608e50e074423c0798e6cf4da3a43150e38e3598246b3a033bd82f709d46a",
            "level": 1,
            "working_dir": ".",
            "relative_path": "0001-Support-NVML-via-CUDA-installation.patch",
            "version": "+nvml"
        }
    ],
    "resources": [],
    "description": "The Global Extensible Open Power Manager (GEOPM) is a framework for\nexploring power and energy optimizations targeting heterogeneous\nplatforms. The GEOPM package provides many built-in features. A simple\nuse case is reading hardware counters and setting hardware controls with\nplatform independent syntax using a command line tool on a particular\ncompute node. An advanced use case is dynamically coordinating hardware\nsettings across all compute nodes used by a distributed application is\nresponse to the application's behavior and requests from the resource\nmanager. Note: GEOPM interfaces with hardware using Model Specific\nRegisters (MSRs). For proper usage make sure MSRs are made available via\nthe msr or msr-safe kernel modules by your administrator.\n",
    "dependencies": [
        {
            "name": "automake",
            "description": "Automake -- make file builder part of autotools"
        },
        {
            "name": "bash-completion",
            "description": "Programmable completion functions for bash."
        },
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "doxygen",
            "description": "Doxygen is the de facto standard tool for generating documentation from\nannotated C++ sources, but it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba,\nMicrosoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some\nextent D.."
        },
        {
            "name": "file",
            "description": "The file command is \"a file type guesser\", that is, a command-line tool\nthat tells you in words what kind of data a file contains"
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "gnuconfig",
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files."
        },
        {
            "name": "libcap",
            "description": "Libcap implements the user-space interfaces to the POSIX 1003.1e\ncapabilities available in Linux kernels. These capabilities are a\npartitioning of the all powerful root privilege into a set of distinct\nprivileges."
        },
        {
            "name": "libtool",
            "description": "libtool -- library building part of autotools."
        },
        {
            "name": "liburing",
            "description": "This is the io_uring library, liburing. liburing provides helpers to\nsetup and teardown io_uring instances, and also a simplified interface\nfor applications that don't need (or want) to deal with the full kernel\nside implementation."
        },
        {
            "name": "oneapi-level-zero",
            "description": "oneAPI Level Zero Loader. Applications that need low-level control of a\noneAPI level zero device link against the loader. The loader depends on\na separately installed level zero driver. See https://dgpu-\ndocs.intel.com/technologies/level-zero.html for information on how to\ninstall the driver."
        },
        {
            "name": "py-cffi",
            "description": "Foreign Function Interface for Python calling C code"
        },
        {
            "name": "py-dasbus",
            "description": "Dasbus is a DBus library written in Python 3, based on GLib and inspired\nby pydbus."
        },
        {
            "name": "py-docstring-parser",
            "description": "Parse Python docstrings in reST, Google and Numpydoc format."
        },
        {
            "name": "py-jsonschema",
            "description": "Jsonschema: An(other) implementation of JSON Schema for Python."
        },
        {
            "name": "py-psutil",
            "description": "psutil is a cross-platform library for retrieving information on running\nprocesses and system utilization (CPU, memory, disks, network) in\nPython."
        },
        {
            "name": "py-pygments",
            "description": "Pygments is a syntax highlighting package written in Python."
        },
        {
            "name": "py-pyyaml",
            "description": "PyYAML is a YAML parser and emitter for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-sphinx",
            "description": "Sphinx Documentation Generator."
        },
        {
            "name": "py-sphinx-rtd-theme",
            "description": "ReadTheDocs.org theme for Sphinx."
        },
        {
            "name": "py-sphinx-tabs",
            "description": "Create tabbed content in Sphinx documentation when building HTML."
        },
        {
            "name": "py-sphinxemoji",
            "description": "An extension to use emoji codes in your Sphinx documentation!"
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "unzip",
            "description": "Unzip is a compression and file packaging/archive utility."
        }
    ],
    "dependent_to": []
}