{
    "name": "py-xarray",
    "aliases": [],
    "versions": [
        {
            "name": "2023.7.0",
            "sha256": "dace2fdbf1b7ff185d9c1226a24bf83c2ae52f3253dbfe80e17d1162600d055c"
        },
        {
            "name": "2022.3.0",
            "sha256": "398344bf7d170477aaceff70210e11ebd69af6b156fe13978054d25c48729440"
        },
        {
            "name": "0.18.2",
            "sha256": "5d2e72a228286fcf60f66e16876bd27629a1a70bf64822c565f16515c4d10284"
        },
        {
            "name": "0.17.0",
            "sha256": "9c2edad2a4e588f9117c666a4249920b9717fb75703b96998cf65fcd4f60551f"
        },
        {
            "name": "0.16.2",
            "sha256": "38e8439d6c91bcd5b7c0fca349daf8e0643ac68850c987262d53526e9d7d01e4"
        },
        {
            "name": "0.14.0",
            "sha256": "a8b93e1b0af27fa7de199a2d36933f1f5acc9854783646b0f1b37fed9b4da091"
        },
        {
            "name": "0.13.0",
            "sha256": "80e5746ffdebb96b997dba0430ff02d98028ef3828e6db6106cbbd6d62e32825"
        },
        {
            "name": "0.12.0",
            "sha256": "856fd062c55208a248ac3784cac8d3524b355585387043efc92a4188eede57f3"
        },
        {
            "name": "0.11.0",
            "sha256": "636964baccfca0e5d69220ac4ecb948d561addc76f47704064dcbe399e03a818"
        },
        {
            "name": "0.9.1",
            "sha256": "89772ed0e23f0e71c3fb8323746374999ecbe79c113e3fadc7ae6374e6dc0525"
        }
    ],
    "latest_version": "2023.7.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "io",
            "default": false,
            "description": "Build io backends"
        },
        {
            "name": "parallel",
            "default": false,
            "description": "Build parallel backend"
        }
    ],
    "homepage": "https://github.com/pydata/xarray",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "N-D labeled arrays and datasets in Python\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-setuptools-scm",
            "description": "The blessed package to manage your versions by scm tags."
        },
        {
            "name": "py-setuptools-scm-git-archive",
            "description": "This is a setuptools_scm plugin that adds support for git archives (for\nexample the ones GitHub automatically generates)."
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-pandas",
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage."
        },
        {
            "name": "py-packaging",
            "description": "Core utilities for Python packages."
        },
        {
            "name": "py-netcdf4",
            "description": "Python interface to the netCDF Library."
        },
        {
            "name": "py-h5netcdf",
            "description": "A Python interface for the netCDF4 file-format that reads and writes\nlocal or remote HDF5 files directly via h5py or h5pyd, without relying\non the Unidata netCDF library."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "py-pydap",
            "description": "An implementation of the Data Access Protocol."
        },
        {
            "name": "py-zarr",
            "description": "Zarr is a Python package providing an implementation of chunked,\ncompressed, N-dimensional arrays."
        },
        {
            "name": "py-fsspec",
            "description": "A specification for pythonic filesystems."
        },
        {
            "name": "py-cftime",
            "description": "Python library for decoding time units and variable values in a netCDF\nfile conforming to the Climate and Forecasting (CF) netCDF conventions"
        },
        {
            "name": "py-rasterio",
            "description": "Rasterio reads and writes geospatial raster data. Geographic information\nsystems use GeoTIFF and other formats to organize and store gridded, or\nraster, datasets. Rasterio reads and writes these formats and provides a\nPython API based on N-D arrays."
        },
        {
            "name": "py-cfgrib",
            "description": "Python interface to map GRIB files to the NetCDF Common Data Model\nfollowing the CF Convention using ecCodes."
        },
        {
            "name": "py-pooch",
            "description": "Pooch manages your Python library's sample data files: it automatically\ndownloads and stores them in a local directory, with support for\nversioning and corruption checks."
        },
        {
            "name": "py-dask",
            "description": "Dask is a flexible parallel computing library for analytics."
        }
    ],
    "dependent_to": [
        {
            "name": "py-metpy",
            "description": "Collection of tools for reading, visualizing and performing calculations\nwith weather data."
        },
        {
            "name": "py-arm-pyart",
            "description": "Python ARM Radar Toolkit. A growing collection of weather radar\nalgorithms and utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, processes, and analyse data from\nmany types of weather radars."
        },
        {
            "name": "py-arviz",
            "description": "ArviZ (pronounced \"AR-vees\") is a Python package for exploratory\nanalysis of Bayesian models. Includes functions for posterior analysis,\nmodel checking, comparison and diagnostics."
        },
        {
            "name": "py-geocube",
            "description": "Tool to convert geopandas vector data into rasterized xarray data."
        },
        {
            "name": "py-cdo",
            "description": "The cdo package provides an interface to the Climate Data Operators from\nPython."
        },
        {
            "name": "py-cfgrib",
            "description": "Python interface to map GRIB files to the NetCDF Common Data Model\nfollowing the CF Convention using ecCodes."
        },
        {
            "name": "py-pint-xarray",
            "description": "A convenience wrapper for using pint with xarray"
        },
        {
            "name": "py-datacube",
            "description": "An analysis environment for satellite and other earth observation data."
        },
        {
            "name": "py-wradlib",
            "description": "wradlib is designed to assist you in the most important steps of\nprocessing weather radar data. These may include: reading common data\nformats, georeferencing, converting reflectivity to rainfall intensity,\nidentifying and correcting typical error sources (such as clutter or\nattenuation) and visualising the data."
        },
        {
            "name": "py-rioxarray",
            "description": "rasterio xarray extension."
        },
        {
            "name": "met",
            "description": "Statistical tool that matches up grids with either gridded analyses or\npoint observations and applies configurable methods to compute\nstatistics and diagnostics"
        }
    ]
}