{
    "name": "py-memray",
    "aliases": [],
    "versions": [
        {
            "name": "1.1.0",
            "sha256": "876e46e0cd42394be48b33f81314bc946f4eb023b04bf1def084c25ccf1d2bb6"
        }
    ],
    "latest_version": "1.1.0",
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "name": "platform=darwin",
            "spec": "",
            "description": "py-memray: memray only supports Linux platforms"
        },
        {
            "name": "platform=windows",
            "spec": "",
            "description": "py-memray: memray only supports Linux platforms"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/bloomberg/memray",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "A memory profiler for Python applications.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-jinja2",
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-rich",
            "description": "Rich is a Python library for rich text and beautiful formatting in the\nterminal."
        },
        {
            "name": "libunwind",
            "description": "A portable and efficient C programming interface (API) to determine the\ncall-chain of a program."
        },
        {
            "name": "lz4",
            "description": "LZ4 is lossless compression algorithm, providing compression speed at\n400 MB/s per core, scalable with multi-cores CPU. It also features an\nextremely fast decoder, with speed in multiple GB/s per core, typically\nreaching RAM speed limits on multi-core systems."
        }
    ],
    "dependent_to": []
}