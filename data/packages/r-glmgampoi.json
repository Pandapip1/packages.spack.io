{
    "name": "r-glmgampoi",
    "aliases": [],
    "versions": [
        {
            "name": "1.10.0",
            "commit": "048e17384209fc07031e09875ec6eea35e90ef46"
        },
        {
            "name": "1.8.0",
            "commit": "b723d61e05c1ad50a3cf6a6393ec3d97adc7edb4"
        }
    ],
    "latest_version": "1.10.0",
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "generic",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://bioconductor.org/packages/glmGamPoi",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Fit a Gamma-Poisson Generalized Linear Model. Fit linear models to\noverdispersed count data. The package can estimate the overdispersion\nand fit repeated models for matrix input. It is designed to handle large\ninput datasets as they typically occur in single cell RNA-seq\nexperiments.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-rcpp",
            "description": "Seamless R and C++ Integration. The 'Rcpp' package provides R functions\nas well as C++ classes which; offer a seamless integration of R and C++.\nMany R data types and objects can be; mapped back and forth to C++\nequivalents which facilitates both writing of new; code as well as\neasier integration of third-party libraries. Documentation; about 'Rcpp'\nis provided by several vignettes included in this package, via the;\n'Rcpp Gallery' site at <https://gallery.rcpp.org>, the paper by\nEddelbuettel and; Francois (2011, <doi:10.18637/jss.v040.i08>), the book\nby Eddelbuettel (2013,; <doi:10.1007/978-1-4614-6868-4>) and the paper\nby Eddelbuettel and Balamuta (2018,;\n<doi:10.1080/00031305.2017.1375990>); see 'citation(\"Rcpp\")' for\ndetails."
        },
        {
            "name": "r-delayedmatrixstats",
            "description": "Functions that Apply to Rows and Columns of 'DelayedMatrix' Objects. A\nport of the 'matrixStats' API for use with DelayedMatrix objects from\nthe 'DelayedArray' package. High-performing functions operating on rows\nand columns of DelayedMatrix objects, e.g. col / rowMedians(), col /\nrowRanks(), and col / rowSds(). Functions optimized per data type and\nfor subsetted calculations such that both memory usage and processing\ntime is minimized."
        },
        {
            "name": "r-matrixstats",
            "description": "Functions that Apply to Rows and Columns of Matrices (and to Vectors).\nHigh-performing functions operating on rows and columns of matrices,\ne.g. col / rowMedians(), col / rowRanks(), and col / rowSds(). Functions\noptimized per data type and for subsetted calculations such that both\nmemory usage and processing time is minimized. There are also optimized\nvector-based methods, e.g. binMeans(), madDiff() and weightedMedian()."
        },
        {
            "name": "r-matrixgenerics",
            "description": "S4 Generic Summary Statistic Functions that Operate on Matrix-Like\nObjects. S4 generic functions modeled after the 'matrixStats' API for\nalternative matrix implementations. Packages with alternative matrix\nimplementation can depend on this package and implement the generic\nfunctions that are defined here for a useful set of row and column\nsummary statistics. Other package developers can import this package and\nhandle a different matrix implementations without worrying about\nincompatibilities."
        },
        {
            "name": "r-delayedarray",
            "description": "A unified framework for working transparently with on-disk and in-memory\narray-like datasets. Wrapping an array-like object (typically an on-disk\nobject) in a DelayedArray object allows one to perform common array\noperations on it without loading the object in memory. In order to\nreduce memory usage and optimize performance, operations on the object\nare either delayed or executed using a block processing mechanism. Note\nthat this also works on in-memory array-like objects like DataFrame\nobjects (typically with Rle columns), Matrix objects, and ordinary\narrays and data frames."
        },
        {
            "name": "r-hdf5array",
            "description": "HDF5 backend for DelayedArray objects. Implements the HDF5Array and\nTENxMatrix classes, 2 convenient and memory-efficient array-like\ncontainers for on-disk representation of HDF5 datasets. HDF5Array is for\ndatasets that use the conventional (i.e. dense) HDF5 representation.\nTENxMatrix is for datasets that use the HDF5-based sparse matrix\nrepresentation from 10x Genomics (e.g. the 1.3 Million Brain Cell\nDataset). Both containers being DelayedArray extensions, they support\nall operations supported by DelayedArray objects. These operations can\nbe either delayed or block-processed."
        },
        {
            "name": "r-summarizedexperiment",
            "description": "SummarizedExperiment container. The SummarizedExperiment container\ncontains one or more assays, each represented by a matrix-like object of\nnumeric or other mode. The rows typically represent genomic ranges of\ninterest and the columns represent samples."
        },
        {
            "name": "r-singlecellexperiment",
            "description": "S4 Classes for Single Cell Data. Defines a S4 class for storing data\nfrom single-cell experiments. This includes specialized methods to store\nand retrieve spike-in information, dimensionality reduction coordinates\nand size factors for each cell, along with the usual metadata for genes\nand libraries."
        },
        {
            "name": "r-biocgenerics",
            "description": "S4 generic functions used in Bioconductor. The package defines S4\ngeneric functions used in Bioconductor."
        },
        {
            "name": "r-rlang",
            "description": "Functions for Base Types and Core R and 'Tidyverse' Features. A toolbox\nfor working with base types, core R features like the condition system,\nand core 'Tidyverse' features like tidy evaluation."
        },
        {
            "name": "r-rcpparmadillo",
            "description": "'Rcpp' Integration for the 'Armadillo' Templated Linear Algebra Library.\n'Armadillo' is a templated C++ linear algebra library (by Conrad;\nSanderson) that aims towards a good balance between speed and ease of;\nuse. Integer, floating point and complex numbers are supported, as; well\nas a subset of trigonometric and statistics functions. Various; matrix\ndecompositions are provided through optional integration with; LAPACK\nand ATLAS libraries. The 'RcppArmadillo' package includes the; header\nfiles from the templated 'Armadillo' library. Thus users do; not need to\ninstall 'Armadillo' itself in order to use; 'RcppArmadillo'. From\nrelease 7.800.0 on, 'Armadillo' is licensed; under Apache License 2;\nprevious releases were under licensed as MPL; 2.0 from version 3.800.0\nonwards and LGPL-3 prior to that"
        },
        {
            "name": "r-beachmat",
            "description": "Compiling Bioconductor to Handle Each Matrix Type. Provides a consistent\nC++ class interface for reading from and writing data to a variety of\ncommonly used matrix types. Ordinary matrices and several sparse/dense\nMatrix classes are directly supported, third-party S4 classes may be\nsupported by external linkage, while all other matrices are handled by\nDelayedArray block processing."
        }
    ],
    "dependent_to": []
}