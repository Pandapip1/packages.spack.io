{
    "name": "py-etils",
    "aliases": [],
    "versions": [
        {
            "name": "0.9.0",
            "sha256": "489103e9e499a566765c60458ee15d185cf0065f2060a4d16a68f8f46962ed0d"
        }
    ],
    "latest_version": "0.9.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "epath",
            "default": false,
            "description": "with epath module"
        }
    ],
    "homepage": "https://github.com/google/etils",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "etils (eclectic utils) is an open-source collection of utils for python.\n",
    "dependencies": [
        {
            "name": "py-flit-core",
            "description": "Distribution-building parts of Flit."
        },
        {
            "name": "py-importlib-resources",
            "description": "Read resources from Python packages"
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-zipp",
            "description": "Backport of pathlib-compatible object wrapper for zip files."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-jax",
            "description": "JAX is Autograd and XLA, brought together for high-performance machine\nlearning research. With its updated version of Autograd, JAX can\nautomatically differentiate native Python and NumPy functions. It can\ndifferentiate through loops, branches, recursion, and closures, and it\ncan take derivatives of derivatives of derivatives. It supports reverse-\nmode differentiation (a.k.a. backpropagation) via grad as well as\nforward-mode differentiation, and the two can be composed arbitrarily to\nany order."
        }
    ]
}