{
    "name": "py-cartopy",
    "aliases": [],
    "versions": [
        {
            "name": "0.21.0",
            "sha256": "ce1d3a28a132e94c89ac33769a50f81f65634ab2bd40556317e15bd6cad1ce42"
        },
        {
            "name": "0.20.3",
            "sha256": "0d60fa2e2fbd77c4d1f6b1f9d3b588966147f07c1b179d2d34570ac1e1b49006"
        },
        {
            "name": "0.20.2",
            "sha256": "4d08c198ecaa50a6a6b109d0f14c070e813defc046a83ac5d7ab494f85599e35"
        },
        {
            "name": "0.20.1",
            "sha256": "91f87b130e2574547a20cd634498df97d797abd12dcfd0235bc0cdbcec8b05e3"
        },
        {
            "name": "0.20.0",
            "sha256": "eae58aff26806e63cf115b2bce9477cedc4aa9f578c5e477b2c25cfa404f2b7a"
        },
        {
            "name": "0.19.0.post1",
            "sha256": "4b8b4773a98ed7009fe17d9b6ec87ac3ac62b7d14634d7768c190eadc647d576"
        },
        {
            "name": "0.18.0",
            "sha256": "7ffa317e8f8011e0d965a3ef1179e57a049f77019867ed677d49dcc5c0744434"
        },
        {
            "name": "0.17.0",
            "sha256": "424bd9e9ddef6e48cbdee694ce589ec431be8591f15b6cb93cb2b333a29b2c61"
        },
        {
            "name": "0.16.0",
            "sha256": "f23dffa101f43dd91e866a49ebb5f5048be2a24ab8a921a5c07edabde746d9a4"
        }
    ],
    "latest_version": "0.21.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "epsg",
            "default": false,
            "description": "Add support for epsg.io"
        },
        {
            "name": "ows",
            "default": false,
            "description": "Add support for Open Geospatial Consortium (OGC) web service"
        },
        {
            "name": "plotting",
            "default": false,
            "description": "Add plotting functionality"
        }
    ],
    "homepage": "https://scitools.org.uk/cartopy/docs/latest/",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [
        {
            "owner": "builtin.py-cartopy",
            "sha256": "2166d7a25e2be89f63b53e0e8173fe35227de51700564f6e77e999a2ca0a3115",
            "level": 1,
            "working_dir": ".",
            "relative_path": "proj6.patch",
            "version": "@0.17.0"
        }
    ],
    "resources": [],
    "description": "Cartopy - a cartographic python library with matplotlib support.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-setuptools-scm",
            "description": "The blessed package to manage your versions by scm tags."
        },
        {
            "name": "py-setuptools-scm-git-archive",
            "description": "This is a setuptools_scm plugin that adds support for git archives (for\nexample the ones GitHub automatically generates)."
        },
        {
            "name": "geos",
            "description": "GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology\nSuite (JTS). As such, it aims to contain the complete functionality of\nJTS in C++. This includes all the OpenGIS Simple Features for SQL\nspatial predicate functions and spatial operators, as well as specific\nJTS enhanced topology functions."
        },
        {
            "name": "proj",
            "description": "PROJ is a generic coordinate transformation software, that transforms\ngeospatial coordinates from one coordinate reference system (CRS) to\nanother. This includes cartographic projections as well as geodetic\ntransformations."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-matplotlib",
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python."
        },
        {
            "name": "py-shapely",
            "description": "Manipulation and analysis of geometric objects in the Cartesian plane."
        },
        {
            "name": "py-pyshp",
            "description": "The Python Shapefile Library (pyshp) reads and writes ESRI Shapefiles in\npure Python."
        },
        {
            "name": "py-pyproj",
            "description": "Python interface to PROJ (cartographic projections and coordinate\ntransformations library)."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-futures",
            "description": "Backport of the concurrent.futures package from Python 3.2"
        },
        {
            "name": "py-pyepsg",
            "description": "Provides simple access to https://epsg.io/."
        },
        {
            "name": "py-owslib",
            "description": "OWSLib is a Python package for client programming with Open Geospatial\nConsortium (OGC) web service (hence OWS) interface standards, and their\nrelated content models."
        },
        {
            "name": "pil",
            "description": "The Python Imaging Library (PIL) adds image processing capabilities to\nyour Python interpreter. This library supports many file formats, and\nprovides powerful image processing and graphics capabilities."
        },
        {
            "name": "gdal",
            "description": "GDAL: Geospatial Data Abstraction Library. GDAL is a translator library\nfor raster and vector geospatial data formats that is released under an\nMIT style Open Source License by the Open Source Geospatial Foundation.\nAs a library, it presents a single raster abstract data model and single\nvector abstract data model to the calling application for all supported\nformats. It also comes with a variety of useful command line utilities\nfor data translation and processing."
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        }
    ],
    "dependent_to": [
        {
            "name": "py-geoplot",
            "description": "geoplot is a high-level Python geospatial plotting library. It's an\nextension to cartopy and matplotlib which makes mapping easy: like\nseaborn for geospatial."
        },
        {
            "name": "py-arm-pyart",
            "description": "Python ARM Radar Toolkit. A growing collection of weather radar\nalgorithms and utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, processes, and analyse data from\nmany types of weather radars."
        }
    ]
}