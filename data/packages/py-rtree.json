{
    "name": "py-rtree",
    "aliases": [],
    "versions": [
        {
            "name": "1.2.0",
            "sha256": "f5145f7852bf7f95c126fb16bf1a4c2ca9300ae151b07f8a0f7083ea47912675"
        },
        {
            "name": "1.1.0",
            "sha256": "6f8ee504dde5d005b25b08aaf5be0b3404af3ad5fece6e1ddcde35908a798a95"
        },
        {
            "name": "1.0.1",
            "sha256": "222121699c303a64065d849bf7038b1ecabc37b65c7fa340bedb38ef0e805429"
        },
        {
            "name": "1.0.0",
            "sha256": "d0483482121346b093b9a42518d40f921adf445915b7aea307eb26768c839682"
        },
        {
            "name": "0.9.7",
            "sha256": "be8772ca34699a9ad3fb4cfe2cfb6629854e453c10b3328039301bbfc128ca3e"
        },
        {
            "name": "0.8.3",
            "sha256": "6cb9cf3000963ea6a3db777a597baee2bc55c4fc891e4f1967f262cc96148649"
        }
    ],
    "latest_version": "1.2.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/Toblerity/rtree",
    "maintainers": [
        "adamjstewart",
        "hobu"
    ],
    "patches": [],
    "resources": [],
    "description": "R-Tree spatial index for Python GIS.\n",
    "dependencies": [
        {
            "name": "libspatialindex",
            "description": "C++ implementation of R*-tree, an MVR-tree and a TPR-tree with C API."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-trimesh",
            "description": "Import, export, process, analyze and view triangular meshes"
        },
        {
            "name": "py-torchgeo",
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data."
        },
        {
            "name": "py-graphcast",
            "description": "GraphCast: Learning skillful medium-range global weather forecasting."
        }
    ]
}