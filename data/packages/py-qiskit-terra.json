{
    "name": "py-qiskit-terra",
    "aliases": [],
    "versions": [
        {
            "name": "0.23.3",
            "sha256": "8f2f61622c28ad38db95d9bbacb03b9743923581545df08eb5047fa86f4de198"
        },
        {
            "name": "0.22.2",
            "sha256": "efd212cd98479ebedc8cc1f93d4eb8039f21c07bd39a62065b584e02d72e632d"
        },
        {
            "name": "0.18.3",
            "sha256": "8737c8f1f4c6f29ec2fb02d73023f4854a396c33f78f4629a861a3e48fc789cc"
        }
    ],
    "latest_version": "0.23.3",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/Qiskit/qiskit-terra",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "Qiskit is an open-source SDK for working with quantum computers at the\nlevel of extended quantum circuits, operators, and algorithms.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-ply",
            "description": "Python Lex & Yacc."
        },
        {
            "name": "py-sympy",
            "description": "SymPy is a Python library for symbolic mathematics."
        },
        {
            "name": "py-dill",
            "description": "Serialize all of python"
        },
        {
            "name": "py-python-dateutil",
            "description": "Extensions to the standard Python datetime module."
        },
        {
            "name": "py-stevedore",
            "description": "Manage Dynamic Plugins for Python Applications."
        },
        {
            "name": "py-psutil",
            "description": "psutil is a cross-platform library for retrieving information on running\nprocesses and system utilization (CPU, memory, disks, network) in\nPython."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-jsonschema",
            "description": "Jsonschema: An(other) implementation of JSON Schema for Python."
        },
        {
            "name": "py-retworkx",
            "description": "A high performance Python graph library implemented in Rust."
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-fastjsonschema",
            "description": "Fast JSON schema validator for Python."
        },
        {
            "name": "py-python-constraint",
            "description": "Constraint Solving Problem resolver for Python"
        },
        {
            "name": "py-symengine",
            "description": "Python wrappers for SymEngine, a symbolic manipulation library."
        },
        {
            "name": "py-tweedledum",
            "description": "tweedledum is a library for synthesis, compilation, and optimization of\nquantum circuits. The library is written to be scalable up to problem\nsizes in which quantum circuits outperform classical ones. Also, it is\nmeant to be used both independently and alongside established tools."
        },
        {
            "name": "py-setuptools-rust",
            "description": "Setuptools rust extension plugin."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-shared-memory38",
            "description": "Backport of multiprocessing.shared_memory for Python 3.6 and 3.7. Simply\nimport all things from shared_memory to make your code work. Note that\nmultiprocessing.managers.SharedMemoryManager is also included under\nshared_memory package."
        },
        {
            "name": "py-importlib-metadata",
            "description": "Read metadata from Python packages."
        },
        {
            "name": "py-rustworkx",
            "description": "Rustworkx was originally called retworkx and was was created initially\nto be a replacement for qiskit's previous (and current) networkx usage\n(hence the original name). The project was originally started to build a\nfaster directed graph to use as the underlying data structure for the\nDAG at the center of qiskit-terra's transpiler. However, since it's\ninitial introduction the project has grown substantially and now covers\nall applications that need to work with graphs which includes Qiskit."
        },
        {
            "name": "py-singledispatchmethod",
            "description": "Backport of functools.singledispatchmethod to Python 2.7-3.7."
        }
    ],
    "dependent_to": [
        {
            "name": "py-qiskit-aer",
            "description": "Aer is a high performance simulator for quantum circuits that includes\nnoise models"
        },
        {
            "name": "py-qiskit-ibm-provider",
            "description": "Qiskit IBM Quantum Provider for accessing the quantum devices and\nsimulators at IBM"
        },
        {
            "name": "py-qiskit-nature",
            "description": "Qiskit Nature is an open-source framework which supports solving quantum\nmechanical natural science problems using quantum computing algorithms"
        }
    ]
}