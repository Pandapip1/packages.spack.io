{
    "name": "py-nanobind",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "1.5.2",
            "commit": "b0e24d5b0ab0d518317d6b263a257ae72d4d29a2",
            "tag": "v1.5.2"
        },
        {
            "name": "1.5.1",
            "commit": "ec6168d06dbf2ab94c31858223bd1d7617222706",
            "tag": "v1.5.1"
        },
        {
            "name": "1.5.0",
            "commit": "e85a51049db500383808aaa4a77306ff37d96131",
            "tag": "v1.5.0"
        },
        {
            "name": "1.4.0",
            "commit": "05cba0ef85ba2bb68aa115af4b74c30aa2aa7bec",
            "tag": "v1.4.0"
        },
        {
            "name": "1.2.0",
            "commit": "ec9350b805d2fe568f65746fd69225eedc5e37ae",
            "tag": "v1.2.0"
        }
    ],
    "latest_version": "1.5.2",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://nanobind.readthedocs.io",
    "maintainers": [
        "adamjstewart",
        "ma595"
    ],
    "patches": [],
    "resources": [],
    "description": "nanobind -- Seamless operability between C++11 and Python. nanobind is a\nsmall binding library that exposes C++ types in Python and vice versa.\nIt is reminiscent of Boost.Python and pybind11 and uses near-identical\nsyntax. In contrast to these existing tools, nanobind is more efficient:\nbindings compile in a shorter amount of time, produce smaller binaries,\nand have better runtime performance.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-scikit-build",
            "description": "scikit-build is an improved build system generator for CPython\nC/C++/Fortran/Cython extensions. It provides better support for\nadditional compilers, build systems, cross compilation, and locating\ndependencies and their associated build requirements. The scikit-build\npackage is fundamentally just glue between the setuptools Python module\nand CMake."
        },
        {
            "name": "py-cmake",
            "description": "CMake is an open-source, cross-platform family of tools designed to\nbuild, test and package software"
        },
        {
            "name": "py-ninja",
            "description": "Ninja is a small build system with a focus on speed."
        }
    ],
    "dependent_to": []
}