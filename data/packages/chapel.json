{
    "name": "chapel",
    "aliases": [],
    "versions": [
        {
            "name": "main",
            "branch": "main"
        },
        {
            "name": "2.0.1",
            "sha256": "47e1f3789478ea870bd4ecdf52acbe469d171b89b663309325431f3da7c75008"
        },
        {
            "name": "2.0.0",
            "sha256": "a8cab99fd034c7b7229be8d4626ec95cf02072646fb148c74b4f48c460c6059c"
        }
    ],
    "latest_version": "2.0.1",
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "name": "amdgpu_target=none",
            "spec": "+rocm",
            "description": null
        },
        {
            "name": "%gcc@:4",
            "spec": "+cuda ^cuda@11.0:~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@:5",
            "spec": "+cuda ^cuda@11.4:~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@10:",
            "spec": "+cuda ^cuda@:11.0~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@11:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%clang@12:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@10",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@11.2:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%clang@13:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@12:",
            "spec": "+cuda ^cuda@:11.8~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@13:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%clang@17:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@14:",
            "spec": "+cuda ^cuda@:12.4~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%clang@18:",
            "spec": "+cuda ^cuda@:12.4~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%clang@14:",
            "spec": "+cuda ^cuda@:11.7~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%clang@15:",
            "spec": "+cuda ^cuda@:12.0~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%clang@16:",
            "spec": "+cuda ^cuda@:12.1~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%gcc@5:",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:3.4",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:8~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%gcc@7:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%pgi@:14.8",
            "spec": "+cuda ^cuda@:7.0.27~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%pgi@:15.3,15.5:",
            "spec": "+cuda ^cuda@7.5~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%pgi@:16.3",
            "spec": "+cuda ^cuda@8~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%pgi@:15,18:",
            "spec": "+cuda ^cuda@9.0:9.1~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%pgi@:16,19:",
            "spec": "+cuda ^cuda@9.2.88:10.0~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%pgi@:17,20:",
            "spec": "+cuda ^cuda@10.1.105:10.2.89~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%pgi@:17,21:",
            "spec": "+cuda ^cuda@11.0.2:11.1.0~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:3.7,4:",
            "spec": "+cuda ^cuda@8.0:9.0~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:3.7,4.1:",
            "spec": "+cuda ^cuda@9.1~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:3.7,5.1:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:3.7,6.1:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:3.7,7.1:",
            "spec": "+cuda ^cuda@10.1.105~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:3.7,8.1:",
            "spec": "+cuda ^cuda@10.1.105:10.1.243~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:3.2,9:",
            "spec": "+cuda ^cuda@10.2.89~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.3~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-x86_64:",
            "description": null
        },
        {
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:9~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.1.243~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%pgi",
            "spec": "+cuda ^cuda@:8~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%pgi@:16",
            "spec": "+cuda ^cuda@:9.1.185~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%pgi@:17",
            "spec": "+cuda ^cuda@:10~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@4:",
            "spec": "+cuda ^cuda@:9.0.176~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@5:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@6:",
            "spec": "+cuda ^cuda@:9.2~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@7:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@7.1:",
            "spec": "+cuda ^cuda@:10.1.105~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@8.1:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.2~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-ppc64le:",
            "description": null
        },
        {
            "name": "%intel@:11.0",
            "spec": "+cuda ^cuda@:3.1~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@:12.0",
            "spec": "+cuda ^cuda@5.5:~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@:13.0",
            "spec": "+cuda ^cuda@6.0:~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@:13.2",
            "spec": "+cuda ^cuda@6.5:~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@:14.9",
            "spec": "+cuda ^cuda@7:~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@16.0:",
            "spec": "+cuda ^cuda@:8.0.43~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@17.0:",
            "spec": "+cuda ^cuda@:8.0.60~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@18.0:",
            "spec": "+cuda ^cuda@:9.9~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@19.0:",
            "spec": "+cuda ^cuda@:10.0~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@19.1:",
            "spec": "+cuda ^cuda@:10.1~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%intel@19.2:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%xl@:12,17:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%xl@:12,14:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "%xl@:12,14:15,17:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "arch=darwin-None-None",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers",
            "description": null
        },
        {
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools",
            "description": null
        },
        {
            "name": "arch=windows-None-None",
            "spec": "",
            "description": null
        },
        {
            "name": "+rocm",
            "spec": "+cuda",
            "description": "chapel: Chapel must be built with either CUDA or ROCm, not both"
        },
        {
            "name": "+rocm",
            "spec": "@:2.0.0",
            "description": "chapel: ROCm support in spack requires Chapel 2.0.0 or later"
        },
        {
            "name": "comm_substrate=unset",
            "spec": "comm=gasnet",
            "description": "chapel: comm=gasnet requires you to also set comm_substrate= to the appropriate network"
        },
        {
            "name": "^python@3.12:",
            "spec": "@:2.1.0",
            "description": "chapel: Chapel versions prior to 2.1.0 may produce SyntaxWarnings with Python >= 3.12"
        },
        {
            "name": "host_jemalloc=spack",
            "spec": "arch=linux-None-None",
            "description": "chapel: Only bundled jemalloc may be used on Linux systems, see https://chapel-lang.org/docs/usingchapel/chplenv.html#chpl-host-jemalloc"
        },
        {
            "name": "host_jemalloc=bundled",
            "spec": "arch=darwin-None-None",
            "description": "chapel: Only system jemalloc may be used on Darwin (MacOS) systems, see https://chapel-lang.org/docs/usingchapel/chplenv.html#chpl-host-jemalloc"
        },
        {
            "name": "+cuda",
            "spec": "llvm=none",
            "description": "chapel: Cuda support requires building with LLVM"
        },
        {
            "name": "+rocm",
            "spec": "llvm=none",
            "description": "chapel: ROCm support requires building with LLVM"
        }
    ],
    "variants": [
        {
            "name": "rocm",
            "default": false,
            "description": "Enable ROCm support"
        },
        {
            "name": "amdgpu_target",
            "default": "none",
            "description": "AMD GPU architecture"
        },
        {
            "name": "cuda",
            "default": false,
            "description": "Build with CUDA"
        },
        {
            "name": "cuda_arch",
            "default": "none",
            "description": "CUDA architecture"
        },
        {
            "name": "build_system",
            "default": "autotools",
            "description": "Build systems supported by the package"
        },
        {
            "name": "atomics",
            "default": "unset",
            "description": "Select atomics implementation"
        },
        {
            "name": "chpldoc",
            "default": false,
            "description": "Build chpldoc in addition to chpl"
        },
        {
            "name": "developer",
            "default": false,
            "description": "Enable Chapel developer mode"
        },
        {
            "name": "comm",
            "default": "none",
            "description": "Build Chapel with multi-locale support"
        },
        {
            "name": "comm_substrate",
            "default": "unset",
            "description": "Build Chapel with GASNet multi-locale support using the supplied CHPL_COMM_SUBSTRATE"
        },
        {
            "name": "gasnet",
            "default": "bundled",
            "description": "Control the GASNet library version used"
        },
        {
            "name": "gasnet_segment",
            "default": "unset",
            "description": "Build Chapel with multi-locale support using the supplied CHPL_GASNET_SEGMENT"
        },
        {
            "name": "gmp",
            "default": "spack",
            "description": "Build with gmp support"
        },
        {
            "name": "gpu_mem_strategy",
            "default": "array_on_device",
            "description": "The memory allocation strategy for GPU data"
        },
        {
            "name": "host_arch",
            "default": "unset",
            "description": "Host architecture of the build machine"
        },
        {
            "name": "host_jemalloc",
            "default": "unset",
            "description": "Selects between no jemalloc, bundled jemalloc, or spack supplied jemalloc"
        },
        {
            "name": "host_mem",
            "default": "jemalloc",
            "description": "Memory management layer for the chpl compiler"
        },
        {
            "name": "host_platform",
            "default": "unset",
            "description": "Host platform"
        },
        {
            "name": "hwloc",
            "default": "bundled",
            "description": "Build with hwloc support"
        },
        {
            "name": "launcher",
            "default": "unset",
            "description": "Launcher to use for running Chapel programs"
        },
        {
            "name": "lib_pic",
            "default": "none",
            "description": "Build position-independent code suitable for shared libraries"
        },
        {
            "name": "libfabric",
            "default": "unset",
            "description": "When building with ofi support, specify libfabric option"
        },
        {
            "name": "llvm",
            "default": "spack",
            "description": "LLVM backend type. The 'spack' value can use an external source of LLVM or let spack build a version if no LLVM installs were previously detected by 'spack external find'"
        },
        {
            "name": "re2",
            "default": "bundled",
            "description": "Build with re2 support"
        },
        {
            "name": "target_arch",
            "default": "unset",
            "description": "Target architecture for cross compilation"
        },
        {
            "name": "target_cpu",
            "default": "unset",
            "description": "Indicate that the target executable should be specialized to the given architecture when using --specialize (and --fast)."
        },
        {
            "name": "target_platform",
            "default": "unset",
            "description": "Target platform for cross compilation"
        },
        {
            "name": "tasks",
            "default": "qthreads",
            "description": "Select tasking layer for intra-locale parallelism"
        },
        {
            "name": "timers",
            "default": "unset",
            "description": "Select timers implementation"
        },
        {
            "name": "unwind",
            "default": "none",
            "description": "Build with unwind library for stack tracing"
        },
        {
            "name": "curl",
            "default": true,
            "description": "Build with support for the Chapel curl package module"
        },
        {
            "name": "hdf5",
            "default": true,
            "description": "Build with support for the Chapel hdf5 package module"
        },
        {
            "name": "libevent",
            "default": true,
            "description": "Build with support for the Chapel libevent package module"
        },
        {
            "name": "protobuf",
            "default": true,
            "description": "Build with support for the Chapel protobuf package module"
        },
        {
            "name": "ssl",
            "default": true,
            "description": "Build with support for the Chapel ssl package module"
        },
        {
            "name": "yaml",
            "default": true,
            "description": "Build with support for the Chapel yaml package module"
        },
        {
            "name": "zmq",
            "default": true,
            "description": "Build with support for the Chapel zmq package module"
        }
    ],
    "homepage": "https://chapel-lang.org/",
    "maintainers": [
        "arezaii",
        "bonachea"
    ],
    "patches": [
        {
            "owner": "builtin.chapel",
            "sha256": "8b4f06cad11873864699b0abbb13b4156d4c4e988ae8813bb88d5237d62a51a6",
            "level": 1,
            "working_dir": ".",
            "reverse": false,
            "relative_path": "fix_spack_cc_wrapper_in_cray_prgenv.patch",
            "version": "@2.0.0:"
        }
    ],
    "resources": [],
    "description": "Chapel is a modern programming language that is parallel, productive,\nportable, scalable and open-source. The Chapel package comes with many\noptions in the form of variants, most of which can be left unset to\nallow Chapel's built-in scripts to determine the proper values based on\nthe environment.\n",
    "dependencies": [
        {
            "name": "binutils",
            "description": "GNU binutils, which contain the linker, assembler, objdump and others"
        },
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "curl",
            "description": "cURL is an open source command line tool and library for transferring\ndata with URL syntax"
        },
        {
            "name": "doxygen",
            "description": "Doxygen is the de facto standard tool for generating documentation from\nannotated C++ sources, but it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba,\nMicrosoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some\nextent D.."
        },
        {
            "name": "gasnet",
            "description": "GASNet is a language-independent, networking middleware layer that\nprovides network-independent, high-performance communication primitives\nincluding Remote Memory Access (RMA) and Active Messages (AM). It has\nbeen used to implement parallel programming models and libraries such as\nUPC, UPC++, Co-Array Fortran, Legion, Chapel, and many others. The\ninterface is primarily intended as a compilation target and for use by\nruntime library writers (as opposed to end users), and the primary goals\nare high performance, interface portability, and expressiveness.\n***NOTICE***: The GASNet library built by this Spack package is ONLY\nintended for unit-testing purposes, and is generally UNSUITABLE FOR\nPRODUCTION USE. The RECOMMENDED way to build GASNet is as an embedded\nlibrary as configured by the higher-level client runtime package (UPC++,\nLegion, etc), including system-specific configuration."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "gmp",
            "description": "GMP is a free library for arbitrary precision arithmetic, operating on\nsigned integers, rational numbers, and floating-point numbers."
        },
        {
            "name": "gnuconfig",
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files."
        },
        {
            "name": "hdf5",
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data."
        },
        {
            "name": "hip",
            "description": "HIP is a C++ Runtime API and Kernel Language that allows developers to\ncreate portable applications for AMD and NVIDIA GPUs from single source\ncode."
        },
        {
            "name": "hsa-rocr-dev",
            "description": "This repository includes the user mode API nterfaces and libraries\nnecessary for host applications to launch computer kernels to available\nHSA ROCm kernel agents.AMD Heterogeneous System Architecture HSA - Linux\nHSA Runtime for Boltzmann (ROCm) platforms."
        },
        {
            "name": "hwloc",
            "description": "The Hardware Locality (hwloc) software project. The Portable Hardware\nLocality (hwloc) software package provides a portable abstraction\n(across OS, versions, architectures, ...) of the hierarchical topology\nof modern architectures, including NUMA memory nodes, sockets, shared\ncaches, cores and simultaneous multithreading. It also gathers various\nsystem attributes such as cache and memory information as well as the\nlocality of I/O devices such as network interfaces, InfiniBand HCAs or\nGPUs. It primarily aims at helping applications with gathering\ninformation about modern computing hardware so as to exploit it\naccordingly and efficiently."
        },
        {
            "name": "jemalloc",
            "description": "jemalloc is a general purpose malloc(3) implementation that emphasizes\nfragmentation avoidance and scalable concurrency support."
        },
        {
            "name": "libevent",
            "description": "The libevent API provides a mechanism to execute a callback function\nwhen a specific event occurs on a file descriptor or after a timeout has\nbeen reached. Furthermore, libevent also support callbacks due to\nsignals or regular timeouts."
        },
        {
            "name": "libfabric",
            "description": "The Open Fabrics Interfaces (OFI) is a framework focused on exporting\nfabric communication services to applications."
        },
        {
            "name": "libunwind",
            "description": "A portable and efficient C programming interface (API) to determine the\ncall-chain of a program."
        },
        {
            "name": "libyaml",
            "description": "A C library for parsing and emitting YAML."
        },
        {
            "name": "libzmq",
            "description": "The ZMQ networking/concurrency library and core API"
        },
        {
            "name": "llvm",
            "description": "The LLVM Project is a collection of modular and reusable compiler and\ntoolchain technologies. Despite its name, LLVM has little to do with\ntraditional virtual machines, though it does provide helpful libraries\nthat can be used to build them. The name \"LLVM\" itself is not an\nacronym; it is the full name of the project."
        },
        {
            "name": "llvm-amdgpu",
            "description": "Toolkit for the construction of highly optimized compilers, optimizers,\nand run-time environments."
        },
        {
            "name": "m4",
            "description": "GNU M4 is an implementation of the traditional Unix macro processor."
        },
        {
            "name": "openssl",
            "description": "OpenSSL is an open source project that provides a robust, commercial-\ngrade, and full-featured toolkit for the Transport Layer Security (TLS)\nand Secure Sockets Layer (SSL) protocols. It is also a general-purpose\ncryptography library."
        },
        {
            "name": "py-protobuf",
            "description": "Protocol buffers are Google's language-neutral, platform-neutral,\nextensible mechanism for serializing structured data - think XML, but\nsmaller, faster, and simpler. You define how you want your data to be\nstructured once, then you can use special generated source code to\neasily write and read your structured data to and from a variety of data\nstreams and using a variety of languages."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": []
}