{
    "name": "libristra",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master",
            "submodules": false,
            "preferred": true
        },
        {
            "name": "1.0.0",
            "commit": "33235fe0334ca7f1f99b386a90932d9f8e1e71de"
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "Release",
            "description": "The build type to build"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "paraview",
            "default": false,
            "description": "Enable ParaView"
        },
        {
            "name": "shared_lua",
            "default": false,
            "description": "Build with shared lua"
        }
    ],
    "homepage": "https://github.com/laristra/libristra",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": " The ristra library is a set of support utilities for ristra codes,\nincluding simple mathematical operations, physical units, and input\nparsing\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        },
        {
            "name": "lua",
            "description": "The Lua programming language interpreter and library."
        },
        {
            "name": "paraview",
            "description": "ParaView is an open-source, multi-platform data analysis and\nvisualization application. This package includes the Catalyst in-situ\nlibrary for versions 5.7 and greater, othewise use the catalyst package."
        },
        {
            "name": "googletest",
            "description": "Google test framework for C++. Also called gtest."
        }
    ],
    "dependent_to": []
}