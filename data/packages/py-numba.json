{
    "name": "py-numba",
    "aliases": [],
    "versions": [
        {
            "name": "0.56.4",
            "sha256": "32d9fef412c81483d7efe0ceb6cf4d3310fde8b624a9cecca00f790573ac96ee"
        },
        {
            "name": "0.56.0",
            "sha256": "87a647dd4b8fce389869ff71f117732de9a519fe07663d9a02d75724eb8e244d"
        },
        {
            "name": "0.55.2",
            "sha256": "e428d9e11d9ba592849ccc9f7a009003eb7d30612007e365afe743ce7118c6f4"
        },
        {
            "name": "0.55.1",
            "sha256": "03e9069a2666d1c84f93b00dbd716fb8fedde8bb2c6efafa2f04842a46442ea3"
        },
        {
            "name": "0.54.0",
            "sha256": "bad6bd98ab2e41c34aa9c80b8d9737e07d92a53df4f74d3ada1458b0b516ccff"
        },
        {
            "name": "0.51.1",
            "sha256": "1e765b1a41535684bf3b0465c1d0a24dcbbff6af325270c8f4dad924c0940160"
        },
        {
            "name": "0.50.1",
            "sha256": "89e81b51b880f9b18c82b7095beaccc6856fcf84ba29c4f0ced42e4e5748a3a7"
        },
        {
            "name": "0.48.0",
            "sha256": "9d21bc77e67006b5723052840c88cc59248e079a907cc68f1a1a264e1eaba017"
        },
        {
            "name": "0.40.1",
            "sha256": "52d046c13bcf0de79dbfb936874b7228f141b9b8e3447cc35855e9ad3e12aa33"
        }
    ],
    "latest_version": "0.56.4",
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "name": "^llvm@6.0.0",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://numba.pydata.org/",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "NumPy aware dynamic Python compiler using LLVM\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-llvmlite",
            "description": "A lightweight LLVM python binding for writing JIT compilers"
        }
    ],
    "dependent_to": [
        {
            "name": "py-strawberryfields",
            "description": "Open source library for continuous-variable quantum computation"
        },
        {
            "name": "py-instrain",
            "description": "inStrain is python program for analysis of co-occurring genome\npopulations from metagenomes that allows highly accurate genome\ncomparisons, analysis of coverage, microdiversity, and linkage, and\nsensitive SNP detection with gene localization and synonymous non-\nsynonymous identification."
        },
        {
            "name": "py-shap",
            "description": "SHAP (SHapley Additive exPlanations): a unified approach to explain the\noutput of any machine learning model."
        },
        {
            "name": "py-torch-geometric",
            "description": "PyTorch Geometric (PyG) is a geometric deep learning extension library\nfor PyTorch. It consists of various methods for deep learning on graphs\nand other irregular structures, also known as geometric deep learning,\nfrom a variety of published papers. In addition, it consists of an easy-\nto-use mini-batch loader for many small and single giant graphs, multi\ngpu-support, a large number of common benchmark datasets (based on\nsimple interfaces to create your own), and helpful transforms, both for\nlearning on arbitrary graphs as well as on 3D meshes or point clouds."
        },
        {
            "name": "py-scanpy",
            "description": "Scanpy is a scalable toolkit for analyzing single-cell gene expression\ndata built jointly with anndata."
        },
        {
            "name": "py-rmm",
            "description": "RMM: RAPIDS Memory Manager. Achieving optimal performance in GPU-centric\nworkflows frequently requires customizing how host and device memory are\nallocated."
        },
        {
            "name": "py-loompy",
            "description": "Work with Loom files for single-cell RNA-seq data."
        },
        {
            "name": "py-quaternionic",
            "description": "Interpret numpy arrays as quaternionic arrays with numba acceleration"
        },
        {
            "name": "py-glmsingle",
            "description": "A toolbox for accurate single-trial estimates in fMRI time-series data."
        },
        {
            "name": "py-librosa",
            "description": "A python package for music and audio analysis."
        },
        {
            "name": "py-openpmd-viewer",
            "description": "Python visualization tools for openPMD files"
        },
        {
            "name": "octa",
            "description": "OCTA is an integrated simulation system for soft materials."
        },
        {
            "name": "py-mne",
            "description": "MNE python project for MEG and EEG data analysis."
        },
        {
            "name": "heffte",
            "description": "Highly Efficient FFT for Exascale"
        },
        {
            "name": "py-ngs-tools",
            "description": "Reusable tools for working with next-generation sequencing (NGS) data."
        },
        {
            "name": "py-umap-learn",
            "description": "Uniform Manifold Approximation and Projection (UMAP) is a dimension\nreduction technique that can be used for visualisation similarly to\nt-SNE, but also for general non-linear dimension reduction."
        },
        {
            "name": "py-spherical",
            "description": "Evaluate and transform D matrices, 3-j symbols, and (scalar or spin-\nweighted) spherical harmonics"
        },
        {
            "name": "py-netket",
            "description": "NetKet is an open-source project, delivering cutting-edge methods for\nthe study of many-body quantum systems with artificial neural networks\nand machine learning techniques."
        },
        {
            "name": "py-fracridge",
            "description": "Fractional Ridge Regression."
        },
        {
            "name": "py-sparse",
            "description": "This library provides multi-dimensional sparse arrays."
        },
        {
            "name": "py-pynndescent",
            "description": "PyNNDescent is a Python nearest neighbor descent for approximate nearest\nneighbors."
        },
        {
            "name": "py-cudf",
            "description": "Built based on the Apache Arrow columnar memory format, cuDF is a GPU\nDataFrame library for loading, joining, aggregating, filtering, and\notherwise manipulating data."
        },
        {
            "name": "py-pyts",
            "description": "pyts is a Python package for time series classification. It aims to make\ntime series classification easily accessible by providing preprocessing\nand utility tools, and implementations of state-of-the-art algorithms.\nMost of these algorithms transform time series, thus pyts provides\nseveral tools to perform these transformations."
        },
        {
            "name": "py-pylops",
            "description": "Many useful operators, however, do not lend themselves to an explicit\nmatrix representation when used to solve large-scale problems. PyLops\noperators, on the other hand, still represent a matrix and can be\ntreated in a similar way, but do not rely on the explicit creation of a\ndense (or sparse) matrix itself. Conversely, the forward and adjoint\noperators are represented by small pieces of codes that mimic the effect\nof the matrix on a vector or another matrix."
        },
        {
            "name": "py-cuml",
            "description": "cuML is a suite of libraries that implement machine learning algorithms\nand mathematical primitives functions that share compatible APIs with\nother RAPIDS projects."
        },
        {
            "name": "py-thewalrus",
            "description": "A library for the calculation of hafnians, Hermite polynomials and\nGaussian boson sampling."
        },
        {
            "name": "py-resampy",
            "description": "Efficient sample rate conversion in python"
        },
        {
            "name": "py-dask-ml",
            "description": "Scalable Machine Learning with Dask."
        },
        {
            "name": "py-numpy-quaternion",
            "description": "This package creates a quaternion type in python, and further enables\nnumpy to create and manipulate arrays of quaternions. The usual\nalgebraic operations (addition and multiplication) are available, along\nwith numerous properties like norm and various types of distance\nmeasures between two quaternions. There are also additional functions\nlike \"squad\" and \"slerp\" interpolation, and conversions to and from\naxis-angle, matrix, and Euler-angle representations of rotations. The\ncore of the code is written in C for speed."
        },
        {
            "name": "py-ucsf-pyem",
            "description": "UCSF pyem is a collection of Python modules and command-line utilities\nfor electron microscopy of biological samples."
        }
    ]
}