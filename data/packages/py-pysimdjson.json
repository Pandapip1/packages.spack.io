{
    "name": "py-pysimdjson",
    "aliases": [],
    "versions": [
        {
            "name": "4.0.3",
            "sha256": "61900992d7f992b073a8c5f93cafa4af9bfd3209624baa775699b0fdd6f67517"
        },
        {
            "name": "3.2.0",
            "sha256": "643baa0941752367761dbc091bf552bf4ca196cf67bf41ef89c90c2db2ec1477"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "http://github.com/TkTech/pysimdjson",
    "maintainers": [
        "haralmha"
    ],
    "patches": [],
    "resources": [],
    "description": "Python bindings for the simdjson project, a SIMD-accelerated JSON\nparser. If SIMD instructions are unavailable a fallback parser is used,\nmaking pysimdjson safe to use anywhere.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-pybind11",
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection."
        }
    ],
    "dependent_to": [
        {
            "name": "py-pystan",
            "description": "PyStan is a Python interface to Stan, a package for Bayesian inference."
        }
    ]
}