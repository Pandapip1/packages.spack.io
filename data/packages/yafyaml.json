{
    "name": "yafyaml",
    "aliases": [],
    "versions": [
        {
            "name": "main",
            "branch": "main"
        },
        {
            "name": "1.0.5",
            "sha256": "84abad01cdcfe387240844c35e5fb36d5099f657b57a50d5d5909cc567e72200"
        },
        {
            "name": "1.0.4",
            "sha256": "93ba67c87cf96be7ebe479907ca5343251aa48072b2671b8630bd244540096d3"
        },
        {
            "name": "1.0.3",
            "sha256": "cfbc6b6db660c5688e37da56f9f0091e5cafeeaec395c2a038469066c83b0c65"
        },
        {
            "name": "1.0.2",
            "sha256": "1d08d093d0f4331e4019306a3b6cb0b230aed18998692b57931555d6805f3d94"
        },
        {
            "name": "1.0.1",
            "sha256": "706d77c43a9c3d2cbd1030c4bbf6b196ea2e0d84df72b3704035d1b52c408baf"
        },
        {
            "name": "1.0.0",
            "sha256": "19334e924d031445f159602a27a1e6778e8a1bd2ead219accdb397c25706f88e"
        },
        {
            "name": "1.0-beta8",
            "sha256": "0a2ae37f45abaca2e4d8dbc317117eeb08c5652d5d2524f51852d957fd719855"
        },
        {
            "name": "1.0-beta7",
            "sha256": "cf7992818cc2caa86346f6f24c251bcfd96bc68eaacc17da89d997260d9db867"
        },
        {
            "name": "1.0-beta6",
            "sha256": "9d90ffd78ae70e477ed58afa474e214822a3c1a0a86c067ba3e245550108a028"
        },
        {
            "name": "1.0-beta5",
            "sha256": "509487c544f199503b3724c170a6d6cd35c237e8ee23a34e94ee3c056b9e39ee"
        },
        {
            "name": "1.0-beta4",
            "sha256": "42bf9c8517d7867614cc24cc4267c70bbe6f8d62474e22d3552d9cc5aa4fc195"
        },
        {
            "name": "0.5.1",
            "sha256": "7019460314e388b2d556db75d5eb734237a18494f79b921613addb96b7b7ce2f"
        },
        {
            "name": "0.5.0",
            "sha256": "8ac5d41b1020e9311ac87f50dbd61b9f3e3188f3599ce463ad59650208fdb8ad"
        }
    ],
    "latest_version": "1.0.5",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "The build type to build"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        }
    ],
    "homepage": "https://github.com/Goddard-Fortran-Ecosystem/yaFyaml",
    "maintainers": [
        "mathomp4",
        "tclune"
    ],
    "patches": [],
    "resources": [],
    "description": " yet another Fortran (implementation of) YAML There is at least one\nother open source Fortran-based YAML parser. The rationale for this one\nis simply to be compatible with the containers in gFTL. It is not\nintended to be a complete YAML parser, just the subset needed by my own\nprojects.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "gftl-shared",
            "description": "Provides common gFTL containers of Fortran intrinsic types that are\nencountered frequently."
        },
        {
            "name": "gftl",
            "description": "This package generates containers (Vector, Set, Map, ...) with Fortran\ninterfaces. It is essentially a brute force analog of C++ STL. This\npackage, gFTL, provides a mechanism to easily create robust containers\nand associated iterators which can be used within Fortran applications.\nThe primary methods are intended to be as close to their C++ STL analogs\nas possible. We have found that these containers are a powerful\nproductivity multiplier for certain types of software development, and\nhope that others find them to be just as useful. Currently, the\nfollowing three types of containers are provided. * Vector (list) * Set\n* Map (associated array) Contributions of additional containers are very\nmuch welcomed."
        }
    ],
    "dependent_to": [
        {
            "name": "pflogger",
            "description": "A parallel Fortran logger (based on the design of the Python logger)"
        }
    ]
}