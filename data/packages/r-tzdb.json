{
    "name": "r-tzdb",
    "aliases": [],
    "versions": [
        {
            "name": "0.2.0",
            "sha256": "c335905d452b400af7ed54b916b5246cb3f47ede0602911a2bcb25a1cf56d5a9"
        }
    ],
    "build_system": "RPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://github.com/r-lib/tzdb",
    "maintainers": [
        "glennpj"
    ],
    "patches": [],
    "resources": [],
    "description": "Time Zone Database Information. Provides an up-to-date copy of the\nInternet Assigned Numbers Authority (IANA) Time Zone Database. It is\nupdated periodically to reflect changes made by political bodies to time\nzone boundaries, UTC offsets, and daylight saving time rules.\nAdditionally, this package provides a C++ interface for working with the\n'date' library. 'date' provides comprehensive support for working with\ndates and date-times, which this package exposes to make it easier for\nother R packages to utilize. Headers are provided for calendar specific\ncalculations, along with a limited interface for time zone\nmanipulations.\n",
    "dependencies": [
        {
            "name": "r",
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information."
        },
        {
            "name": "r-cpp11",
            "description": "cpp11: A C++11 Interface for R's C Interface Provides a header only,\nC++11 interface to R's C interface. Compared to other approaches 'cpp11'\nstrives to be safe against long jumps from the C API as well as C++\nexceptions, conform to normal R function semantics and supports\ninteraction with 'ALTREP' vectors."
        }
    ],
    "dependent_to": [
        {
            "name": "r-vroom",
            "description": "Read and Write Rectangular Text Data Quickly. The goal of 'vroom' is to\nread and write data (like 'csv', 'tsv' and 'fwf') quickly. When reading\nit uses a quick initial indexing step, then reads the values lazily , so\nonly the data you actually use needs to be read. The writer formats the\ndata in parallel and writes to disk asynchronously from formatting."
        }
    ]
}