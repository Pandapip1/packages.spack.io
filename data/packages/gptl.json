{
    "name": "gptl",
    "aliases": [],
    "versions": [
        {
            "name": "8.0.3",
            "sha256": "334979c6fe78d4ed1b491ec57fb61df7a910c58fd39a3658d03ad89f077a4db6"
        },
        {
            "name": "8.0.2",
            "sha256": "011f153084ebfb52b6bf8f190835d4bae6f6b5c0ad320331356aa47a547bf2b4"
        }
    ],
    "latest_version": "8.0.3",
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "name": "platform=windows",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "pmpi",
            "default": false,
            "description": ""
        },
        {
            "name": "papi",
            "default": false,
            "description": ""
        },
        {
            "name": "nestedomp",
            "default": false,
            "description": ""
        },
        {
            "name": "disable-unwind",
            "default": false,
            "description": ""
        }
    ],
    "homepage": "https://jmrosinski.github.io/GPTL/",
    "maintainers": [
        "edwardhartnett",
        "kgerheiser",
        "Hang-Lei-NOAA",
        " jmrosinski"
    ],
    "patches": [],
    "resources": [],
    "description": " GPTL is a library to instrument C, C++, and Fortran codes for\nperformance analysis and profiling.\n",
    "dependencies": [
        {
            "name": "gnuconfig",
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        }
    ],
    "dependent_to": []
}