{
    "name": "py-ruamel-yaml",
    "aliases": [],
    "versions": [
        {
            "name": "0.17.16",
            "sha256": "1a771fc92d3823682b7f0893ad56cb5a5c87c48e62b5399d6f42c8759a583b33"
        },
        {
            "name": "0.16.10",
            "sha256": "099c644a778bf72ffa00524f78dd0b6476bca94a1da344130f4bf3381ce5b954"
        },
        {
            "name": "0.16.5",
            "sha256": "412a6f5cfdc0525dee6a27c08f5415c7fd832a7afcb7a0ed7319628aed23d408"
        },
        {
            "name": "0.11.7",
            "sha256": "c89363e16c9eafb9354e55d757723efeff8682d05e56b0881450002ffb00a344"
        }
    ],
    "latest_version": "0.17.16",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://sourceforge.net/p/ruamel-yaml/code/ci/default/tree",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": " a YAML parser/emitter that supports roundtrip preservation of comments,\nseq/map flow style, and map key order\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-ruamel-yaml-clib",
            "description": "C version of reader, parser and emitter for ruamel.yaml derived from\nlibyaml."
        }
    ],
    "dependent_to": [
        {
            "name": "py-pykwalify",
            "description": "Python lib/cli for JSON/YAML schema validation"
        },
        {
            "name": "py-dvc",
            "description": "Git for data scientists - manage your code and data together."
        },
        {
            "name": "py-cffconvert",
            "description": "Command line program to validate and convert CITATION.cff files."
        },
        {
            "name": "py-cwl-upgrader",
            "description": "Common Workflow Language standalone document upgrader"
        },
        {
            "name": "py-cwltool",
            "description": "Common workflow language reference implementation"
        },
        {
            "name": "py-python-box",
            "description": "Advanced Python dictionaries with dot notation access Box will\nautomatically make otherwise inaccessible keys safe to access as an\nattribute. You can always pass conversion_box=False to Box to disable\nthat behavior. Also, all new dict and lists added to a Box or BoxList\nobject are converted automatically."
        },
        {
            "name": "py-schema-salad",
            "description": "Schema Annotations for Linked Avro Data (SALAD)"
        },
        {
            "name": "py-gravity",
            "description": "Command-line utilities to assist in managing Galaxy servers"
        },
        {
            "name": "py-bidscoin",
            "description": "Converts and organises raw MRI data-sets according to the Brain Imaging\nData Structure (BIDS)."
        },
        {
            "name": "py-dateparser",
            "description": "dateparser -- python parser for human readable dates"
        },
        {
            "name": "py-jupyter-telemetry",
            "description": "Jupyter Telemetry enables Jupyter Applications to record events and\ntransmit"
        },
        {
            "name": "py-azureml-core",
            "description": "The azureml-core contains functionality for creating and managing: *\nAzure Machine Learning workspaces, experiments and runs; * Machine\nlearning compute respources; * Models, images and web services."
        },
        {
            "name": "py-carputils",
            "description": "The carputils framework for running simulations with the openCARP\nsoftware."
        },
        {
            "name": "singularity-hpc",
            "description": "Local filesystem registry for containers (intended for HPC) using Lmod\nor Environment Modules. Works for users and admins."
        },
        {
            "name": "py-pymatgen",
            "description": "Python Materials Genomics is a robust materials analysis code that\ndefines core object representations for structures and molecules with\nsupport for many electronic structure codes. It is currently the core\nanalysis code powering the Materials Project."
        }
    ]
}