{
    "name": "elsi",
    "aliases": [],
    "versions": [
        {
            "name": "2.2.1",
            "sha256": "5b4b2e8fa4b3b68131fe02cc1803a884039b89a1b1138af474af66453bec0b4d"
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "add_underscore",
            "default": true,
            "description": "Suffix C functions with an underscore"
        },
        {
            "name": "elpa2_kernel",
            "default": "none",
            "description": "ELPA2 Kernel"
        },
        {
            "name": "enable_pexsi",
            "default": false,
            "description": "Enable PEXSI support"
        },
        {
            "name": "enable_sips",
            "default": false,
            "description": "Enable SLEPc-SIPs support"
        },
        {
            "name": "use_external_elpa",
            "default": false,
            "description": "Build ELPA using SPACK"
        },
        {
            "name": "use_external_ntpoly",
            "default": false,
            "description": "Build NTPoly using SPACK"
        },
        {
            "name": "use_external_omm",
            "default": false,
            "description": "Use external libOMM and MatrixSwitch"
        },
        {
            "name": "use_external_superlu",
            "default": false,
            "description": "Use external SuperLU DIST"
        },
        {
            "name": "use_mpi_iallgather",
            "default": true,
            "description": "Use non-blocking collective MPI functions"
        }
    ],
    "homepage": "https://wordpress.elsi-interchange.org/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "ELSI provides a unified interface for electronic structure codes to a\nvariety of eigenvalue solvers.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "blas",
            "description": "AMD Optimized BLIS. BLIS is a portable software framework for\ninstantiating high-performance BLAS-like dense linear algebra libraries.\nThe framework was designed to isolate essential kernels of computation\nthat, when optimized, immediately enable optimized implementations of\nmost of its commonly used and computationally intensive operations."
        },
        {
            "name": "lapack",
            "description": "libFLAME (AMD Optimized version) is a portable library for dense matrix\ncomputations, providing much of the functionality present in Linear\nAlgebra Package (LAPACK). It includes a compatibility layer, FLAPACK,\nwhich includes complete LAPACK implementation. The library provides\nscientific and numerical computing communities with a modern, high-\nperformance dense linear algebra library that is extensible, easy to\nuse, and available under an open source license. libFLAME is a C-only\nimplementation and does not depend on any external FORTRAN libraries\nincluding LAPACK. There is an optional backward compatibility layer,\nlapack2flame that maps LAPACK routine invocations to their corresponding\nnative C implementations in libFLAME. This allows legacy applications to\nstart taking advantage of libFLAME with virtually no changes to their\nsource code. In combination with BLIS library which includes\noptimizations for the AMD EPYC processor family, libFLAME enables\nrunning high performing LAPACK functionalities on AMD platform."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-GDR is an optimized version of the MVAPICH2 MPI library for\nGPU-enabled HPC and Deep Learning Applications. MVAPICH2-GDR is not\ninstallable from source and is only available through a binary mirror.\nIf you do not find the binary you're looking for, send us an email at\nmvapich@cse.ohio-state.edu. The binary mirror url is:\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/spack-\nmirror/mvapich2-gdr/"
        },
        {
            "name": "scalapack",
            "description": "Intel Parallel Studio."
        },
        {
            "name": "elpa",
            "description": "Eigenvalue solvers for Petaflop-Applications (ELPA)"
        },
        {
            "name": "ntpoly",
            "description": "NTPoly - parallel library for computing matrix functions. NTPoly is a\nlibrary for computing the functions of sparse, hermitian matrices based\non polynomial expansions. For sufficiently sparse matrices, most of the\nmatrix functions in NTPoly can be computed in linear time."
        },
        {
            "name": "slepc",
            "description": "Scalable Library for Eigenvalue Problem Computations."
        },
        {
            "name": "petsc",
            "description": "PETSc is a suite of data structures and routines for the scalable\n(parallel) solution of scientific applications modeled by partial\ndifferential equations."
        },
        {
            "name": "superlu-dist",
            "description": "A general purpose library for the direct solution of large, sparse,\nnonsymmetric systems of linear equations on high performance machines."
        }
    ],
    "dependent_to": [
        {
            "name": "dftbplus",
            "description": "DFTB+ is an implementation of the Density Functional based Tight Binding\n(DFTB) method, containing many extensions to the original method."
        }
    ]
}