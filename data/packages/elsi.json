{
    "name": "elsi",
    "aliases": [],
    "versions": [
        {
            "name": "2.2.1",
            "sha256": "5b4b2e8fa4b3b68131fe02cc1803a884039b89a1b1138af474af66453bec0b4d"
        }
    ],
    "latest_version": "2.2.1",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "add_underscore",
            "default": true,
            "description": "Suffix C functions with an underscore"
        },
        {
            "name": "elpa2_kernel",
            "default": "none",
            "description": "ELPA2 Kernel"
        },
        {
            "name": "enable_pexsi",
            "default": false,
            "description": "Enable PEXSI support"
        },
        {
            "name": "enable_sips",
            "default": false,
            "description": "Enable SLEPc-SIPs support"
        },
        {
            "name": "use_external_elpa",
            "default": false,
            "description": "Build ELPA using SPACK"
        },
        {
            "name": "use_external_ntpoly",
            "default": false,
            "description": "Build NTPoly using SPACK"
        },
        {
            "name": "use_external_omm",
            "default": false,
            "description": "Use external libOMM and MatrixSwitch"
        },
        {
            "name": "use_external_superlu",
            "default": false,
            "description": "Use external SuperLU DIST"
        },
        {
            "name": "use_mpi_iallgather",
            "default": true,
            "description": "Use non-blocking collective MPI functions"
        }
    ],
    "homepage": "https://wordpress.elsi-interchange.org/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "ELSI provides a unified interface for electronic structure codes to a\nvariety of eigenvalue solvers.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "blas",
            "description": "CLBlast is a modern, lightweight, performant and tunable OpenCL BLAS\nlibrary written in C++11. It is designed to leverage the full\nperformance potential of a wide variety of OpenCL devices from different\nvendors, including desktop and laptop GPUs, embedded GPUs, and other\naccelerators. CLBlast implements BLAS routines: basic linear algebra\nsubprograms operating on vectors and matrices."
        },
        {
            "name": "lapack",
            "description": "libflame is a portable library for dense matrix computations, providing\nmuch of the functionality present in LAPACK, developed by current and\nformer members of the Science of High-Performance Computing (SHPC) group\nin the Institute for Computational Engineering and Sciences at The\nUniversity of Texas at Austin. libflame includes a compatibility layer,\nlapack2flame, which includes a complete LAPACK implementation."
        },
        {
            "name": "mpi",
            "description": "Virtual package for the Message Passing Interface."
        },
        {
            "name": "scalapack",
            "description": "Intel Math Kernel Library. This package has been replaced by intel-\noneapi-mkl. LICENSE INFORMATION: By downloading and using this software,\nyou agree to the terms and conditions of the software license agreements\nat https://intel.ly/393CijO."
        },
        {
            "name": "elpa",
            "description": "Eigenvalue solvers for Petaflop-Applications (ELPA)"
        },
        {
            "name": "ntpoly",
            "description": "NTPoly - parallel library for computing matrix functions. NTPoly is a\nlibrary for computing the functions of sparse, hermitian matrices based\non polynomial expansions. For sufficiently sparse matrices, most of the\nmatrix functions in NTPoly can be computed in linear time."
        },
        {
            "name": "slepc",
            "description": "Scalable Library for Eigenvalue Problem Computations."
        },
        {
            "name": "petsc",
            "description": "PETSc is a suite of data structures and routines for the scalable\n(parallel) solution of scientific applications modeled by partial\ndifferential equations."
        },
        {
            "name": "superlu-dist",
            "description": "A general purpose library for the direct solution of large, sparse,\nnonsymmetric systems of linear equations on high performance machines."
        }
    ],
    "dependent_to": [
        {
            "name": "dftbplus",
            "description": "DFTB+ is an implementation of the Density Functional based Tight Binding\n(DFTB) method, containing many extensions to the original method."
        }
    ]
}