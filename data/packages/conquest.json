{
    "name": "conquest",
    "aliases": [],
    "versions": [
        {
            "name": "1.2",
            "sha256": "74d974f20ec15ff31d97cd42aae6dbe95288eedfa785896d5872b9ff44ee7ae2"
        },
        {
            "name": "1.1",
            "sha256": "772e058f073cccfee45521aa62bb13192ab07cb2979b6076ddbf21ba22f9ba5d"
        },
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "develop",
            "branch": "develop"
        }
    ],
    "latest_version": "1.2",
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "name": "platform=windows",
            "spec": "build_system=makefile",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "makefile",
            "description": "Build systems supported by the package"
        },
        {
            "name": "openmp",
            "default": false,
            "description": "Build with OpenMP support"
        },
        {
            "name": "mult_kern",
            "default": "default",
            "description": "Matrix multiplication kernel type"
        }
    ],
    "homepage": "http://www.order-n.org/",
    "maintainers": [
        "davidbowler",
        "ilectra",
        "tkoskela"
    ],
    "patches": [],
    "resources": [],
    "description": "CONQUEST is a DFT code designed for large-scale calculations, with\nexcellent parallelisation.\n",
    "dependencies": [
        {
            "name": "blas",
            "description": "XBLAS is a reference implementation for extra precision BLAS. XBLAS is a\nreference implementation for the dense and banded BLAS routines, along\nwith extended and mixed precision version. Extended precision is only\nused internally; input and output arguments remain the same as in the\nexisting BLAS. Extra precisions is implemented as double-double (i.e.,\n128-bit total, 106-bit significand). Mixed precision permits some\ninput/output arguments of different types (mixing real and complex) or\nprecisions (mixing single and double). This implementation is proof of\nconcept, and no attempt was made to optimize performance; performance\nshould be as good as straightforward but careful code written by hand."
        },
        {
            "name": "lapack",
            "description": "libFLAME (AMD Optimized version) is a portable library for dense matrix\ncomputations, providing much of the functionality present in Linear\nAlgebra Package (LAPACK). It includes a compatibility layer, FLAPACK,\nwhich includes complete LAPACK implementation. The library provides\nscientific and numerical computing communities with a modern, high-\nperformance dense linear algebra library that is extensible, easy to\nuse, and available under an open source license. libFLAME is a C-only\nimplementation and does not depend on any external FORTRAN libraries\nincluding LAPACK. There is an optional backward compatibility layer,\nlapack2flame that maps LAPACK routine invocations to their corresponding\nnative C implementations in libFLAME. This allows legacy applications to\nstart taking advantage of libFLAME with virtually no changes to their\nsource code. In combination with BLIS library which includes\noptimizations for the AMD EPYC processor family, libFLAME enables\nrunning high performing LAPACK functionalities on AMD platform.\nLICENSING INFORMATION: By downloading, installing and using this\nsoftware, you agree to the terms and conditions of the AMD AOCL-libFLAME\nlicense agreement. You may obtain a copy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/dense/eula-\nlibflame/libflame-4-1-eula.html\nhttps://www.amd.com/en/developer/aocl/dense/eula-libflame/libflame-\neula.html"
        },
        {
            "name": "scalapack",
            "description": "ScaLAPACK is a library of high-performance linear algebra routines for\nparallel distributed memory machines"
        },
        {
            "name": "fftw-api",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "libxc",
            "description": "Libxc is a library of exchange-correlation functionals for density-\nfunctional theory."
        },
        {
            "name": "mpi",
            "description": "HPE MPI is HPE's implementation of the Message Passing Interface (MPI)\nstandard. Note: HPE MPI is proprietry software. Spack will search your\ncurrent directory for the download file. Alternatively, add this file to\na mirror so that Spack can find it. For instructions on how to set up a\nmirror, see https://spack.readthedocs.io/en/latest/mirrors.html"
        }
    ],
    "dependent_to": []
}