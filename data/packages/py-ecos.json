{
    "name": "py-ecos",
    "aliases": [],
    "versions": [
        {
            "name": "2.0.12",
            "sha256": "f48816d73b87ae325556ea537b7c8743187311403c80e3832035224156337c4e"
        },
        {
            "name": "2.0.7.post1",
            "sha256": "83e90f42b3f32e2a93f255c3cfad2da78dbd859119e93844c45d2fca20bdc758"
        }
    ],
    "latest_version": "2.0.12",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/embotech/ecos",
    "maintainers": [
        "adamjstewart",
        "meyersbs"
    ],
    "patches": [],
    "resources": [],
    "description": "This is the Python package for ECOS: Embedded Cone Solver.\n",
    "dependencies": [
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-qpsolvers",
            "description": "Unified interface to convex Quadratic Programming (QP) solvers available\nin Python."
        },
        {
            "name": "py-cvxpy",
            "description": "Convex optimization, for everyone."
        }
    ]
}