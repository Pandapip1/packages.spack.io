{
    "name": "amdscalapack",
    "aliases": [
        {
            "name": "scalapack",
            "alias_for": "{amdscalapack}"
        }
    ],
    "versions": [
        {
            "name": "3.2",
            "sha256": "9e00979bb1be39d627bdacb01774bc043029840d542fafc934d16fec3e3b0892"
        },
        {
            "name": "3.1",
            "sha256": "4c2ee2c44644a0feec0c6fc1b1a413fa9028f14d7035d43a398f5afcfdbacb98"
        },
        {
            "name": "3.0",
            "sha256": "6e6f3578f44a8e64518d276e7580530599ecfa8729f568303ed2590688e7096f"
        },
        {
            "name": "2.2",
            "sha256": "2d64926864fc6d12157b86e3f88eb1a5205e7fc157bf67e7577d0f18b9a7484c"
        }
    ],
    "latest_version": "3.2",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ilp64",
            "spec": "@:3.0",
            "description": "ILP64 is supported from 3.1 onwards"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "shared",
            "default": true,
            "description": "Build the shared library version"
        },
        {
            "name": "pic",
            "default": false,
            "description": "Build position independent code"
        },
        {
            "name": "ilp64",
            "default": false,
            "description": "Build with ILP64 support"
        }
    ],
    "homepage": "https://developer.amd.com/amd-aocl/scalapack/",
    "maintainers": [
        "amd-toolchain-support"
    ],
    "patches": [
        {
            "owner": "builtin.amdscalapack",
            "sha256": "e8f30dd1f26e523dfb552f8d7b8ad26ac88fc0c8d72e3d4f9a9717a3383e0b33",
            "level": 1,
            "working_dir": ".",
            "relative_path": "cmake_fortran_mangle.patch",
            "version": "@2.0.2:2.0"
        },
        {
            "owner": "builtin.amdscalapack",
            "sha256": "22ebf4e3d5a6356cd6086ea65bfdf30f9d0a2038136127590cd269d15bdb03af",
            "level": 1,
            "working_dir": ".",
            "relative_path": "mpi2-compatibility.patch",
            "version": "@2.0.2:2.0"
        },
        {
            "owner": "builtin.amdscalapack",
            "sha256": "f2baedde688ffe4c20943c334f580eb298e04d6f35c86b90a1f4e8cb7ae344a2",
            "level": 1,
            "working_dir": ".",
            "relative_path": "int_overflow.patch",
            "version": "@2.0.0:2.1.0"
        },
        {
            "owner": "builtin.amdscalapack",
            "sha256": "1c9ce5fee1451a08c2de3cc87f446aeda0b818ebbce4ad0d980ddf2f2a0b2dc4",
            "level": 1,
            "working_dir": ".",
            "relative_path": "gcc10-compatibility.patch",
            "version": "@2.0.0:2.2.0"
        },
        {
            "owner": "builtin.amdscalapack",
            "sha256": "072b006e485f0ca4cba56096912a986e4d3da73aae51c2205928aa5eb842cefd",
            "level": 1,
            "working_dir": ".",
            "url": "https://github.com/Reference-ScaLAPACK/scalapack/commit/d4d0066c041cf19a23f8b3aa62fbcf5f0a33c166.patch?full_index=1",
            "version": "@2.2.0"
        }
    ],
    "resources": [],
    "description": " ScaLAPACK is a library of high-performance linear algebra routines for\nparallel distributed memory machines. It depends on external libraries\nincluding BLAS and LAPACK for Linear Algebra computations. AMD's\noptimized version of ScaLAPACK enables using BLIS and LibFLAME library\nthat have optimized dense matrix functions and solvers for AMD EPYC\nprocessor family CPUs.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-X is the advanced version of the MVAPICH2 MPI library with\nenhanced features (UMR, ODP, DC, Core-Direct, SHARP, XPMEM), OSU INAM\n(InifniBand Network Monitoring and Analysis),PGAS (OpenSHMEM, UPC,\nUPC++, and CAF), and MPI+PGAS programming models with unified\ncommunication runtime. MVAPICH2-X is not installable from source and is\nonly available through a binary mirror. If you do not find the binary\nyou're looking for, send us an email at mvapich@cse.ohio-state.edu. The\nbinary mirror url is: http://mvapich.cse.ohio-\nstate.edu/download/mvapich/spack-mirror/mvapich2x/"
        },
        {
            "name": "lapack",
            "description": "libflame is a portable library for dense matrix computations, providing\nmuch of the functionality present in LAPACK, developed by current and\nformer members of the Science of High-Performance Computing (SHPC) group\nin the Institute for Computational Engineering and Sciences at The\nUniversity of Texas at Austin. libflame includes a compatibility layer,\nlapack2flame, which includes a complete LAPACK implementation."
        },
        {
            "name": "blas",
            "description": "XBLAS is a reference implementation for extra precision BLAS. XBLAS is a\nreference implementation for the dense and banded BLAS routines, along\nwith extended and mixed precision version. Extended precision is only\nused internally; input and output arguments remain the same as in the\nexisting BLAS. Extra precisions is implemented as double-double (i.e.,\n128-bit total, 106-bit significand). Mixed precision permits some\ninput/output arguments of different types (mixing real and complex) or\nprecisions (mixing single and double). This implementation is proof of\nconcept, and no attempt was made to optimize performance; performance\nshould be as good as straightforward but careful code written by hand."
        }
    ],
    "dependent_to": [
        {
            "name": "amd-aocl",
            "description": "AMD Optimizing CPU Libraries (AOCL) - AOCL is a set of numerical\nlibraries tuned specifically for AMD EPYC processor family. They have a\nsimple interface to take advantage of the latest hardware innovations.\nThe tuned implementations of industry standard math libraries enable\nfast development of scientific and high performance computing projects"
        }
    ]
}