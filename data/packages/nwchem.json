{
    "name": "nwchem",
    "aliases": [],
    "versions": [
        {
            "name": "7.2.2",
            "sha256": "6b68e9c12eec38c09d92472bdd1ff130b93c1b5e1f65e4702aa7ee36c80e4af7",
            "url": "https://github.com/nwchemgit/nwchem/releases/download/v7.2.2-release/nwchem-7.2.2-release.revision-74936fb9-srconly.2023-11-03.tar.bz2"
        },
        {
            "name": "7.2.0",
            "sha256": "28ea70947e77886337c84e6fae3bdf88f25f0acfdeaf95e722615779c19f7a7e",
            "url": "https://github.com/nwchemgit/nwchem/releases/download/v7.2.0-release/nwchem-7.2.0-release.revision-d0d141fd-srconly.2023-03-10.tar.bz2"
        },
        {
            "name": "7.0.2",
            "sha256": "9bf913b811b97c8ed51bc5a02bf1c8e18456d0719c0a82b2e71223a596d945a7",
            "url": "https://github.com/nwchemgit/nwchem/releases/download/v7.0.2-release/nwchem-7.0.2-release.revision-b9985dfa-srconly.2020-10-12.tar.bz2"
        }
    ],
    "latest_version": "7.2.2",
    "build_system": "Package",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "generic",
            "description": "Build systems supported by the package"
        },
        {
            "name": "openmp",
            "default": false,
            "description": "Enables OpenMP support"
        },
        {
            "name": "mpipr",
            "default": false,
            "description": "Enables ARMCI with progress rank"
        },
        {
            "name": "fftw3",
            "default": false,
            "description": "Link against the FFTW library"
        },
        {
            "name": "libxc",
            "default": false,
            "description": "Support additional functionals via libxc"
        },
        {
            "name": "elpa",
            "default": false,
            "description": "Enable optimised diagonalisation routines from ELPA"
        }
    ],
    "homepage": "https://nwchemgit.github.io",
    "maintainers": [],
    "patches": [
        {
            "owner": "builtin.nwchem",
            "sha256": "d89d51d173657c4e0d245df7bc77478ff9344e222e77a0f7978ab98f6a17da43",
            "level": 1,
            "working_dir": ".",
            "relative_path": "fj.patch",
            "version": "@7.0.2%fj"
        },
        {
            "owner": "builtin.nwchem",
            "sha256": "235134c148b7b683197cc6dced6e4ccdbfe4b4d2380c3173a2f55f5900ead51d",
            "level": 1,
            "working_dir": ".",
            "relative_path": "fftw_splans.patch",
            "version": "@7.2.0+fftw3"
        }
    ],
    "resources": [],
    "description": "High-performance computational chemistry software\n",
    "dependencies": [
        {
            "name": "blas",
            "description": "Automatically Tuned Linear Algebra Software, generic shared ATLAS is an\napproach for the automatic generation and optimization of numerical\nsoftware. Currently ATLAS supplies optimized versions for the complete\nset of linear algebra kernels known as the Basic Linear Algebra\nSubroutines (BLAS), and a subset of the linear algebra routines in the\nLAPACK library."
        },
        {
            "name": "elpa",
            "description": "Eigenvalue solvers for Petaflop-Applications (ELPA)"
        },
        {
            "name": "fftw-api",
            "description": "FFTW (AMD Optimized version) is a comprehensive collection of fast C\nroutines for computing the Discrete Fourier Transform (DFT) and various\nspecial cases thereof. It is an open-source implementation of the Fast\nFourier transform algorithm. It can compute transforms of real and\ncomplex-values arrays of arbitrary size and dimension. AMD Optimized\nFFTW is the optimized FFTW implementation targeted for AMD CPUs. For\nsingle precision build, please use precision value as float. Example :\nspack install amdfftw precision=float LICENSING INFORMATION: By\ndownloading, installing and using this software, you agree to the terms\nand conditions of the AMD AOCL-FFTW license agreement. You may obtain a\ncopy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/fftw/eula/fftw-\nlibraries-4-1-eula.html\nhttps://www.amd.com/en/developer/aocl/fftw/eula/fftw-libraries-eula.html"
        },
        {
            "name": "lapack",
            "description": "Automatically Tuned Linear Algebra Software, generic shared ATLAS is an\napproach for the automatic generation and optimization of numerical\nsoftware. Currently ATLAS supplies optimized versions for the complete\nset of linear algebra kernels known as the Basic Linear Algebra\nSubroutines (BLAS), and a subset of the linear algebra routines in the\nLAPACK library."
        },
        {
            "name": "libxc",
            "description": "Libxc is a library of exchange-correlation functionals for density-\nfunctional theory."
        },
        {
            "name": "mpi",
            "description": "IBM MPI implementation from Spectrum MPI."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "scalapack",
            "description": "ScaLAPACK is a library of high-performance linear algebra routines for\nparallel distributed memory machines. It depends on external libraries\nincluding BLAS and LAPACK for Linear Algebra computations. AMD's\noptimized version of ScaLAPACK enables using BLIS and LibFLAME library\nthat have optimized dense matrix functions and solvers for AMD EPYC\nprocessor family CPUs. LICENSING INFORMATION: By downloading, installing\nand using this software, you agree to the terms and conditions of the\nAMD AOCL-ScaLAPACK license agreement. You may obtain a copy of this\nlicense agreement from\nhttps://www.amd.com/en/developer/aocl/scalapack/eula/scalapack-\nlibraries-4-1-eula.html\nhttps://www.amd.com/en/developer/aocl/scalapack/eula/scalapack-\nlibraries-eula.html"
        }
    ],
    "dependent_to": []
}