{
    "name": "nwchem",
    "aliases": [],
    "versions": [
        {
            "name": "7.2.0",
            "sha256": "28ea70947e77886337c84e6fae3bdf88f25f0acfdeaf95e722615779c19f7a7e",
            "url": "https://github.com/nwchemgit/nwchem/releases/download/v7.2.0-release/nwchem-7.2.0-release.revision-d0d141fd-srconly.2023-03-10.tar.bz2"
        },
        {
            "name": "7.0.2",
            "sha256": "9bf913b811b97c8ed51bc5a02bf1c8e18456d0719c0a82b2e71223a596d945a7",
            "url": "https://github.com/nwchemgit/nwchem/releases/download/v7.0.2-release/nwchem-7.0.2-release.revision-b9985dfa-srconly.2020-10-12.tar.bz2"
        }
    ],
    "latest_version": "7.2.0",
    "build_system": "Package",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "generic",
            "description": "Build systems supported by the package"
        },
        {
            "name": "openmp",
            "default": false,
            "description": "Enables OpenMP support"
        },
        {
            "name": "mpipr",
            "default": false,
            "description": "Enables ARMCI with progress rank"
        },
        {
            "name": "fftw3",
            "default": false,
            "description": "Link against the FFTW library"
        }
    ],
    "homepage": "https://nwchemgit.github.io",
    "maintainers": [],
    "patches": [
        {
            "owner": "builtin.nwchem",
            "sha256": "d89d51d173657c4e0d245df7bc77478ff9344e222e77a0f7978ab98f6a17da43",
            "level": 1,
            "working_dir": ".",
            "relative_path": "fj.patch",
            "version": "@7.0.2%fj"
        },
        {
            "owner": "builtin.nwchem",
            "sha256": "235134c148b7b683197cc6dced6e4ccdbfe4b4d2380c3173a2f55f5900ead51d",
            "level": 1,
            "working_dir": ".",
            "relative_path": "fftw_splans.patch",
            "version": "@7.2.0"
        }
    ],
    "resources": [],
    "description": "High-performance computational chemistry software\n",
    "dependencies": [
        {
            "name": "blas",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "lapack",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "scalapack",
            "description": "Intel oneAPI Math Kernel Library (Intel oneMKL; formerly Intel Math\nKernel Library or Intel MKL), is a library of optimized math routines\nfor science, engineering, and financial applications. Core math\nfunctions include BLAS, LAPACK, ScaLAPACK, sparse solvers, fast Fourier\ntransforms, and vector math. LICENSE INFORMATION: By downloading and\nusing this software, you agree to the terms and conditions of the\nsoftware license agreements at https://intel.ly/393CijO."
        },
        {
            "name": "fftw-api",
            "description": "Intel oneAPI Math Kernel Library (Intel oneMKL; formerly Intel Math\nKernel Library or Intel MKL), is a library of optimized math routines\nfor science, engineering, and financial applications. Core math\nfunctions include BLAS, LAPACK, ScaLAPACK, sparse solvers, fast Fourier\ntransforms, and vector math. LICENSE INFORMATION: By downloading and\nusing this software, you agree to the terms and conditions of the\nsoftware license agreements at https://intel.ly/393CijO."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": []
}