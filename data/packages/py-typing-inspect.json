{
    "name": "py-typing-inspect",
    "aliases": [],
    "versions": [
        {
            "name": "0.8.0",
            "sha256": "8b1ff0c400943b6145df8119c41c244ca8207f1f10c9c057aeed1560e4806e3d"
        }
    ],
    "latest_version": "0.8.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/ilevkivskyi/typing_inspect",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Runtime inspection utilities for typing module.\n",
    "dependencies": [
        {
            "name": "py-mypy-extensions",
            "description": "Experimental type system extensions for programs checked with the mypy\ntypechecker."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": [
        {
            "name": "py-libcst",
            "description": "A Concrete Syntax Tree (CST) parser and serializer library for Python."
        },
        {
            "name": "py-dataclasses-json",
            "description": "Easily serialize dataclasses to and from JSON."
        },
        {
            "name": "py-sphinx-toolbox",
            "description": "Box of handy tools for Sphinx."
        }
    ]
}