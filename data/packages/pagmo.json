{
    "name": "pagmo",
    "aliases": [],
    "versions": [
        {
            "name": "1.1.7",
            "sha256": "6d8fab89ef9d5d5f30f148225bf9b84b2e5a38997f3d68b85547840e9fd95172"
        }
    ],
    "latest_version": "1.1.7",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "examples",
            "default": false,
            "description": "Build examples"
        },
        {
            "name": "cxx",
            "default": true,
            "description": "Build the C++ interface"
        },
        {
            "name": "python",
            "default": true,
            "description": "Build Python bindings"
        },
        {
            "name": "gsl",
            "default": true,
            "description": "Enable support for GSL minimisers"
        },
        {
            "name": "gtop",
            "default": false,
            "description": "Build GTOP database problems"
        },
        {
            "name": "ipopt",
            "default": false,
            "description": "Enable support for IPOPT minimiser"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Enable support for MPI"
        },
        {
            "name": "nlopt",
            "default": false,
            "description": "Enable support for NLopt minimisers"
        },
        {
            "name": "snopt",
            "default": false,
            "description": "Enable support for SNOPT minimiser"
        },
        {
            "name": "worhp",
            "default": false,
            "description": "Enable support for WORHP minimiser"
        },
        {
            "name": "headers",
            "default": true,
            "description": "Installs the header files"
        },
        {
            "name": "blas",
            "default": true,
            "description": "Enable support for BLAS"
        },
        {
            "name": "scipy",
            "default": true,
            "description": "Enable support for scipy"
        },
        {
            "name": "networkx",
            "default": false,
            "description": "Enable support for networkx"
        },
        {
            "name": "vpython",
            "default": false,
            "description": "Enable support for vpython"
        },
        {
            "name": "pykep",
            "default": false,
            "description": "Enable support for pykep"
        }
    ],
    "homepage": "https://esa.github.io/pagmo/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Parallel Global Multiobjective Optimizer (and its Python alter ego\nPyGMO) is a C++ / Python platform to perform parallel computations of\noptimisation tasks (global and local) via the asynchronous generalized\nisland model.\n",
    "dependencies": [
        {
            "name": "blas",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        },
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "gsl",
            "description": "The GNU Scientific Library (GSL) is a numerical library for C and C++\nprogrammers. It is free software under the GNU General Public License.\nThe library provides a wide range of mathematical routines such as\nrandom number generators, special functions and least-squares fitting.\nThere are over 1000 functions in total with an extensive test suite."
        },
        {
            "name": "ipopt",
            "description": "Ipopt (Interior Point OPTimizer, pronounced eye-pea-Opt) is a software\npackage for large-scale nonlinear optimization."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "py-networkx",
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": []
}