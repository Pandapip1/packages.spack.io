{
    "name": "libvdwxc",
    "aliases": [],
    "versions": [
        {
            "name": "0.4.0",
            "sha256": "3524feb5bb2be86b4688f71653502146b181e66f3f75b8bdaf23dd1ae4a56b33"
        }
    ],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "name": "~mpi",
            "spec": "+pfft",
            "description": "None"
        },
        {
            "name": "^fftw~mpi",
            "spec": "+mpi",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "mpi",
            "default": true,
            "description": "Enable MPI support"
        },
        {
            "name": "pfft",
            "default": false,
            "description": "Enable support for PFFT"
        }
    ],
    "homepage": "https://libvdwxc.gitlab.io/libvdwxc/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Portable C library of density functionals with van der Waals\ninteractions for density functional theory\n",
    "dependencies": [
        {
            "name": "gnuconfig",
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files."
        },
        {
            "name": "fftw-api",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). This package is a wrapper\nfor Cray's version of FFTW. To install this package, list it as an\nexternal package in packages.yaml, and make sure to load the correct\ncray-fftw module. In some cases you need to load cray-mpich before cray-\nfftw."
        },
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "pfft",
            "description": "PFFT is a software library for computing massively parallel, fast\nFourier transformations on distributed memory architectures. PFFT can be\nunderstood as a generalization of FFTW-MPI to multidimensional data\ndecomposition."
        }
    ],
    "dependent_to": [
        {
            "name": "py-gpaw",
            "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation\nenvironment (ASE)."
        },
        {
            "name": "sirius",
            "description": "Domain specific library for electronic structure calculations"
        }
    ]
}