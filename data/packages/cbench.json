{
    "name": "cbench",
    "aliases": [],
    "versions": [
        {
            "name": "1.3.0",
            "sha256": "b40fdafd14869b86819e5906a107b0735290a1e58bae229d8166514a72f58732"
        }
    ],
    "latest_version": "1.3.0",
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "name": "platform=windows",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%cce",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%apple-clang",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%clang",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%nag",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%xl",
            "spec": "",
            "description": "None"
        },
        {
            "name": "%xl_r",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [],
    "homepage": "https://sourceforge.net/projects/cbench/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Cbench is intended as a relatively straightforward toolbox of tests,\nbenchmarks, applications, utilities, and framework to hold them together\nwith the goal to facilitate scalable testing, benchmarking, and analysis\nof a Linux parallel compute cluster.\n",
    "dependencies": [
        {
            "name": "mpi",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "blas",
            "description": "OpenBLAS: An optimized BLAS library"
        },
        {
            "name": "lapack",
            "description": "OpenBLAS: An optimized BLAS library"
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        }
    ],
    "dependent_to": []
}