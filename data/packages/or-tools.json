{
    "name": "or-tools",
    "aliases": [],
    "versions": [
        {
            "name": "7.8",
            "sha256": "d93a9502b18af51902abd130ff5f23768fcf47e266e6d1f34b3586387aa2de68"
        }
    ],
    "latest_version": "7.8",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "coin",
            "default": false,
            "description": "Enable COIN-OR solvers."
        }
    ],
    "homepage": "https://developers.google.com/optimization/",
    "maintainers": [
        "hyoklee"
    ],
    "patches": [],
    "resources": [],
    "description": "This project hosts operations research tools developed at Google and\nmade available as open source under the Apache 2.0 License.\n",
    "dependencies": [
        {
            "name": "abseil-cpp",
            "description": "Abseil Common Libraries (C++)"
        },
        {
            "name": "cbc",
            "description": "Cbc (Coin-or branch and cut) is an open-source mixed integer linear\nprogramming solver written in C++. It can be used as a callable library\nor using a stand-alone executable."
        },
        {
            "name": "cgl",
            "description": "The COIN-OR Cut Generation Library (Cgl) is a collection of cut\ngenerators that can be used with other COIN-OR packages that make use of\ncuts, such as, among others, the linear solver Clp or the mixed integer\nlinear programming solvers Cbc or BCP. Cgl uses the abstract class\nOsiSolverInterface (see Osi) to use or communicate with a solver. It\ndoes not directly call a solver."
        },
        {
            "name": "clp",
            "description": "Clp (Coin-or linear programming) is an open-source linear programming\nsolver written in C++."
        },
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "coinutils",
            "description": "CoinUtils is an open-source collection of classes and helper functions\nthat are generally useful to multiple COIN-OR projects."
        },
        {
            "name": "gflags",
            "description": "The gflags package contains a C++ library that implements commandline\nflags processing. It includes built-in support for standard types such\nas string and the ability to define flags in the source file in which\nthey are used. Online documentation available at:\nhttps://gflags.github.io/gflags/"
        },
        {
            "name": "glog",
            "description": "C++ implementation of the Google logging module."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "osi",
            "description": "Osi (Open Solver Interface) provides an abstract base class to a generic\nlinear programming (LP) solver, along with derived classes for specific\nsolvers. Many applications may be able to use the Osi to insulate\nthemselves from a specific LP solver. That is, programs written to the\nOSI standard may be linked to any solver with an OSI interface and\nshould produce correct results. The OSI has been significantly extended\ncompared to its first incarnation. Currently, the OSI supports linear\nprogramming solvers and has rudimentary support for integer programming."
        },
        {
            "name": "protobuf",
            "description": "Google's data interchange format."
        }
    ],
    "dependent_to": []
}