{
    "name": "gqrx",
    "aliases": [],
    "versions": [
        {
            "name": "2.13.1",
            "sha256": "08b7b930bed00c6ac79330695c24919a9d779112e1a3dd37d22cc9ee38561e82"
        }
    ],
    "latest_version": "2.13.1",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        }
    ],
    "homepage": "https://gqrx.dk/",
    "maintainers": [
        "aweits"
    ],
    "patches": [],
    "resources": [],
    "description": "Gqrx is an open source software defined radio (SDR) receiver implemented\nusing GNU Radio and the Qt GUI toolkit. Currently it works on Linux and\nMac with hardware supported by gr-osmosdr, including Funcube Dongle,\nRTL-SDR, Airspy, HackRF, BladeRF, RFSpace, USRP and SoapySDR. Gqrx can\noperate as an AM/FM/SSB receiver with audio output or as an FFT-only\ninstrument. There are also various hooks for interacting with external\napplication using nertwork sockets.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "gnuradio",
            "description": "GNU Radio is a free & open-source software development toolkit that\nprovides signal processing blocks to implement software radios. It can\nbe used with readily-available, low-cost external RF hardware to create\nsoftware-defined radios, or without hardware in a simulation-like\nenvironment. It is widely used in hobbyist, academic, and commercial\nenvironments to support both wireless communications research and real-\nworld radio systems."
        },
        {
            "name": "pkgconfig",
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility."
        },
        {
            "name": "gr-osmosdr",
            "description": "While primarily being developed for the OsmoSDR hardware, this block as\nwell supports: FunCube Dongle through libgnuradio-fcd, FUNcube Dongle\nPro+ through gr-fcdproplus, sysmocom OsmoSDR Devices through libosmosdr,\nNuand LLC bladeRF through libbladeRF library, Great Scott Gadgets HackRF\nthrough libhackrf, Ettus USRP Devices through Ettus UHD library,\nFairwaves UmTRX through Fairwaves' fork of Ettus' UHD library, RFSPACE\nSDR-IQ, SDR-IP, NetSDR (incl. X2 option), RTL2832U based DVB-T dongles\nthrough librtlsdr, RTL-TCP spectrum server (see librtlsdr project),\nMSi2500 based DVB-T dongles through libmirisdr, SDRplay RSP through\nSDRplay API library, AirSpy R820t dongles through libairspy, gnuradio\n.cfile input through libgnuradio-blocks"
        },
        {
            "name": "qt",
            "description": "Qt is a comprehensive cross-platform C++ application framework."
        },
        {
            "name": "pulseaudio",
            "description": "PulseAudio is a sound system for POSIX OSes, meaning that it is a proxy\nfor your sound applications. PulseAudio is a sound system for POSIX\nOSes, meaning that it is a proxy for your sound applications. It allows\nyou to do advanced operations on your sound data as it passes between\nyour application and your hardware. Things like transferring the audio\nto a different machine, changing the sample format or channel count and\nmixing several sounds into one are easily achieved using a sound server."
        }
    ],
    "dependent_to": []
}