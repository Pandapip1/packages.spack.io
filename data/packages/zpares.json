{
    "name": "zpares",
    "aliases": [],
    "versions": [
        {
            "name": "0.9.6a",
            "sha256": "3c34257d249451b0b984abc985e296ebb73ae5331025f1b8ea08d50301c7cf9a"
        }
    ],
    "build_system": "MakefilePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "mpi",
            "default": false,
            "description": "Activates MPI support"
        },
        {
            "name": "mumps",
            "default": false,
            "description": "Activates MUMPS support"
        }
    ],
    "homepage": "https://zpares.cs.tsukuba.ac.jp/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "z-Pares is designed to compute a few eigenvalues and eigenvectors of\nsparse matrices.\n",
    "dependencies": [
        {
            "name": "mumps",
            "description": "MUMPS: a MUltifrontal Massively Parallel sparse direct Solver"
        },
        {
            "name": "lapack",
            "description": "OpenBLAS: An optimized BLAS library"
        },
        {
            "name": "blas",
            "description": "XBLAS is a reference implementation for extra precision BLAS. XBLAS is a\nreference implementation for the dense and banded BLAS routines, along\nwith extended and mixed precision version. Extended precision is only\nused internally; input and output arguments remain the same as in the\nexisting BLAS. Extra precisions is implemented as double-double (i.e.,\n128-bit total, 106-bit significand). Mixed precision permits some\ninput/output arguments of different types (mixing real and complex) or\nprecisions (mixing single and double). This implementation is proof of\nconcept, and no attempt was made to optimize performance; performance\nshould be as good as straightforward but careful code written by hand."
        },
        {
            "name": "mpi",
            "description": "Mvapich2 is a High-Performance MPI Library for clusters with diverse\nnetworks (InfiniBand, Omni-Path, Ethernet/iWARP, and RoCE) and computing\nplatforms (x86 (Intel and AMD), ARM and OpenPOWER)"
        }
    ],
    "dependent_to": []
}