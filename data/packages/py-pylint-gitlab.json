{
    "name": "py-pylint-gitlab",
    "aliases": [],
    "versions": [
        {
            "name": "2.0.0",
            "tag": "2.0.0"
        }
    ],
    "latest_version": "2.0.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://gitlab.com/smueller18/pylint-gitlab",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "This project provides pylint formatters for a nice integration with\nGitLab CI.\n",
    "dependencies": [
        {
            "name": "py-anybadge",
            "description": "Python project for generating badges for your projects"
        },
        {
            "name": "py-dill",
            "description": "Serialize all of python"
        },
        {
            "name": "py-importlib-metadata",
            "description": "Read metadata from Python packages."
        },
        {
            "name": "py-jinja2",
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-pylint",
            "description": "python code static checker"
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-tomli",
            "description": "Tomli is a Python library for parsing TOML. Tomli is fully compatible\nwith TOML v1.0.0."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-wrapt",
            "description": "Module for decorators, wrappers and monkey patching."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": []
}