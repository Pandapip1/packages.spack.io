{
    "name": "py-fenics-ffcx",
    "aliases": [],
    "versions": [
        {
            "name": "main",
            "branch": "main"
        },
        {
            "name": "0.6.0",
            "sha256": "076fad61d406afffd41019ae1abf6da3f76406c035c772abad2156127667980e"
        },
        {
            "name": "0.5.0.post0",
            "sha256": "039908c9998b51ba53e5deb3a97016062c262f0a4285218644304f7d3cd35882"
        },
        {
            "name": "0.4.2",
            "sha256": "3be6eef064d6ef907245db5b6cc15d4e603762e68b76e53e099935ca91ef1ee4"
        }
    ],
    "latest_version": "0.6.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/FEniCS/ffcx",
    "maintainers": [
        "adamjstewart",
        "chrisrichardson",
        "garth-wells",
        "jhale"
    ],
    "patches": [],
    "resources": [],
    "description": "Next generation FEniCS Form Compiler\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cffi",
            "description": "Foreign Function Interface for Python calling C code"
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-fenics-ufl",
            "description": "The Unified Form Language (UFL) is a domain specific language for\ndeclaration of finite element discretizations of variational forms. More\nprecisely, it defines a flexible interface for choosing finite element\nspaces and defining expressions for weak forms in a notation close to\nmathematical notation."
        },
        {
            "name": "py-fenics-basix",
            "description": "Python interface to Basix, a finite element definition and tabulation\nruntime library"
        }
    ],
    "dependent_to": [
        {
            "name": "py-fenics-dolfinx",
            "description": "Python interface to the next generation FEniCS problem solving\nenvironment"
        }
    ]
}