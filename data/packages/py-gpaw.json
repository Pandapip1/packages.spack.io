{
    "name": "py-gpaw",
    "aliases": [],
    "versions": [
        {
            "name": "21.1.0",
            "sha256": "96843b68e04bd1c12606036c9f99b0ddfa5e6ee08ce46835e6bb347a6bd560a3"
        },
        {
            "name": "20.10.0",
            "sha256": "77c3d3918f5cc118e448f8063af4807d163b31d502067f5cbe31fc756eb3971d"
        },
        {
            "name": "20.1.0",
            "sha256": "c84307eb9943852d78d966c0c8856fcefdefa68621139906909908fb641b8421"
        },
        {
            "name": "19.8.1",
            "sha256": "79dee367d695d68409c4d69edcbad5c8679137d6715da403f6c2500cb2178c2a"
        },
        {
            "name": "1.3.0",
            "sha256": "cf601c69ac496421e36111682bcc1d23da2dba2aabc96be51accf73dea30655c"
        }
    ],
    "latest_version": "21.1.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Build with MPI support"
        },
        {
            "name": "scalapack",
            "default": true,
            "description": "Build with ScaLAPACK support"
        },
        {
            "name": "fftw",
            "default": true,
            "description": "Build with FFTW support"
        },
        {
            "name": "libvdwxc",
            "default": true,
            "description": "Build with libvdwxc support"
        }
    ],
    "homepage": "https://wiki.fysik.dtu.dk/gpaw/index.html",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [
        {
            "owner": "builtin.py-gpaw",
            "sha256": "b43b9b4ec1416cddbe9795a71efcfccf9900da04d3ad5be0d22241e09dd4ab89",
            "level": 1,
            "working_dir": ".",
            "relative_path": "libxc.patch",
            "version": "@1.3.0"
        }
    ],
    "resources": [],
    "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation\nenvironment (ASE).\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "mpi",
            "description": "MVAPICH2-X is the advanced version of the MVAPICH2 MPI library with\nenhanced features (UMR, ODP, DC, Core-Direct, SHARP, XPMEM), OSU INAM\n(InifniBand Network Monitoring and Analysis),PGAS (OpenSHMEM, UPC,\nUPC++, and CAF), and MPI+PGAS programming models with unified\ncommunication runtime. MVAPICH2-X is not installable from source and is\nonly available through a binary mirror. If you do not find the binary\nyou're looking for, send us an email at mvapich@cse.ohio-state.edu. The\nbinary mirror url is: http://mvapich.cse.ohio-\nstate.edu/download/mvapich/spack-mirror/mvapich2x/"
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-ase",
            "description": "The Atomic Simulation Environment (ASE) is a set of tools and Python\nmodules for setting up, manipulating, running, visualizing and analyzing\natomistic simulations."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "libxc",
            "description": "Libxc is a library of exchange-correlation functionals for density-\nfunctional theory."
        },
        {
            "name": "blas",
            "description": "CLBlast is a modern, lightweight, performant and tunable OpenCL BLAS\nlibrary written in C++11. It is designed to leverage the full\nperformance potential of a wide variety of OpenCL devices from different\nvendors, including desktop and laptop GPUs, embedded GPUs, and other\naccelerators. CLBlast implements BLAS routines: basic linear algebra\nsubprograms operating on vectors and matrices."
        },
        {
            "name": "lapack",
            "description": "libFLAME (AMD Optimized version) is a portable library for dense matrix\ncomputations, providing much of the functionality present in Linear\nAlgebra Package (LAPACK). It includes a compatibility layer, FLAPACK,\nwhich includes complete LAPACK implementation. The library provides\nscientific and numerical computing communities with a modern, high-\nperformance dense linear algebra library that is extensible, easy to\nuse, and available under an open source license. libFLAME is a C-only\nimplementation and does not depend on any external FORTRAN libraries\nincluding LAPACK. There is an optional backward compatibility layer,\nlapack2flame that maps LAPACK routine invocations to their corresponding\nnative C implementations in libFLAME. This allows legacy applications to\nstart taking advantage of libFLAME with virtually no changes to their\nsource code. In combination with BLIS library which includes\noptimizations for the AMD EPYC processor family, libFLAME enables\nrunning high performing LAPACK functionalities on AMD platform.\nLICENSING INFORMATION: By downloading, installing and using this\nsoftware, you agree to the terms and conditions of the AMD AOCL-libFLAME\nlicense agreement. You may obtain a copy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/blis/libflame-4-0-eula.html\nhttps://www.amd.com/en/developer/aocl/blis/libflame-eula.html"
        },
        {
            "name": "fftw",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications."
        },
        {
            "name": "scalapack",
            "description": "This is an earlier version of Intel parallel software development tools\nand has now been replaced by the Intel oneAPI Toolkits. LICENSE\nINFORMATION: By downloading and using this software, you agree to the\nterms and conditions of the software license agreements at\nhttps://intel.ly/393CijO."
        },
        {
            "name": "libvdwxc",
            "description": "Portable C library of density functionals with van der Waals\ninteractions for density functional theory"
        }
    ],
    "dependent_to": []
}