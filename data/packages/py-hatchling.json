{
    "name": "py-hatchling",
    "aliases": [],
    "versions": [
        {
            "name": "1.17.0",
            "sha256": "b1244db3f45b4ef5a00106a46612da107cdfaf85f1580b8e1c059fefc98b0930"
        },
        {
            "name": "1.14.0",
            "sha256": "462ea91df03ff5d52813b5613fec1313a1a2059d2e37343e572b3f979867c5da"
        },
        {
            "name": "1.13.0",
            "sha256": "f8d275a2cc720735286b7c2e2bc35da05761e6d3695c2fa416550395f10c53c7"
        },
        {
            "name": "1.10.0",
            "sha256": "5d31f43dffaf6265c808e1b5353662ffa5146d844278b55caa6c7f74f427ec50"
        },
        {
            "name": "1.8.1",
            "sha256": "448b04b23faed669b2b565b998ac955af4feea66c5deed3a1212ac9399d2e1cd"
        },
        {
            "name": "1.4.1",
            "sha256": "13461b42876ade4f75ee5d2a2c656b288ca0aab7f048ef66657ef166996b2118"
        }
    ],
    "latest_version": "1.17.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://hatch.pypa.io/latest/",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "Modern, extensible Python build backend.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-editables",
            "description": "A Python library for creating \"editable wheels\"."
        },
        {
            "name": "py-importlib-metadata",
            "description": "Read metadata from Python packages."
        },
        {
            "name": "py-packaging",
            "description": "Core utilities for Python packages."
        },
        {
            "name": "py-pathspec",
            "description": "pathspec extends the test loading and running features of unittest,\nmaking it easier to write, find and run tests."
        },
        {
            "name": "py-pluggy",
            "description": "Plugin and hook calling mechanisms for python."
        },
        {
            "name": "py-tomli",
            "description": "Tomli is a Python library for parsing TOML. Tomli is fully compatible\nwith TOML v1.0.0."
        },
        {
            "name": "py-trove-classifiers",
            "description": "The trove-classifiers pacakge is the canonical source for classifiers on\nPyPI. Classifiers categorize projects per PEP 301."
        }
    ],
    "dependent_to": [
        {
            "name": "py-jupyter-server-terminals",
            "description": "A Jupyter Server Extension Providing Terminals."
        },
        {
            "name": "py-platformdirs",
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\""
        },
        {
            "name": "py-jupyter-packaging11",
            "description": "Jupyter Packaging Utilities, version 11."
        },
        {
            "name": "py-scikit-build-core",
            "description": "scikit-build-core is a doubly improved build system generator for\nCPython C/C++/Fortran/Cython extensions. It features several\nimprovements over the classic scikit-build build system generator."
        },
        {
            "name": "py-ipykernel",
            "description": "IPython Kernel for Jupyter"
        },
        {
            "name": "py-hatch-requirements-txt",
            "description": "Hatchling plugin to read project dependencies from requirements.txt"
        },
        {
            "name": "py-iniconfig",
            "description": "iniconfig: brain-dead simple parsing of ini files"
        },
        {
            "name": "py-beautifulsoup4",
            "description": "Beautiful Soup is a Python library for pulling data out of HTML and XML\nfiles. It works with your favorite parser to provide idiomatic ways of\nnavigating, searching, and modifying the parse tree."
        },
        {
            "name": "py-uvicorn",
            "description": "The lightning-fast ASGI server."
        },
        {
            "name": "py-notebook-shim",
            "description": "A shim layer for notebook traits and config."
        },
        {
            "name": "py-nbformat",
            "description": "The Jupyter Notebook format"
        },
        {
            "name": "py-starlette",
            "description": "The little ASGI library that shines."
        },
        {
            "name": "py-httpx",
            "description": "HTTPX is a fully featured HTTP client for Python 3, which provides sync\nand async APIs, and support for both HTTP/1.1 and HTTP/2."
        },
        {
            "name": "py-jupyter-client",
            "description": "Jupyter protocol client APIs"
        },
        {
            "name": "pipx",
            "description": "pipx is a tool to install and run Python applications in isolated\nenvironments"
        },
        {
            "name": "py-jupyterlab-server",
            "description": "A set of server components for JupyterLab and JupyterLab like\napplications"
        },
        {
            "name": "py-hepunits",
            "description": "Units and constants in the HEP system of units."
        },
        {
            "name": "py-looseversion",
            "description": "Version numbering for anarchists and software realists."
        },
        {
            "name": "py-traitlets",
            "description": "Traitlets Python config system"
        },
        {
            "name": "py-fastapi",
            "description": "FastAPI framework, high performance, easy to learn, fast to code, ready\nfor production"
        },
        {
            "name": "py-uproot",
            "description": "ROOT I/O in pure Python and NumPy. Uproot is a reader and a writer of\nthe ROOT file format using only Python and Numpy. Unlike the standard\nC++ ROOT implementation, Uproot is only an I/O library, primarily\nintended to stream data into machine learning libraries in Python.\nUnlike PyROOT and root_numpy, Uproot does not depend on C++ ROOT.\nInstead, it uses Numpy to cast blocks of data from the ROOT file as\nNumpy arrays."
        },
        {
            "name": "py-jupyter-server",
            "description": "The Jupyter Server provides the backend (i.e. the core services, APIs,\nand REST endpoints) for Jupyter web applications like Jupyter notebook,\nJupyterLab, and Voila."
        },
        {
            "name": "py-hatch-nodejs-version",
            "description": "Hatch plugin for versioning from a package.json file."
        },
        {
            "name": "py-jupyter-core",
            "description": "Core Jupyter functionality"
        },
        {
            "name": "py-nbconvert",
            "description": "Jupyter Notebook Conversion"
        },
        {
            "name": "py-virtualenv",
            "description": "virtualenv is a tool to create isolated Python environments."
        },
        {
            "name": "py-hatch-jupyter-builder",
            "description": "A hatch plugin to help build Jupyter packages."
        },
        {
            "name": "py-hatch-vcs",
            "description": "Hatch plugin for versioning with your preferred VCS"
        },
        {
            "name": "py-awkward",
            "description": "Manipulate JSON-like data with NumPy-like idioms."
        },
        {
            "name": "py-terminado",
            "description": "Terminals served to term.js using Tornado websockets"
        },
        {
            "name": "py-hatch-fancy-pypi-readme",
            "description": "Fancy PyPI READMEs with Hatch."
        },
        {
            "name": "py-comm",
            "description": "Jupyter Python Comm implementation, for usage in ipykernel, xeus-python\netc."
        },
        {
            "name": "py-pyisemail",
            "description": "pyIsEmail is a no-nonsense approach for checking whether that user-\nsupplied email address could be real."
        },
        {
            "name": "py-einops",
            "description": "Flexible and powerful tensor operations for readable and reliable code.\nSupports numpy, pytorch, tensorflow, and others."
        },
        {
            "name": "py-userpath",
            "description": "Cross-platform tool for adding locations to the user PATH."
        },
        {
            "name": "py-colorama",
            "description": "Cross-platform colored terminal text."
        },
        {
            "name": "py-soupsieve",
            "description": "A modern CSS selector implementation for Beautiful Soup."
        },
        {
            "name": "py-humanize",
            "description": "This modest package contains various common humanization utilities, like\nturning a number into a fuzzy human readable duration ('3 minutes ago')\nor into a human readable size or throughput. It works with python 2.7\nand 3.3 and is localized to Russian, French, Korean and Slovak."
        },
        {
            "name": "py-ipyparallel",
            "description": "IPython's architecture for parallel and distributed computing."
        },
        {
            "name": "py-filelock",
            "description": "A platform-independent file lock for Python. This package contains a\nsingle module, which implements a platform independent file lock in\nPython, which provides a simple way of inter-process communication"
        },
        {
            "name": "py-jsonschema",
            "description": "Jsonschema: An(other) implementation of JSON Schema for Python."
        },
        {
            "name": "py-jupyterlab",
            "description": "JupyterLab is the next-generation web-based user interface for Project\nJupyter."
        },
        {
            "name": "py-nbclient",
            "description": "A client library for executing notebooks. Formally nbconvert's\nExecutePreprocessor."
        },
        {
            "name": "py-attrs",
            "description": "Classes Without Boilerplate"
        },
        {
            "name": "py-jupyter-events",
            "description": "Jupyter Event System library."
        },
        {
            "name": "py-nibabel",
            "description": "Access a multitude of neuroimaging data formats"
        },
        {
            "name": "py-particle",
            "description": "Particle provides a pythonic interface to the Particle Data Group (PDG)\nparticle data tables and particle identification codes, with extended\nparticle information and extra goodies."
        },
        {
            "name": "py-pymdown-extensions",
            "description": "Extensions for Python Markdown."
        },
        {
            "name": "py-nilearn",
            "description": "Statistical learning for neuroimaging in Python."
        },
        {
            "name": "py-formulaic",
            "description": "Formulaic is a high-performance implementation of Wilkinson formulas for\nPython."
        },
        {
            "name": "py-black",
            "description": "Black is the uncompromising Python code formatter. By using it, you\nagree to cede control over minutiae of hand-formatting. In return, Black\ngives you speed, determinism, and freedom from pycodestyle nagging about\nformatting."
        }
    ]
}