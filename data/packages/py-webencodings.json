{
    "name": "py-webencodings",
    "aliases": [],
    "versions": [
        {
            "name": "0.5.1",
            "sha256": "b36a1c245f2d304965eb4e0a82848379241dc04b865afcc4aab16748587e1923"
        }
    ],
    "latest_version": "0.5.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/gsnedders/python-webencodings",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "This is a Python implementation of the WHATWG Encoding standard.\n",
    "dependencies": [
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": [
        {
            "name": "py-html5lib",
            "description": "HTML parser based on the WHATWG HTML specification."
        },
        {
            "name": "py-tinycss2",
            "description": "tinycss2 is a low-level CSS parser and generator written in Python: it\ncan parse strings, return objects representing tokens and blocks, and\ngenerate CSS strings corresponding to these objects."
        },
        {
            "name": "py-cssselect2",
            "description": "cssselect2 is a straightforward implementation of CSS4 Selectors for\nmarkup documents (HTML, XML, etc.) that can be read by ElementTree-like\nparsers (including cElementTree, lxml, html5lib, etc.)"
        },
        {
            "name": "py-bleach",
            "description": "An easy whitelist-based HTML-sanitizing tool."
        }
    ]
}