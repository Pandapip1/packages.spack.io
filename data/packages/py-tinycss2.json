{
    "name": "py-tinycss2",
    "aliases": [],
    "versions": [
        {
            "name": "1.2.1",
            "sha256": "8cff3a8f066c2ec677c06dbc7b45619804a6938478d9d73c284b29d14ecb0627"
        },
        {
            "name": "1.1.1",
            "sha256": "b2e44dd8883c360c35dd0d1b5aad0b610e5156c2cb3b33434634e539ead9d8bf"
        }
    ],
    "latest_version": "1.2.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://www.courtbouillon.org/tinycss2",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "tinycss2 is a low-level CSS parser and generator written in Python: it\ncan parse strings, return objects representing tokens and blocks, and\ngenerate CSS strings corresponding to these objects.\n",
    "dependencies": [
        {
            "name": "py-flit-core",
            "description": "Distribution-building parts of Flit."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-webencodings",
            "description": "This is a Python implementation of the WHATWG Encoding standard."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": [
        {
            "name": "py-cssselect2",
            "description": "cssselect2 is a straightforward implementation of CSS4 Selectors for\nmarkup documents (HTML, XML, etc.) that can be read by ElementTree-like\nparsers (including cElementTree, lxml, html5lib, etc.)"
        },
        {
            "name": "py-cairosvg",
            "description": "CairoSVG is an SVG converter based on Cairo. It can export SVG files to\nPDF, EPS, PS, and PNG files."
        },
        {
            "name": "py-nbconvert",
            "description": "Jupyter Notebook Conversion"
        }
    ]
}