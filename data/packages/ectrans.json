{
    "name": "ectrans",
    "aliases": [],
    "versions": [
        {
            "name": "develop",
            "branch": "develop"
        },
        {
            "name": "main",
            "branch": "main"
        },
        {
            "name": "1.2.0",
            "sha256": "2ee6dccc8bbfcc23faada1d957d141f24e41bb077c1821a7bc2b812148dd336c"
        },
        {
            "name": "1.1.0",
            "sha256": "3c9848bb65033fbe6d791084ee347b3adf71d5dfe6d3c11385000017b6469a3e"
        }
    ],
    "latest_version": "1.2.0",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Use MPI"
        },
        {
            "name": "openmp",
            "default": true,
            "description": "Use OpenMP"
        },
        {
            "name": "double_precision",
            "default": true,
            "description": "Support for double precision"
        },
        {
            "name": "single_precision",
            "default": true,
            "description": "Support for single precision"
        },
        {
            "name": "mkl",
            "default": false,
            "description": "Use MKL"
        },
        {
            "name": "fftw",
            "default": true,
            "description": "Use FFTW"
        },
        {
            "name": "transi",
            "default": true,
            "description": "Compile TransI C-interface to trans"
        }
    ],
    "homepage": "https://github.com/ecmwf-ifs/ectrans",
    "maintainers": [
        "climbfuji"
    ],
    "patches": [],
    "resources": [],
    "description": "Ectrans is the global spherical Harmonics transforms library, extracted\nfrom the IFS. It is using a hybrid of MPI and OpenMP parallelisation\nstrategies. The package contains both single- and double precision\nFortran libraries (trans_sp, trans_dp), as well as a C interface to the\ndouble-precision version (transi_dp).\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "ecbuild",
            "description": "ecBuild is the ECMWF build system. It is built on top of CMake and\nconsists of a set of macros as well as a wrapper around CMake"
        },
        {
            "name": "mpi",
            "description": "MPItrampoline: A forwarding MPI implementation that can use any other\nMPI implementation via an MPI ABI."
        },
        {
            "name": "blas",
            "description": "XBLAS is a reference implementation for extra precision BLAS. XBLAS is a\nreference implementation for the dense and banded BLAS routines, along\nwith extended and mixed precision version. Extended precision is only\nused internally; input and output arguments remain the same as in the\nexisting BLAS. Extra precisions is implemented as double-double (i.e.,\n128-bit total, 106-bit significand). Mixed precision permits some\ninput/output arguments of different types (mixing real and complex) or\nprecisions (mixing single and double). This implementation is proof of\nconcept, and no attempt was made to optimize performance; performance\nshould be as good as straightforward but careful code written by hand."
        },
        {
            "name": "lapack",
            "description": "Intel Math Kernel Library. This package has been replaced by intel-\noneapi-mkl. LICENSE INFORMATION: By downloading and using this software,\nyou agree to the terms and conditions of the software license agreements\nat https://intel.ly/393CijO."
        },
        {
            "name": "fftw-api",
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). This package is a wrapper\nfor Cray's version of FFTW. To install this package, list it as an\nexternal package in packages.yaml, and make sure to load the correct\ncray-fftw module. In some cases you need to load cray-mpich before cray-\nfftw."
        },
        {
            "name": "mkl",
            "description": "Intel Math Kernel Library. This package has been replaced by intel-\noneapi-mkl. LICENSE INFORMATION: By downloading and using this software,\nyou agree to the terms and conditions of the software license agreements\nat https://intel.ly/393CijO."
        },
        {
            "name": "fiat",
            "description": "FIAT (Fortran IFS and Arpege Toolkit) is a collection of selected\nFortran utility libraries, extracted from the IFS/Arpege model."
        }
    ],
    "dependent_to": [
        {
            "name": "ecmwf-atlas",
            "description": "A library for numerical weather prediction and climate modelling."
        }
    ]
}