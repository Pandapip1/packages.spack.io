{
    "name": "bml",
    "aliases": [],
    "versions": [
        {
            "name": "develop",
            "branch": "master"
        },
        {
            "name": "1.3.1",
            "sha256": "17145eda96aa5e550dcbff1ee7ce62b45723af8210b1ab70c5975ec792fa3d13"
        },
        {
            "name": "1.3.0",
            "sha256": "d9465079fe77210eb2af2dcf8ed96802edf5bb76bfbfdbcc97e206c8cd460b07"
        },
        {
            "name": "1.2.3",
            "sha256": "9a2ee6c47d2445bfdb34495497ea338a047e9e4767802af47614d9ff94b0c523"
        },
        {
            "name": "1.2.2",
            "sha256": "89ab78f9fe8395fe019cc0495a1d7b69875b5708069faeb831ddb9a6a9280a8a"
        },
        {
            "name": "1.1.0",
            "sha256": "29162f1f7355ad28b44d3358206ccd3c7ac7794ee13788483abcbd2f8063e7fc"
        }
    ],
    "latest_version": "1.3.1",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+mpi",
            "spec": "@:1.2.2",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "shared",
            "default": true,
            "description": "Build shared libs"
        },
        {
            "name": "mpi",
            "default": true,
            "description": "Build with MPI Support"
        }
    ],
    "homepage": "https://lanl.github.io/bml/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "The basic matrix library (bml) is a collection of various matrix data\nformats (in dense and sparse) and their associated algorithms for basic\nmatrix operations.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "blas",
            "description": "Automatically Tuned Linear Algebra Software, generic shared ATLAS is an\napproach for the automatic generation and optimization of numerical\nsoftware. Currently ATLAS supplies optimized versions for the complete\nset of linear algebra kernels known as the Basic Linear Algebra\nSubroutines (BLAS), and a subset of the linear algebra routines in the\nLAPACK library."
        },
        {
            "name": "lapack",
            "description": "Automatically Tuned Linear Algebra Software, generic shared ATLAS is an\napproach for the automatic generation and optimization of numerical\nsoftware. Currently ATLAS supplies optimized versions for the complete\nset of linear algebra kernels known as the Basic Linear Algebra\nSubroutines (BLAS), and a subset of the linear algebra routines in the\nLAPACK library."
        },
        {
            "name": "mpi",
            "description": "IBM MPI implementation from Spectrum MPI."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "exasp2",
            "description": "ExaSP2 is a reference implementation of typical linear algebra\nalgorithms and workloads for a quantum molecular dynamics (QMD)\nelectronic structure code. The algorithm is based on a recursive second-\norder Fermi-Operator expansion method (SP2) and is tailored for density\nfunctional based tight-binding calculations of material systems. The SP2\nalgorithm variants are part of the Los Alamos Transferable Tight-binding\nfor Energetics (LATTE) code, based on a matrix expansion of the Fermi\noperator in a recursive series of generalized matrix-matrix\nmultiplications. It is created and maintained by Co-Design Center for\nParticle Applications (CoPA). The code is intended to serve as a vehicle\nfor co-design by allowing others to extend and/or reimplement as needed\nto test performance of new architectures, programming models, etc."
        },
        {
            "name": "qmd-progress",
            "description": "PROGRESS: Parallel, Rapid O(N) and Graph-based Recursive Electronic\nStructure Solver. This library is focused on the development of general\nsolvers that are commonly used in quantum chemistry packages."
        }
    ]
}