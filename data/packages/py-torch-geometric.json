{
    "name": "py-torch-geometric",
    "aliases": [],
    "versions": [
        {
            "name": "2.1.0.post1",
            "sha256": "32347402076ccf60fa50312825178f1e3e5ce5e7b3b3a8b2729ac699da24525d"
        },
        {
            "name": "1.6.3",
            "sha256": "347f693bebcc8a621eda4867dafab91c04db5f596d7ed7ecb89b242f8ab5c6a1"
        },
        {
            "name": "1.6.0",
            "sha256": "fbf43fe15421c9affc4fb361ba4db55cb9d3c64d0c29576bb58d332bf6d27fef"
        }
    ],
    "latest_version": "2.1.0.post1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "cuda",
            "default": false,
            "description": "Enable CUDA support"
        }
    ],
    "homepage": "https://github.com/pyg-team/pytorch_geometric",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "PyTorch Geometric (PyG) is a geometric deep learning extension library\nfor PyTorch. It consists of various methods for deep learning on graphs\nand other irregular structures, also known as geometric deep learning,\nfrom a variety of published papers. In addition, it consists of an easy-\nto-use mini-batch loader for many small and single giant graphs, multi\ngpu-support, a large number of common benchmark datasets (based on\nsimple interfaces to create your own), and helpful transforms, both for\nlearning on arbitrary graphs as well as on 3D meshes or point clouds.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-tqdm",
            "description": "A Fast, Extensible Progress Meter"
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-jinja2",
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment."
        },
        {
            "name": "py-requests",
            "description": "Python HTTP for Humans."
        },
        {
            "name": "py-pyparsing",
            "description": "A Python Parsing Module."
        },
        {
            "name": "py-scikit-learn",
            "description": "A set of python modules for machine learning and data mining."
        },
        {
            "name": "py-torch-scatter",
            "description": "This package consists of a small extension library of highly optimized\nsparse update (scatter and segment) operations for the use in PyTorch,\nwhich are missing in the main package."
        },
        {
            "name": "py-torch-sparse",
            "description": "This package consists of a small extension library of optimized sparse\nmatrix operations with autograd support."
        },
        {
            "name": "py-torch-cluster",
            "description": "This package consists of a small extension library of highly optimized\ngraph cluster algorithms for the use in PyTorch."
        },
        {
            "name": "py-torch-spline-conv",
            "description": "This is a PyTorch implementation of the spline-based convolution\noperator of SplineCNN."
        },
        {
            "name": "py-torch",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration."
        },
        {
            "name": "py-pytest-runner",
            "description": "Invoke py.test as distutils command with dependency resolution."
        },
        {
            "name": "py-networkx",
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks."
        },
        {
            "name": "py-python-louvain",
            "description": "This module implements community detection. It uses the louvain method\ndescribed in Fast unfolding of communities in large networks, Vincent D\nBlondel, Jean-Loup Guillaume, Renaud Lambiotte, Renaud Lefebvre, Journal\nof Statistical Mechanics: Theory and Experiment 2008(10), P10008 (12pp)"
        },
        {
            "name": "py-numba",
            "description": "NumPy aware dynamic Python compiler using LLVM"
        },
        {
            "name": "py-pandas",
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage."
        },
        {
            "name": "py-rdflib",
            "description": "RDFLib is a pure Python package for working with RDF. RDFLib contains\nmost things you need to work with RDF, including: parsers and\nserializers for RDF/XML, N3, NTriples, N-Quads, Turtle, TriX, Trig and\nJSON-LD (via a plugin). a Graph interface which can be backed by any one\nof a number of Store implementations store implementations for in-memory\nstorage and persistent storage on top of the Berkeley DB a SPARQL 1.1\nimplementation - supporting SPARQL 1.1 Queries and Update statements"
        },
        {
            "name": "py-googledrivedownloader",
            "description": "Minimal class to download shared files from Google Drive."
        },
        {
            "name": "py-h5py",
            "description": "The h5py package provides both a high- and low-level interface to the\nHDF5 library from Python."
        },
        {
            "name": "py-ase",
            "description": "The Atomic Simulation Environment (ASE) is a set of tools and Python\nmodules for setting up, manipulating, running, visualizing and analyzing\natomistic simulations."
        }
    ],
    "dependent_to": [
        {
            "name": "py-ocp-models",
            "description": "Reference implementation for the MLPerf HPC OpenCatalyst DimeNet++\nbenchmark"
        }
    ]
}