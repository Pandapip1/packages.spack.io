{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "JAX is Autograd and XLA, brought together for high-performance machine\nlearning research. With its updated version of Autograd, JAX can\nautomatically differentiate native Python and NumPy functions. It can\ndifferentiate through loops, branches, recursion, and closures, and it\ncan take derivatives of derivatives of derivatives. It supports reverse-\nmode differentiation (a.k.a. backpropagation) via grad as well as\nforward-mode differentiation, and the two can be composed arbitrarily to\nany order.",
            "name": "py-jax"
        },
        {
            "description": "XLA library for Jax",
            "name": "py-jaxlib"
        },
        {
            "description": "Multi-backend Keras. Keras 3 is a new multi-backend implementation of\nthe Keras API, with support for TensorFlow, JAX, and PyTorch.",
            "name": "py-keras"
        },
        {
            "description": "TensorFlow is an open source machine learning framework for everyone.",
            "name": "py-tensorflow"
        },
        {
            "description": "Read and write large, multi-dimensional arrays.",
            "name": "py-tensorstore"
        }
    ],
    "description": "A stand-alone implementation of several NumPy dtype extensions used in\nmachine learning libraries.\n",
    "homepage": "https://github.com/jax-ml/ml_dtypes",
    "latest_version": "0.4.0",
    "maintainers": [],
    "name": "py-ml-dtypes",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "commit": "9fc7e6773acb66fa496ed8d476a008a489a4da49",
            "name": "0.4.0",
            "tag": "v0.4.0"
        },
        {
            "commit": "bbeedd470ecac727c42e97648c0f27bfc312af30",
            "name": "0.3.1",
            "tag": "v0.3.1"
        },
        {
            "commit": "5b9fc9ad978757654843f4a8d899715dbea30e88",
            "name": "0.2.0",
            "tag": "v0.2.0"
        }
    ]
}