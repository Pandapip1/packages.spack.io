{
    "name": "ntpoly",
    "aliases": [],
    "versions": [
        {
            "name": "3.1.0",
            "sha256": "71cd6827f20c68e384555dbcfc85422d0690e21d21d7b5d4f7375544a2755271"
        },
        {
            "name": "2.3.1",
            "sha256": "af8c7690321607fbdee9671b9cb3acbed945148014e0541435858cf82bfd887e"
        }
    ],
    "latest_version": "3.1.0",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        }
    ],
    "homepage": "https://william-dawson.github.io/NTPoly/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "NTPoly - parallel library for computing matrix functions. NTPoly is a\nlibrary for computing the functions of sparse, hermitian matrices based\non polynomial expansions. For sufficiently sparse matrices, most of the\nmatrix functions in NTPoly can be computed in linear time.\n",
    "dependencies": [
        {
            "name": "blas",
            "description": "XBLAS is a reference implementation for extra precision BLAS. XBLAS is a\nreference implementation for the dense and banded BLAS routines, along\nwith extended and mixed precision version. Extended precision is only\nused internally; input and output arguments remain the same as in the\nexisting BLAS. Extra precisions is implemented as double-double (i.e.,\n128-bit total, 106-bit significand). Mixed precision permits some\ninput/output arguments of different types (mixing real and complex) or\nprecisions (mixing single and double). This implementation is proof of\nconcept, and no attempt was made to optimize performance; performance\nshould be as good as straightforward but careful code written by hand."
        },
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "mpi",
            "description": "An open source Message Passing Interface implementation. The Open MPI\nProject is an open source Message Passing Interface implementation that\nis developed and maintained by a consortium of academic, research, and\nindustry partners. Open MPI is therefore able to combine the expertise,\ntechnologies, and resources from all across the High Performance\nComputing community in order to build the best MPI library available.\nOpen MPI offers advantages for system and software vendors, application\ndevelopers and computer science researchers."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        }
    ],
    "dependent_to": [
        {
            "name": "bigdft-chess",
            "description": "BigDFT-CheSS: A module for performing Fermi Operator Expansions via\nChebyshev Polynomials."
        },
        {
            "name": "elsi",
            "description": "ELSI provides a unified interface for electronic structure codes to a\nvariety of eigenvalue solvers."
        }
    ]
}