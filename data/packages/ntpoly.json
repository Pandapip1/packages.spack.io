{
    "name": "ntpoly",
    "aliases": [],
    "versions": [
        {
            "name": "2.3.1",
            "sha256": "af8c7690321607fbdee9671b9cb3acbed945148014e0541435858cf82bfd887e"
        }
    ],
    "latest_version": "2.3.1",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        }
    ],
    "homepage": "https://william-dawson.github.io/NTPoly/",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "NTPoly - parallel library for computing matrix functions. NTPoly is a\nlibrary for computing the functions of sparse, hermitian matrices based\non polynomial expansions. For sufficiently sparse matrices, most of the\nmatrix functions in NTPoly can be computed in linear time.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "blas",
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications."
        },
        {
            "name": "mpi",
            "description": "Intel MPI Library is a multifabric message-passing library that\nimplements the open-source MPICH specification. Use the library to\ncreate, maintain, and test advanced, complex applications that perform\nbetter on high-performance computing (HPC) clusters based on Intel\nprocessors. LICENSE INFORMATION: By downloading and using this software,\nyou agree to the terms and conditions of the software license agreements\nat https://intel.ly/393CijO."
        }
    ],
    "dependent_to": [
        {
            "name": "elsi",
            "description": "ELSI provides a unified interface for electronic structure codes to a\nvariety of eigenvalue solvers."
        },
        {
            "name": "bigdft-chess",
            "description": "BigDFT-CheSS: A module for performing Fermi Operator Expansions via\nChebyshev Polynomials."
        }
    ]
}