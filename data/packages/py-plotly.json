{
    "name": "py-plotly",
    "aliases": [],
    "versions": [
        {
            "name": "5.14.1",
            "sha256": "bcac86d7fcba3eff7260c1eddc36ca34dae2aded10a0709808446565e0e53b93"
        },
        {
            "name": "5.2.2",
            "sha256": "809f0674a7991daaf4f287964d617d24e9fa44463acd5a5352ebd874cfd98b07"
        },
        {
            "name": "2.2.0",
            "sha256": "ca668911ffb4d11fed6d7fbb12236f8ecc6a7209db192326bcb64bdb41451a58"
        }
    ],
    "latest_version": "5.14.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://plot.ly/python/",
    "maintainers": [
        "adamjstewart",
        "meyersbs",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "An interactive, browser-based graphing library for Python\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-jupyterlab",
            "description": "JupyterLab is the next-generation web-based user interface for Project\nJupyter."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-pytz",
            "description": "World timezone definitions, modern and historical."
        },
        {
            "name": "py-decorator",
            "description": "The aim of the decorator module it to simplify the usage of decorators\nfor the average programmer, and to popularize decorators by showing\nvarious non-trivial examples."
        },
        {
            "name": "py-nbformat",
            "description": "The Jupyter Notebook format"
        },
        {
            "name": "py-requests",
            "description": "Python HTTP for Humans."
        },
        {
            "name": "py-tenacity",
            "description": "Retrying library for Python"
        },
        {
            "name": "py-packaging",
            "description": "Core utilities for Python packages."
        }
    ],
    "dependent_to": [
        {
            "name": "py-kb-python",
            "description": "Python wrapper around kallisto | bustools for scRNA-seq analysis."
        },
        {
            "name": "py-ax-platform",
            "description": "Adaptive experimentation is the machine-learning guided process of\niteratively exploring a (possibly infinite) parameter space in order to\nidentify optimal configurations in a resource-efficient manner. Ax\ncurrently supports Bayesian optimization and bandit optimization as\nexploration strategies. Bayesian optimization in Ax is powered by\nBoTorch, a modern library for Bayesian optimization research built on\nPyTorch."
        },
        {
            "name": "py-deeptools",
            "description": "deepTools addresses the challenge of handling the large amounts of data\nthat are now routinely generated from DNA sequencing centers."
        },
        {
            "name": "py-pymatgen",
            "description": "Python Materials Genomics is a robust materials analysis code that\ndefines core object representations for structures and molecules with\nsupport for many electronic structure codes. It is currently the core\nanalysis code powering the Materials Project."
        },
        {
            "name": "py-chart-studio",
            "description": "Utilities for interfacing with plotly's Chart Studio."
        },
        {
            "name": "py-parsl",
            "description": "Simple data dependent workflows in Python"
        },
        {
            "name": "py-cufflinks",
            "description": "Productivity Tools for Plotly + Pandas. This library binds the power of\nplotly with the flexibility of pandas for easy plotting."
        },
        {
            "name": "py-panaroo",
            "description": "A Bacterial Pangenome Analysis Pipeline"
        }
    ]
}