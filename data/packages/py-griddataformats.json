{
    "name": "py-griddataformats",
    "aliases": [],
    "versions": [
        {
            "name": "1.0.1",
            "sha256": "ad2c9ab7d672a6d8c426de7d083eee4f3e2b0bd59391675d30683c768ab83cc4"
        },
        {
            "name": "0.5.0",
            "sha256": "f317ed60708de22d1b2a76ce89a00f722d903291b1055ff1018d441870c39d69",
            "deprecated": true
        },
        {
            "name": "0.4.1",
            "sha256": "b362662c2dc475e2a3895fe044eaaa9a707bd660fd109a63dac84a47236690a3",
            "deprecated": true
        },
        {
            "name": "0.4.0",
            "sha256": "f81d6b75aa7ebd9e8b64e14558c2d2583a0589829382beb4ef69860110261512",
            "deprecated": true
        },
        {
            "name": "0.3.3",
            "sha256": "938f0efcb3bc2f58ec85048b933942da8a52c134170acc97cb095f09d3698fbd",
            "deprecated": true
        }
    ],
    "latest_version": "1.0.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "http://www.mdanalysis.org/GridDataFormats",
    "maintainers": [
        "RMeli",
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "The gridDataFormats package provides classes to unify reading and\nwriting n-dimensional datasets. One can read grid data from files, make\nthem available as a Grid object, and write out the data again.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-mrcfile",
            "description": "Python implementation of the MRC2014 file format, which is used in\nstructural biology to store image and volume data."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        }
    ],
    "dependent_to": [
        {
            "name": "py-mdanalysis",
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)"
        }
    ]
}