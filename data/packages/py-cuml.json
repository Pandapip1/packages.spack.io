{
    "name": "py-cuml",
    "aliases": [],
    "versions": [
        {
            "name": "0.15.0",
            "sha256": "5c9c656ae4eaa94a426e07d7385fd5ea0e5dc7abff806af2941aee10d4ca99c7"
        }
    ],
    "latest_version": "0.15.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/rapidsai/cuml",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "cuML is a suite of libraries that implement machine learning algorithms\nand mathematical primitives functions that share compatible APIs with\nother RAPIDS projects.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-numba",
            "description": "NumPy aware dynamic Python compiler using LLVM"
        },
        {
            "name": "py-cudf",
            "description": "Built based on the Apache Arrow columnar memory format, cuDF is a GPU\nDataFrame library for loading, joining, aggregating, filtering, and\notherwise manipulating data."
        },
        {
            "name": "cuda",
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details."
        },
        {
            "name": "py-cupy",
            "description": "CuPy is an open-source array library accelerated with NVIDIA CUDA. CuPy\nprovides GPU accelerated computing with Python. CuPy uses CUDA-related\nlibraries including cuBLAS, cuDNN, cuRand, cuSolver, cuSPARSE, cuFFT and\nNCCL to make full use of the GPU architecture."
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "treelite",
            "description": "Treelite is a model compiler for efficient deployment of decision tree\nensembles."
        },
        {
            "name": "py-joblib",
            "description": "Lightweight pipelining with Python functions."
        },
        {
            "name": "py-scikit-learn",
            "description": "A set of python modules for machine learning and data mining."
        },
        {
            "name": "libcumlprims",
            "description": "libcuMLPrims library"
        },
        {
            "name": "libcuml",
            "description": "cuML is a suite of libraries that implement machine learning algorithms\nand mathematical primitives functions that share compatible APIs with\nother RAPIDS projects."
        }
    ],
    "dependent_to": []
}