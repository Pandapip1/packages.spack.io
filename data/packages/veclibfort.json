{
    "name": "veclibfort",
    "aliases": [
        {
            "name": "blas",
            "alias_for": "veclibfort"
        },
        {
            "name": "lapack",
            "alias_for": "veclibfort"
        }
    ],
    "versions": [
        {
            "name": "develop",
            "branch": "master"
        },
        {
            "name": "0.4.3",
            "sha256": "fe9e7e0596bfb4aa713b2273b21e7d96c0d7a6453ee4b214a8a50050989d5586"
        },
        {
            "name": "0.4.2",
            "sha256": "c61316632bffa1c76e3c7f92b11c9def4b6f41973ecf9e124d68de6ae37fbc85"
        }
    ],
    "latest_version": "0.4.3",
    "build_system": "Package",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "generic",
            "description": "Build systems supported by the package"
        },
        {
            "name": "shared",
            "default": true,
            "description": "Build shared libraries as well as static libs."
        }
    ],
    "homepage": "https://github.com/mcg1969/vecLibFort",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.\n",
    "dependencies": [],
    "dependent_to": [
        {
            "name": "elemental",
            "description": "Elemental: Distributed-memory dense and sparse-direct linear algebra and\noptimization library."
        },
        {
            "name": "hydrogen",
            "description": "Hydrogen: Distributed-memory dense and sparse-direct linear algebra and\noptimization library. Based on the Elemental library."
        },
        {
            "name": "xyce",
            "description": "Xyce (rhymes with 'spice') is an open source, SPICE-compatible, high-\nperformance analog circuit simulator, Xyce supports the standard\nanalysis capabilities found in other SPICE-like codes, such as DC,\ntransient, AC, and small-signal noise analyses; it also has less common\ncapabilities, such as harmonic balance, sensitivity analysis, and\nuncertainty propagation techniques. Xyce supplies industry-standard\ncompact models and can support custom models via its Verilog-A model\ncompiler. Foundry process-development kits (PDKs) in other SPICE syntax\ncan be used via the XDM netlist translator, which is included as part of\nthe Xyce package. In addition to supporting use on all common desktop\nplatforms (Mac, Windows, Linux), Xyce can also be compiled to run in a\nlarge-scale parallel mode to provide scalable, numerically accurate\nanalog simulation of circuits containing millions of devices, or more."
        }
    ]
}