{
    "name": "entt",
    "aliases": [],
    "versions": [
        {
            "name": "3.5.2",
            "sha256": "f9271293c44518386c402c9a2188627819748f66302df48af4f6d08e30661036"
        }
    ],
    "latest_version": "3.5.2",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "%apple-clang@:10.1",
            "spec": "",
            "description": "EnTT requires a compiler with support for C++17"
        },
        {
            "name": "%clang@:6",
            "spec": "",
            "description": "EnTT requires a compiler with support for C++17"
        },
        {
            "name": "%gcc@:7.1",
            "spec": "",
            "description": "EnTT requires a compiler with support for C++17"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        }
    ],
    "homepage": "https://entt.docsforge.com",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "EnTT is a header-only, tiny and easy to use library for game programming\nand much more written in modern C++, mainly known for its innovative\nentity-component-system (ECS) model.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "doxygen",
            "description": "Doxygen is the de facto standard tool for generating documentation from\nannotated C++ sources, but it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba,\nMicrosoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some\nextent D.."
        }
    ],
    "dependent_to": []
}