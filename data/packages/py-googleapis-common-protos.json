{
    "name": "py-googleapis-common-protos",
    "aliases": [],
    "versions": [
        {
            "name": "1.58.0",
            "sha256": "c727251ec025947d545184ba17e3578840fc3a24a0516a020479edab660457df"
        },
        {
            "name": "1.55.0",
            "sha256": "53eb313064738f45d5ac634155ae208e121c963659627b90dfcb61ef514c03e1"
        },
        {
            "name": "1.6.0",
            "sha256": "e61b8ed5e36b976b487c6e7b15f31bb10c7a0ca7bd5c0e837f4afab64b53a0c6"
        }
    ],
    "latest_version": "1.58.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "grpc",
            "default": false,
            "description": "Enable support for gRPC Remote Procedure Call framework."
        }
    ],
    "homepage": "https://github.com/googleapis/python-api-common-protos",
    "maintainers": [],
    "patches": [],
    "resources": [],
    "description": "Common protobufs used in Google APIs.\n",
    "dependencies": [
        {
            "name": "py-grpcio",
            "description": "HTTP/2-based RPC framework."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-protobuf",
            "description": "Protocol buffers are Google's language-neutral, platform-neutral,\nextensible mechanism for serializing structured data - think XML, but\nsmaller, faster, and simpler. You define how you want your data to be\nstructured once, then you can use special generated source code to\neasily write and read your structured data to and from a variety of data\nstreams and using a variety of languages."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": [
        {
            "name": "py-tensorflow-metadata",
            "description": "Library and standards for schema and statistics. TensorFlow Metadata\nprovides standard representations for metadata that are useful when\ntraining machine learning models with TensorFlow."
        },
        {
            "name": "py-grpc-google-iam-v1",
            "description": "IAM API client library."
        },
        {
            "name": "py-grpcio-status",
            "description": "Status proto mapping for gRPC."
        },
        {
            "name": "py-google-api-core",
            "description": "Google API client core library."
        },
        {
            "name": "py-google-cloud-audit-log",
            "description": "Google Cloud Audit Protos."
        }
    ]
}