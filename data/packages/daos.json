{
    "name": "daos",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "2.2.0",
            "commit": "d2a1f2790c946659c9398926254e6203fd957b7c",
            "tag": "v2.2.0"
        }
    ],
    "latest_version": "2.2.0",
    "build_system": "SConsPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "scons",
            "description": "Build systems supported by the package"
        },
        {
            "name": "debug",
            "default": false,
            "description": "Enable debugging info and strict compile warnings"
        }
    ],
    "homepage": "https://github.com/daos-stack/daos",
    "maintainers": [
        "hyoklee"
    ],
    "patches": [
        {
            "owner": "builtin.daos",
            "sha256": "072d1141be9b647e8189c104360d8c04b2d738ddfab999762e430adf02a19e7d",
            "level": 1,
            "working_dir": ".",
            "relative_path": "0001-LIBPATH-fix-for-ALT_PREFIX.2.patch",
            "version": "@2.2.0:"
        }
    ],
    "resources": [],
    "description": "The Distributed Asynchronous Object Storage (DAOS) is an open-source\nsoftware-defined object store designed from the ground up for massively\ndistributed Non Volatile Memory (NVM).\n",
    "dependencies": [
        {
            "name": "argobots",
            "description": "Argobots, which was developed as a part of the Argo project, is a\nlightweight runtime system that supports integrated computation and data\nmovement with massive concurrency. It will directly leverage the lowest-\nlevel constructs in the hardware and OS: lightweight notification\nmechanisms, data movement engines, memory mapping, and data placement\nstrategies. It consists of an execution model and a memory model."
        },
        {
            "name": "boost",
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use."
        },
        {
            "name": "cmocka",
            "description": "Unit-testing framework in pure C"
        },
        {
            "name": "go",
            "description": "The golang compiler and build environment"
        },
        {
            "name": "hwloc",
            "description": "The Hardware Locality (hwloc) software project. The Portable Hardware\nLocality (hwloc) software package provides a portable abstraction\n(across OS, versions, architectures, ...) of the hierarchical topology\nof modern architectures, including NUMA memory nodes, sockets, shared\ncaches, cores and simultaneous multithreading. It also gathers various\nsystem attributes such as cache and memory information as well as the\nlocality of I/O devices such as network interfaces, InfiniBand HCAs or\nGPUs. It primarily aims at helping applications with gathering\ninformation about modern computing hardware so as to exploit it\naccordingly and efficiently."
        },
        {
            "name": "isa-l",
            "description": "ISA-L is a collection of optimized low-level functions targeting storage\napplications. ISA-L includes: - Erasure codes - Fast block Reed-Solomon\ntype erasure codes for any encode/decode matrix in GF(2^8). - CRC - Fast\nimplementations of cyclic redundancy check. Six different polynomials\nsupported. iscsi32, ieee32, t10dif, ecma64, iso64, jones64. - Raid -\ncalculate and operate on XOR and P+Q parity found in common RAID\nimplementations. - Compression - Fast deflate-compatible data\ncompression. - De-compression - Fast inflate-compatible data\ncompression."
        },
        {
            "name": "isa-l-crypto",
            "description": "ISA-L_crypto is a collection of optimized low-level functions targeting\nstorage applications. ISA-L_crypto includes: - Multi-buffer hashes - run\nmultiple hash jobs together on one core for much better throughput than\nsingle-buffer versions. + SHA1, SHA256, SHA512, MD5 - Multi-hash - Get\nthe performance of multi-buffer hashing with a single-buffer interface.\n- Multi-hash + murmur - run both together. - AES - block ciphers + XTS,\nGCM, CBC - Rolling hash - Hash input in a window which moves through the\ninput"
        },
        {
            "name": "libfabric",
            "description": "The Open Fabrics Interfaces (OFI) is a framework focused on exporting\nfabric communication services to applications."
        },
        {
            "name": "libfuse",
            "description": "The reference implementation of the Linux FUSE (Filesystem in Userspace)\ninterface"
        },
        {
            "name": "libunwind",
            "description": "A portable and efficient C programming interface (API) to determine the\ncall-chain of a program."
        },
        {
            "name": "libuuid",
            "description": "Portable uuid C library"
        },
        {
            "name": "libyaml",
            "description": "A C library for parsing and emitting YAML."
        },
        {
            "name": "mercury",
            "description": "Mercury is a C library for implementing RPC, optimized for HPC"
        },
        {
            "name": "openssl",
            "description": "OpenSSL is an open source project that provides a robust, commercial-\ngrade, and full-featured toolkit for the Transport Layer Security (TLS)\nand Secure Sockets Layer (SSL) protocols. It is also a general-purpose\ncryptography library."
        },
        {
            "name": "pmdk",
            "description": "The Persistent Memory Development Kit (PMDK), formerly known as NVML, is\na library for using memory-mapped persistence, optimized specifically\nfor persistent memory"
        },
        {
            "name": "protobuf-c",
            "description": "Protocol Buffers implementation in C"
        },
        {
            "name": "py-distro",
            "description": "Distro - an OS platform information API."
        },
        {
            "name": "readline",
            "description": "The GNU Readline library provides a set of functions for use by\napplications that allow users to edit command lines as they are typed\nin. Both Emacs and vi editing modes are available. The Readline library\nincludes additional functions to maintain a list of previously-entered\ncommand lines, to recall and perhaps reedit those lines, and perform\ncsh-like history expansion on previous commands."
        },
        {
            "name": "scons",
            "description": "SCons is a software construction tool"
        },
        {
            "name": "spdk",
            "description": "The Storage Performance Development Kit (SPDK) provides a set of tools\nand libraries for writing high performance, scalable, user-mode storage\napplications. It achieves high performance by moving all of the\nnecessary drivers into userspace and operating in a polled mode instead\nof relying on interrupts, which avoids kernel context switches and\neliminates interrupt handling overhead."
        },
        {
            "name": "ucx",
            "description": "a communication library implementing high-performance messaging for\nMPI/PGAS frameworks"
        }
    ],
    "dependent_to": [
        {
            "name": "mpifileutils",
            "description": "mpiFileUtils is a suite of MPI-based tools to manage large datasets,\nwhich may vary from large directory trees to large files. High-\nperformance computing users often generate large datasets with parallel\napplications that run with many processes (millions in some cases).\nHowever those users are then stuck with single-process tools like cp and\nrm to manage their datasets. This suite provides MPI-based tools to\nhandle typical jobs like copy, remove, and compare for such datasets,\nproviding speedups of up to 20-30x."
        },
        {
            "name": "hdf5-vol-daos",
            "description": "The HDF5 DAOS VOL connector is an external VOL connector that interfaces\nwith the DAOS API"
        }
    ]
}