{
    "name": "py-pylops",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "1.12.0",
            "sha256": "0e9caef46bbef9691acd133cb9b6d13e19510e8682aaa8f4eb15d9bd9ff9ebb6"
        },
        {
            "name": "1.11.1",
            "sha256": "87010358b1119ebe1f8a601b2768d16d7bd26d55bd0c91a6e83db763e5715f7c"
        }
    ],
    "latest_version": "1.12.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "advanced",
            "default": false,
            "description": "Install optional libraries"
        }
    ],
    "homepage": "https://pypi.org/project/pylops/",
    "maintainers": [
        "archxlith"
    ],
    "patches": [],
    "resources": [],
    "description": "Many useful operators, however, do not lend themselves to an explicit\nmatrix representation when used to solve large-scale problems. PyLops\noperators, on the other hand, still represent a matrix and can be\ntreated in a similar way, but do not rely on the explicit creation of a\ndense (or sparse) matrix itself. Conversely, the forward and adjoint\noperators are represented by small pieces of codes that mimic the effect\nof the matrix on a vector or another matrix.\n",
    "dependencies": [
        {
            "name": "py-llvmlite",
            "description": "A lightweight LLVM python binding for writing JIT compilers"
        },
        {
            "name": "py-numba",
            "description": "NumPy aware dynamic Python compiler using LLVM"
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-pyfftw",
            "description": "A pythonic wrapper around FFTW, the FFT library, presenting a unified\ninterface for all the supported transforms."
        },
        {
            "name": "py-pywavelets",
            "description": "PyWavelets is a free Open Source library for wavelet transforms in\nPython"
        },
        {
            "name": "py-scikit-fmm",
            "description": "scikit-fmm is a Python extension module which implements the fast\nmarching method."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-spgl1",
            "description": "SPGL1 is a solver for large-scale one-norm regularized least squares. It\nis designed to solve any of the following three problems: Basis pursuit\ndenoise (BPDN): minimize ||x||_1 subject to ||Ax - b||_2 <= sigma, Basis\npursuit (BP): minimize ||x||_1 subject to Ax = b Lasso: minimize ||Ax -\nb||_2 subject to ||x||_1 <= tau, The matrix A can be defined explicitly,\nor as an operator that returns both both Ax and A'b. SPGL1 can solve\nthese three problems in both the real and complex domains."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "python-venv",
            "description": "A Spack managed Python virtual environment"
        }
    ],
    "dependent_to": []
}