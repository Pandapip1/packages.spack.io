{
    "name": "edm4hep",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "0.8",
            "sha256": "102d57167885eba3bea79f6b6647e5303ad8732c5784590abdcdd816b2411c79"
        },
        {
            "name": "0.7.2",
            "sha256": "e289280d5de2c0a3b542bf9dfe04b9f6471b0a0fcf33f5c8101ea7252e2a7643"
        },
        {
            "name": "0.7.1",
            "sha256": "82e215a532f548a73a6f6094eaa8b436c553994e135f6d63a674543dc89a9f1b"
        },
        {
            "name": "0.7",
            "sha256": "0cef3f06d86c13e87e3343ac9d5db0b3087c421e8bda4bd2623858acb1af60c9"
        },
        {
            "name": "0.6",
            "sha256": "625a5a939cb8d7a0a6ab5874a3e076d7dd5338446be3921b0cbc09de4d96b315"
        },
        {
            "name": "0.5",
            "sha256": "aae4f001412d57585751d858999fe78e004755aa0303a503d503a325ef97d7e0"
        },
        {
            "name": "0.4.2",
            "sha256": "5f2ff3a14729cbd4da370c7c768c2a09eb9f68f814d61690b1cc99c4248994f4",
            "deprecated": true
        },
        {
            "name": "0.4.1",
            "sha256": "122987fd5969b0f1639afa9668ac5181203746d00617ddb3bf8a2a9842758a63",
            "deprecated": true
        },
        {
            "name": "0.4",
            "sha256": "bcb729cd4a6f5917b8f073364fc950788111e178dd16b7e5218361f459c92a24",
            "deprecated": true
        },
        {
            "name": "0.3.2",
            "sha256": "b6a28649a4ba9ec1c4423bd1397b0a810ca97374305c4856186b506e4c00f769",
            "deprecated": true
        },
        {
            "name": "0.3.1",
            "sha256": "eeec38fe7d72d2a72f07a63dca0a34ca7203727f67869c0abf6bef014b8b319b",
            "deprecated": true
        },
        {
            "name": "0.3",
            "sha256": "d0ad8a486c3ed1659ea97d47b268fe56718fdb389b5935f23ba93804e4d5fbc5",
            "deprecated": true
        }
    ],
    "latest_version": "0.8",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "cxxstd",
            "default": "17",
            "description": "Use the specified C++ standard when building."
        }
    ],
    "homepage": "https://github.com/key4hep/EDM4hep",
    "maintainers": [
        "jmcarcell",
        "vvolkl"
    ],
    "patches": [
        {
            "owner": "builtin.edm4hep",
            "sha256": "1f0b90c3f32e0a27e76405c2af58136d453ea2ec52dc939b2c3c2f0c7379a8ba",
            "level": 1,
            "working_dir": ".",
            "relative_path": "test-deps.patch",
            "version": "@:0.3.2"
        }
    ],
    "resources": [],
    "description": "Event data model of Key4hep.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "root",
            "description": "ROOT is a data analysis framework."
        },
        {
            "name": "nlohmann-json",
            "description": "JSON for Modern C++"
        },
        {
            "name": "podio",
            "description": "PODIO, or plain-old-data I/O, is a C++ library to support the creation\nand handling of data models in particle physics."
        },
        {
            "name": "py-jinja2",
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment."
        },
        {
            "name": "py-pyyaml",
            "description": "PyYAML is a YAML parser and emitter for Python."
        },
        {
            "name": "hepmc",
            "description": "The HepMC package is an object oriented, C++ event record for High\nEnergy Physics Monte Carlo generators and simulation."
        },
        {
            "name": "hepmc3",
            "description": "The HepMC package is an object oriented, C++ event record for High\nEnergy Physics Monte Carlo generators and simulation."
        },
        {
            "name": "heppdt",
            "description": "The HepPID library contains translation methods for particle ID's to and\nfrom various Monte Carlo generators and the PDG standard numbering\nscheme. We realize that the generators adhere closely to the standard,\nbut there are occasional differences."
        },
        {
            "name": "catch2",
            "description": "Catch2 is a multi-paradigm test framework for C++, which also supports\nObjective-C (and maybe C)."
        }
    ],
    "dependent_to": [
        {
            "name": "acts",
            "description": "A Common Tracking Software (Acts) This project contains an experiment-\nindependent set of track reconstruction tools. The main philosophy is to\nprovide high-level track reconstruction modules that can be used for any\ntracking detector. The description of the tracking detector's geometry\nis optimized for efficient navigation and quick extrapolation of tracks.\nConverters for several common geometry description languages exist.\nHaving a highly performant, yet largely customizable implementation of\ntrack reconstruction algorithms was a primary objective for the design\nof this toolset. Additionally, the applicability to real-life HEP\nexperiments plays major role in the development process. Apart from\nalgorithmic code, this project also provides an event data model for the\ndescription of track parameters and measurements. Key features of this\nproject include: tracking geometry description which can be constructed\nfrom TGeo, DD4Hep, or GDML input, simple and efficient event data model,\nperformant and highly flexible algorithms for track propagation and\nfitting, basic seed finding algorithms."
        },
        {
            "name": "dd4hep",
            "description": "DD4hep is a software framework for providing a complete solution for\nfull detector description (geometry, materials, visualization, readout,\nalignment, calibration, etc.) for the full experiment life cycle\n(detector concept development, detector optimization, construction,\noperation). It offers a consistent description through a single source\nof detector information for simulation, reconstruction, analysis, etc.\nIt distributed under the LGPLv3 License."
        }
    ]
}