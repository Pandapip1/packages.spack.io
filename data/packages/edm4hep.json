{
    "name": "edm4hep",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "0.4.1",
            "sha256": "122987fd5969b0f1639afa9668ac5181203746d00617ddb3bf8a2a9842758a63"
        },
        {
            "name": "0.4",
            "sha256": "bcb729cd4a6f5917b8f073364fc950788111e178dd16b7e5218361f459c92a24"
        },
        {
            "name": "0.3.2",
            "sha256": "b6a28649a4ba9ec1c4423bd1397b0a810ca97374305c4856186b506e4c00f769"
        },
        {
            "name": "0.3.1",
            "sha256": "eeec38fe7d72d2a72f07a63dca0a34ca7203727f67869c0abf6bef014b8b319b"
        },
        {
            "name": "0.3",
            "sha256": "d0ad8a486c3ed1659ea97d47b268fe56718fdb389b5935f23ba93804e4d5fbc5"
        }
    ],
    "latest_version": "0.4",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+ipo",
            "spec": "^cmake@:3.8",
            "description": "+ipo is not supported by CMake < 3.9"
        }
    ],
    "variants": [
        {
            "name": "build_type",
            "default": "RelWithDebInfo",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "cxxstd",
            "default": "17",
            "description": "Use the specified C++ standard when building."
        }
    ],
    "homepage": "https://github.com/key4hep/EDM4hep",
    "maintainers": [
        "vvolkl"
    ],
    "patches": [
        {
            "owner": "builtin.edm4hep",
            "sha256": "1f0b90c3f32e0a27e76405c2af58136d453ea2ec52dc939b2c3c2f0c7379a8ba",
            "level": 1,
            "working_dir": ".",
            "relative_path": "test-deps.patch",
            "version": "@:0.3.2"
        }
    ],
    "resources": [],
    "description": "Event data model of Key4hep.\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "root",
            "description": "ROOT is a data analysis framework."
        },
        {
            "name": "podio",
            "description": "PODIO, or plain-old-data I/O, is a C++ library to support the creation\nand handling of data models in particle physics."
        },
        {
            "name": "py-jinja2",
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment."
        },
        {
            "name": "py-pyyaml",
            "description": "PyYAML is a YAML parser and emitter for Python."
        },
        {
            "name": "hepmc",
            "description": "The HepMC package is an object oriented, C++ event record for High\nEnergy Physics Monte Carlo generators and simulation."
        },
        {
            "name": "hepmc3",
            "description": "The HepMC package is an object oriented, C++ event record for High\nEnergy Physics Monte Carlo generators and simulation."
        },
        {
            "name": "heppdt",
            "description": "The HepPID library contains translation methods for particle ID's to and\nfrom various Monte Carlo generators and the PDG standard numbering\nscheme. We realize that the generators adhere closely to the standard,\nbut there are occasional differences."
        },
        {
            "name": "catch2",
            "description": "Catch2 is a multi-paradigm test framework for C++, which also supports\nObjective-C (and maybe C)."
        }
    ],
    "dependent_to": [
        {
            "name": "dd4hep",
            "description": "DD4hep is a software framework for providing a complete solution for\nfull detector description (geometry, materials, visualization, readout,\nalignment, calibration, etc.) for the full experiment life cycle\n(detector concept development, detector optimization, construction,\noperation). It offers a consistent description through a single source\nof detector information for simulation, reconstruction, analysis, etc.\nIt distributed under the LGPLv3 License."
        }
    ]
}