{
    "name": "tangram",
    "aliases": [],
    "versions": [
        {
            "name": "1.0.5",
            "sha256": "4fa61d5fecd67215237ab3df8fe64bc6c4d018b22313f2174923486026e93e53"
        },
        {
            "name": "1.0.1",
            "sha256": "8f2f8c01bb2d726b0f64e5a5bc3aa2bd8057ccaee7a29c68f1439d16e39aaa90"
        },
        {
            "name": "master",
            "branch": "master",
            "submodules": true
        }
    ],
    "latest_version": "1.0.5",
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "name": "+jali~mpi",
            "spec": "",
            "description": "None"
        },
        {
            "name": "+thrust +cuda",
            "spec": "",
            "description": "None"
        },
        {
            "name": "+thrust +kokkos",
            "spec": "",
            "description": "None"
        }
    ],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "mpi",
            "default": false,
            "description": "Enable interface reconstruction with MPI"
        },
        {
            "name": "thrust",
            "default": false,
            "description": "Enable on-node parallelism with NVidia Thrust"
        },
        {
            "name": "kokkos",
            "default": false,
            "description": "Enable on-node or device parallelism with Kokkos"
        },
        {
            "name": "openmp",
            "default": false,
            "description": "Enable on-node parallelism using OpenMP"
        },
        {
            "name": "cuda",
            "default": false,
            "description": "Enable GPU parallelism using CUDA"
        },
        {
            "name": "jali",
            "default": false,
            "description": "Build with Jali mesh infrastructure (for testing)"
        }
    ],
    "homepage": "https://portage.lanl.gov",
    "maintainers": [
        "raovgarimella"
    ],
    "patches": [],
    "resources": [],
    "description": "Tangram is an material interface reconstruction package used in\nmultimaterial ALE codes and multi-material remapping\n(https://github.com/laristra/portage)\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "mpi",
            "description": "Intel MPI. This package has been replaced by intel-oneapi-mpi. LICENSE\nINFORMATION: By downloading and using this software, you agree to the\nterms and conditions of the software license agreements at\nhttps://intel.ly/393CijO."
        },
        {
            "name": "wonton",
            "description": "Wonton is a support package for the Portage\n(https://github.com/laristra/portage) and Tangram\n(https://github.com/laristra/tangram) libraries. It contains some\nmesh/state classes, wrappers for other mesh/state libraries and some\nutilities required by Portage and Tangram."
        }
    ],
    "dependent_to": [
        {
            "name": "portage",
            "description": "Portage is a framework that computational physics applications can use\nto build a highly customized, hybrid parallel (MPI+X) conservative\nremapping library for transfer of field data between meshes."
        }
    ]
}