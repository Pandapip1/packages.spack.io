{
    "name": "perl-config-inifiles",
    "aliases": [],
    "versions": [
        {
            "name": "3.000003",
            "sha256": "3c457b65d98e5ff40bdb9cf814b0d5983eb0c53fb8696bda3ba035ad2acd6802"
        }
    ],
    "latest_version": "3.000003",
    "build_system": "PerlPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "perl",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://metacpan.org/pod/Config::IniFiles",
    "maintainers": [
        "EbiArnie"
    ],
    "patches": [],
    "resources": [],
    "description": "A module for reading .ini-style configuration files.\n",
    "dependencies": [
        {
            "name": "perl",
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development."
        },
        {
            "name": "perl-io-stringy",
            "description": "This toolkit primarily provides modules for performing both traditional\nand object-oriented i/o) on things other than normal filehandles; in\nparticular, IO::Scalar, IO::ScalarArray, and IO::Lines. In the more-\ntraditional IO::Handle front, we have IO::AtomicFile which may be used\nto painlessly create files which are updated atomically. And in the\n\"this-may-prove-useful\" corner, we have IO::Wrap, whose exported\nwraphandle() function will clothe anything that's not a blessed object\nin an IO::Handle-like wrapper... so you can just use OO syntax and stop\nworrying about whether your function's caller handed you a string, a\nglobref, or a FileHandle."
        }
    ],
    "dependent_to": []
}