{
    "name": "exaca",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "1.2.0",
            "sha256": "5038d63de96c6142ddea956998e1f4ebffbc4a5723caa4da0e73eb185e6623e4"
        },
        {
            "name": "1.1.0",
            "sha256": "10106fb1836964a19bc5bab3f374baa24188ba786c768e554442ab896b31ff24"
        },
        {
            "name": "1.0.0",
            "sha256": "48556233360a5e15e1fc20849e57dd60739c1991c7dfc7e6b2956af06688b96a"
        }
    ],
    "latest_version": "1.2.0",
    "build_system": "CMakePackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "cmake",
            "description": "Build systems supported by the package"
        },
        {
            "name": "build_type",
            "default": "Release",
            "description": "CMake build type"
        },
        {
            "name": "ipo",
            "default": false,
            "description": "CMake interprocedural optimization"
        },
        {
            "name": "generator",
            "default": "make",
            "description": "the build system generator to use"
        },
        {
            "name": "cuda",
            "default": false,
            "description": "Whether to build CUDA backend"
        },
        {
            "name": "openmp",
            "default": false,
            "description": "Whether to build OpenMP backend"
        },
        {
            "name": "threads",
            "default": false,
            "description": "Whether to build the C++ threads backend"
        },
        {
            "name": "serial",
            "default": true,
            "description": "Whether to build serial backend"
        },
        {
            "name": "rocm",
            "default": false,
            "description": "Whether to build HIP backend"
        },
        {
            "name": "sycl",
            "default": false,
            "description": "Whether to build the SYCL backend"
        },
        {
            "name": "openmptarget",
            "default": false,
            "description": "Whether to build the OpenMPTarget backend"
        },
        {
            "name": "shared",
            "default": true,
            "description": "Build shared libraries"
        },
        {
            "name": "testing",
            "default": false,
            "description": "Build unit tests"
        }
    ],
    "homepage": "https://github.com/LLNL/ExaCA",
    "maintainers": [
        "MattRolchigo",
        "streeve"
    ],
    "patches": [],
    "resources": [],
    "description": "ExaCA: an exascale cellular automata application for alloy\nsolidification modeling\n",
    "dependencies": [
        {
            "name": "cmake",
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software."
        },
        {
            "name": "gmake",
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files."
        },
        {
            "name": "ninja",
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible."
        },
        {
            "name": "googletest",
            "description": "Google test framework for C++. Also called gtest."
        },
        {
            "name": "kokkos",
            "description": "Kokkos implements a programming model in C++ for writing performance\nportable applications targeting all major HPC platforms."
        },
        {
            "name": "mpi",
            "description": "Intel MPI. This package has been deprecated. Use intel-oneapi-mpi\ninstead. LICENSE INFORMATION: By downloading and using this software,\nyou agree to the terms and conditions of the software license agreements\nat https://intel.ly/393CijO."
        },
        {
            "name": "nlohmann-json",
            "description": "JSON for Modern C++"
        }
    ],
    "dependent_to": []
}