{
    "name": "py-pytools",
    "aliases": [],
    "versions": [
        {
            "name": "2022.1.14",
            "sha256": "41017371610bb2a03685597c5285205e6597c7f177383d95c8b871244b12c14e"
        },
        {
            "name": "2022.1.12",
            "sha256": "4d62875e9a2ab2a24e393a9a8b799492f1a721bffa840af3807bfd42871dd1f4"
        },
        {
            "name": "2021.2.9",
            "sha256": "db6cf83c9ba0a165d545029e2301621486d1e9ef295684072e5cd75316a13755"
        },
        {
            "name": "2019.1.1",
            "sha256": "ce2d702ae4ef10a70197b00b93141461140d00578f2a862fa946ca1446a300db"
        },
        {
            "name": "2016.2.6",
            "sha256": "6dd49932b8f81a8b622685cff3dd515e351a9290aef0fd5d020e4df00c06aa95"
        }
    ],
    "latest_version": "2022.1.14",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        },
        {
            "name": "numpy",
            "default": false,
            "description": "Add numpy dependency"
        }
    ],
    "homepage": "https://github.com/inducer/pytools",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "A collection of tools for Python\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-decorator",
            "description": "The aim of the decorator module it to simplify the usage of decorators\nfor the average programmer, and to popularize decorators by showing\nvarious non-trivial examples."
        },
        {
            "name": "py-appdirs",
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\"."
        },
        {
            "name": "py-platformdirs",
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\""
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-typing-extensions",
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing)."
        }
    ],
    "dependent_to": [
        {
            "name": "py-pyopencl",
            "description": "Python wrapper for OpenCL."
        },
        {
            "name": "py-modepy",
            "description": "Basis Functions and Node Sets for Interpolation"
        },
        {
            "name": "py-pyfr",
            "description": "PyFR is an open-source Python based framework for solving advection-\ndiffusion type problems on streaming architectures using the Flux\nReconstruction approach of Huynh."
        },
        {
            "name": "py-pymbolic",
            "description": "A simple package to do symbolic math (focus on code gen and DSLs)"
        },
        {
            "name": "py-pycuda",
            "description": "PyCUDA gives you easy, Pythonic access to Nvidia's CUDA parallel\ncomputation API"
        },
        {
            "name": "py-codepy",
            "description": "CodePy is a C metaprogramming toolkit for Python. It handles two aspects\nof metaprogramming: - Generating C source code. - Compiling this source\ncode and dynamically loading it into the Python interpreter."
        },
        {
            "name": "py-cgen",
            "description": "cgen offers a simple abstract syntax tree for C and related languages\n(C++/CUDA/OpenCL) to allow structured code generation from Python."
        },
        {
            "name": "py-gmsh-interop",
            "description": "Interoperability between Python and Gmsh"
        },
        {
            "name": "py-meshpy",
            "description": "Simplicial Mesh Generation from Python"
        },
        {
            "name": "py-pynucleus",
            "description": "PyNucleus is a finite element code that specifically targets nonlocal\noperators."
        }
    ]
}