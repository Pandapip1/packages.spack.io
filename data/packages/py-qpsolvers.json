{
    "name": "py-qpsolvers",
    "aliases": [],
    "versions": [
        {
            "name": "3.2.0",
            "sha256": "770a2b40ff827e251a30df97e9d518fd4859621fc02a323c3b6407cf2fbf4f34"
        },
        {
            "name": "3.1.0",
            "sha256": "f6becafc4667236a67276fa0baee1697c904c37498c5161fa40c605209269b4d"
        }
    ],
    "latest_version": "3.2.0",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/qpsolvers/qpsolvers",
    "maintainers": [
        "meyersbs"
    ],
    "patches": [],
    "resources": [],
    "description": "Unified interface to convex Quadratic Programming (QP) solvers available\nin Python.\n",
    "dependencies": [
        {
            "name": "py-ecos",
            "description": "This is the Python package for ECOS: Embedded Cone Solver."
        },
        {
            "name": "py-flit-core",
            "description": "Distribution-building parts of Flit."
        },
        {
            "name": "py-numpy",
            "description": "Fundamental package for array computing in Python."
        },
        {
            "name": "py-osqp",
            "description": "OSQP: The Operator Splitting QP Solver"
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-scipy",
            "description": "Fundamental algorithms for scientific computing in Python."
        },
        {
            "name": "py-scs",
            "description": "SCS: splitting conic solver"
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "python",
            "description": "The Python programming language."
        }
    ],
    "dependent_to": [
        {
            "name": "py-dalib",
            "description": "Trans-Learn is a Transfer Learning library based on pure PyTorch with\nhigh performance and friendly API."
        }
    ]
}