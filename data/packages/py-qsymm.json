{
    "name": "py-qsymm",
    "aliases": [],
    "versions": [
        {
            "name": "1.2.7",
            "sha256": "9af92a30c3f72883c744d4717e4ec30c8b48121e208c10553e8e0e428fe43bbc"
        }
    ],
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [],
    "homepage": "https://gitlab.kwant-project.org/qt/qsymm",
    "maintainers": [
        "payerle"
    ],
    "patches": [],
    "resources": [],
    "description": "Qsymm is a symmetry finder and symmetric Hamiltonian generator. It\nautomatically generates model Hamiltonians from symmetry constraints and\nfinds the full symmetry group of your Hamiltonian.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-scipy",
            "description": "SciPy (pronounced \"Sigh Pie\") is a Scientific Library for Python. It\nprovides many user-friendly and efficient numerical routines such as\nroutines for numerical integration and optimization."
        },
        {
            "name": "py-sympy",
            "description": "SymPy is a Python library for symbolic mathematics."
        },
        {
            "name": "py-tinyarray",
            "description": "Tinyarrays are similar to NumPy arrays, but optimized for small sizes.\nCommon operations on very small arrays are to 3-7 times faster than with\nNumPy (with NumPy 1.6 it used to be up to 35 times), and 3 times less\nmemory is used to store them. Tinyarrays are useful if you need many\nsmall arrays of numbers, and cannot combine them into a few large ones."
        },
        {
            "name": "py-pytest-runner",
            "description": "Invoke py.test as distutils command with dependency resolution."
        }
    ],
    "dependent_to": []
}