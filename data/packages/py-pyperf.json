{
    "name": "py-pyperf",
    "aliases": [],
    "versions": [
        {
            "name": "1.6.1",
            "sha256": "fbe793f6f2e036ab4dcca105b5c5aa34fd331dd881e7a3e158e5e218c63cfc32"
        },
        {
            "name": "1.6.0",
            "sha256": "7af7b9cfd9d26548ab7127f8e51791357ecd78cda46aad5b2d9664a70fc58878"
        },
        {
            "name": "1.5.1",
            "sha256": "9c271862bc2911be8eb01031a4a86cbc3f5bb615971514383802d3dcf46f18ed"
        }
    ],
    "latest_version": "1.6.1",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/vstinner/pyperf",
    "maintainers": [
        "adamjstewart"
    ],
    "patches": [],
    "resources": [],
    "description": "The Python perf module is a toolkit to write, run and analyze\nbenchmarks.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "py-six",
            "description": "Python 2 and 3 compatibility utilities."
        }
    ],
    "dependent_to": [
        {
            "name": "py-performance",
            "description": "The performance project is intended to be an authoritative source of\nbenchmarks for all Python implementations. The focus is on real-world\nbenchmarks, rather than synthetic benchmarks, using whole applications\nwhen possible."
        }
    ]
}