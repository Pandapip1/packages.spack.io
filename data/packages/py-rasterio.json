{
    "name": "py-rasterio",
    "aliases": [],
    "versions": [
        {
            "name": "master",
            "branch": "master"
        },
        {
            "name": "1.3.6",
            "sha256": "c8b90eb10e16102d1ab0334a7436185f295de1c07f0d197e206d1c005fc33905"
        },
        {
            "name": "1.3.5",
            "sha256": "92358c3d4d5d6f3c7cd2812c8832d5175abce02b11bc101ac9548ff07163e8e2"
        },
        {
            "name": "1.3.4",
            "sha256": "5a8771405276ecf00b8ee927bd0a81ec21778dcfc97e4a37d0b388f10c9a41a8"
        },
        {
            "name": "1.3.3",
            "sha256": "b6fb1f12489f3a678c05ddcb78a74f0b6f63836219f51c0541e505f5e5208e7d"
        },
        {
            "name": "1.3.2",
            "sha256": "a91b32f649bc5aa3259909349258eb7999b7e830375f63cd37ade2082066ec1c"
        },
        {
            "name": "1.3.1",
            "sha256": "91a22c512862e6411def675cd864eb63000ec2e0922c8bf25834c631ba80bdc1"
        },
        {
            "name": "1.3.0",
            "sha256": "90171035e5b201cdb85a9abd60181426366040d4ca44706958db982a030f8dc4"
        },
        {
            "name": "1.2.10",
            "sha256": "6062456047ba6494fe18bd0da98a383b6fad5306b16cd52a22e76c59172a2b5f"
        },
        {
            "name": "1.2.3",
            "sha256": "d8c345e01052b70ac3bbbe100c83def813c0ab19f7412c2c98e553d03720c1c5"
        },
        {
            "name": "1.1.8",
            "sha256": "f7cac7e2ecf65b4b1eb78c994c63bd429b67dc679b0bc0ecfe487d3d5bf88fd5"
        },
        {
            "name": "1.1.5",
            "sha256": "ebe75c71f9257c780615caaec8ef81fa4602702cf9290a65c213e1639284acc9"
        },
        {
            "name": "1.0.24",
            "sha256": "4839479621045211f66868ec49625979693450bc2e476f23e7e8ac4804eaf452"
        },
        {
            "name": "1.0a12",
            "sha256": "47d460326e04c64590ff56952271a184a6307f814efc34fb319c12e690585f3c"
        }
    ],
    "latest_version": "1.3.6",
    "build_system": "PythonPackage",
    "conflicts": [],
    "variants": [
        {
            "name": "build_system",
            "default": "python_pip",
            "description": "Build systems supported by the package"
        }
    ],
    "homepage": "https://github.com/rasterio/rasterio",
    "maintainers": [
        "adamjstewart",
        "pradyunsg"
    ],
    "patches": [],
    "resources": [],
    "description": "Rasterio reads and writes geospatial raster data. Geographic information\nsystems use GeoTIFF and other formats to organize and store gridded, or\nraster, datasets. Rasterio reads and writes these formats and provides a\nPython API based on N-D arrays.\n",
    "dependencies": [
        {
            "name": "python",
            "description": "The Python programming language."
        },
        {
            "name": "py-pip",
            "description": "The PyPA recommended tool for installing Python packages."
        },
        {
            "name": "py-wheel",
            "description": "A built-package format for Python."
        },
        {
            "name": "py-cython",
            "description": "The Cython compiler for writing C extensions for the Python language."
        },
        {
            "name": "py-affine",
            "description": "Matrices describing affine transformation of the plane."
        },
        {
            "name": "py-attrs",
            "description": "Classes Without Boilerplate"
        },
        {
            "name": "py-certifi",
            "description": "Certifi: A carefully curated collection of Root Certificates for\nvalidating the trustworthiness of SSL certificates while verifying the\nidentity of TLS hosts."
        },
        {
            "name": "py-click",
            "description": "Python composable command line interface toolkit."
        },
        {
            "name": "py-cligj",
            "description": "Common arguments and options for GeoJSON processing commands, using\nClick."
        },
        {
            "name": "py-numpy",
            "description": "NumPy is the fundamental package for scientific computing with Python.\nIt contains among other things: a powerful N-dimensional array object,\nsophisticated (broadcasting) functions, tools for integrating C/C++ and\nFortran code, and useful linear algebra, Fourier transform, and random\nnumber capabilities"
        },
        {
            "name": "py-snuggs",
            "description": "Snuggs are s-expressions for Numpy"
        },
        {
            "name": "py-click-plugins",
            "description": "An extension module for py-click to register external CLI commands via\nsetuptools entry-points."
        },
        {
            "name": "py-setuptools",
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages."
        },
        {
            "name": "gdal",
            "description": "GDAL: Geospatial Data Abstraction Library. GDAL is a translator library\nfor raster and vector geospatial data formats that is released under an\nMIT style Open Source License by the Open Source Geospatial Foundation.\nAs a library, it presents a single raster abstract data model and single\nvector abstract data model to the calling application for all supported\nformats. It also comes with a variety of useful command line utilities\nfor data translation and processing."
        }
    ],
    "dependent_to": [
        {
            "name": "py-contextily",
            "description": "Context geo-tiles in Python."
        },
        {
            "name": "py-rioxarray",
            "description": "rasterio xarray extension."
        },
        {
            "name": "py-torchgeo",
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data. TorchGeo is a PyTorch domain library, similar to\ntorchvision, providing datasets, samplers, transforms, and pre-trained\nmodels specific to geospatial data."
        },
        {
            "name": "py-rasterstats",
            "description": "rasterstats is a Python module for summarizing geospatial raster\ndatasets based on vector geometries. It includes functions for zonal\nstatistics and interpolated point queries. The command-line interface\nallows for easy interperability with other GeoJSON tools."
        },
        {
            "name": "py-geocube",
            "description": "Tool to convert geopandas vector data into rasterized xarray data."
        },
        {
            "name": "py-xarray",
            "description": "N-D labeled arrays and datasets in Python"
        },
        {
            "name": "py-datacube",
            "description": "An analysis environment for satellite and other earth observation data."
        }
    ]
}